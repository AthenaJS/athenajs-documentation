[
  {
    "comment": "/**\n * The `Scene` is used to display your objects. In AthenaJS you first add objects onto the scene.\n * \n * When you scene is rendered (at 60fps), your objects appear on the screen.\n *\n * Instead of creating a new scene, it is common to extend the Scene class to create your own scene.\n * @example\n * import { Scene, SimpleText } from 'athenajs';\n * \n * class MyScene extends Scene{\n *     start() {\n *         const myText = new SimpleText('my text', {\n *             text: 'This is a test',\n *             color: 'black'\n *         });\n *         // add the object onto the scene\n *         this.addObject(myText);\n *     }\n * };\n */",
    "meta": {
      "range": [
        916,
        20796
      ],
      "filename": "Scene.js",
      "lineno": 29,
      "columnno": 0,
      "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
      "code": {
        "id": "astnode100000564",
        "name": "Scene",
        "type": "ClassDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "classdesc": "The `Scene` is used to display your objects. In AthenaJS you first add objects onto the scene.\n\nWhen you scene is rendered (at 60fps), your objects appear on the screen.\n\nInstead of creating a new scene, it is common to extend the Scene class to create your own scene.",
    "examples": [
      "import { Scene, SimpleText } from 'athenajs';\n\nclass MyScene extends Scene{\n    start() {\n        const myText = new SimpleText('my text', {\n            text: 'This is a test',\n            color: 'black'\n        });\n        // add the object onto the scene\n        this.addObject(myText);\n    }\n};"
    ],
    "name": "Scene",
    "longname": "Scene",
    "kind": "class",
    "scope": "global",
    "description": "Creates a new Scene",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "options"
      },
      {
        "type": {
          "names": [
            "String"
          ]
        },
        "optional": true,
        "defaultvalue": "\"Scene\"+timestamp",
        "description": "The name of your scene.",
        "name": "options.name"
      },
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "optional": true,
        "description": "An optional array of resources of the form: `{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.",
        "name": "options.resources"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 2,
        "description": "The number of layers: layers are stacked above the backgrounds.",
        "name": "options.layers"
      },
      {
        "type": {
          "names": [
            "Number"
          ]
        },
        "optional": true,
        "defaultvalue": 1,
        "description": "The default opacity for the scene: can be usefull to have fadeIn effects when starting the scene.",
        "name": "options.opacity"
      },
      {
        "type": {
          "names": [
            "Scene"
          ]
        },
        "optional": true,
        "description": "Scenes can have an option `hud` scene that is automatically rendered on top of it. This allows to easily add score/status elements to games.",
        "name": "options.hudScene"
      }
    ],
    "$longname": "Scene",
    "$members": [
      {
        "comment": "/**\n     * Add one ore more display objects onto the scene\n     *\n     * @param {Array|Drawable} objects The object(s) to add onto the scene.\n     * @param {Number} [layerIndex=0] Defines the layer number where to add the objects.\n     */",
        "meta": {
          "range": [
            11510,
            12333
          ],
          "filename": "Scene.js",
          "lineno": 393,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001473",
            "name": "Scene#addObject",
            "type": "MethodDefinition",
            "paramnames": [
              "objects",
              "layerIndex"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Add one ore more display objects onto the scene",
        "params": [
          {
            "type": {
              "names": [
                "Array",
                "Drawable"
              ]
            },
            "description": "The object(s) to add onto the scene.",
            "name": "objects"
          },
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "optional": true,
            "defaultvalue": 0,
            "description": "Defines the layer number where to add the objects.",
            "name": "layerIndex"
          }
        ],
        "name": "addObject",
        "longname": "Scene#addObject",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#addObject"
      },
      {
        "comment": "/**\n     * Apply the specified effect to the scene\n     *\n     * @param {String} fxName The name of the effect to apply.\n     * @param {Object} options The options of the effect.\n     */",
        "meta": {
          "range": [
            20340,
            20432
          ],
          "filename": "Scene.js",
          "lineno": 731,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002174",
            "name": "Scene#animate",
            "type": "MethodDefinition",
            "paramnames": [
              "fxName",
              "options"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Apply the specified effect to the scene",
        "params": [
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The name of the effect to apply.",
            "name": "fxName"
          },
          {
            "type": {
              "names": [
                "Object"
              ]
            },
            "description": "The options of the effect.",
            "name": "options"
          }
        ],
        "name": "animate",
        "longname": "Scene#animate",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#animate"
      },
      {
        "comment": "/**\n     * Subscribe to a space-separated list of events.\n     *\n     * @param {String} eventList The list of events to subscribe to as a space separated string.\n     *\n     * @note Events are automatically unbound when changing scene.\n     */",
        "meta": {
          "range": [
            19603,
            19687
          ],
          "filename": "Scene.js",
          "lineno": 699,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002128",
            "name": "Scene#bindEvents",
            "type": "MethodDefinition",
            "paramnames": [
              "eventList"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Subscribe to a space-separated list of events.",
        "params": [
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The list of events to subscribe to as a space separated string.",
            "name": "eventList"
          }
        ],
        "tags": [
          {
            "originalTitle": "note",
            "title": "note",
            "text": "Events are automatically unbound when changing scene.",
            "value": "Events are automatically unbound when changing scene."
          }
        ],
        "name": "bindEvents",
        "longname": "Scene#bindEvents",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#bindEvents"
      },
      {
        "comment": "/**\n     * Simple debug method: only toggles map boxes for now\n     *\n     * @param {Boolean} [isDebug=undefined] if specified, this will be the new debug status, otherwise toggle current debug status\n     */",
        "meta": {
          "range": [
            7769,
            8139
          ],
          "filename": "Scene.js",
          "lineno": 271,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001160",
            "name": "Scene#debug",
            "type": "MethodDefinition",
            "paramnames": [
              "isDebug"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Simple debug method: only toggles map boxes for now",
        "params": [
          {
            "type": {
              "names": [
                "Boolean"
              ]
            },
            "optional": true,
            "description": "if specified, this will be the new debug status, otherwise toggle current debug status",
            "name": "isDebug"
          }
        ],
        "name": "debug",
        "longname": "Scene#debug",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#debug"
      },
      {
        "comment": "/**\n     * Returns the current opacity of the scene\n     *\n     * @returns {Number} The current opacity value.\n     */",
        "meta": {
          "range": [
            15100,
            15149
          ],
          "filename": "Scene.js",
          "lineno": 510,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001775",
            "name": "Scene#getOpacity",
            "type": "MethodDefinition",
            "paramnames": []
          },
          "vars": {
            "": null
          }
        },
        "description": "Returns the current opacity of the scene",
        "returns": [
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "description": "The current opacity value."
          }
        ],
        "name": "getOpacity",
        "longname": "Scene#getOpacity",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "params": [],
        "$longname": "Scene#getOpacity"
      },
      {
        "comment": "/**\n     * Get the total playtime\n     *\n     * @returns {Number} the total playtime in milliseconds\n     */",
        "meta": {
          "range": [
            17440,
            17675
          ],
          "filename": "Scene.js",
          "lineno": 626,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001991",
            "name": "Scene#getPlayTime",
            "type": "MethodDefinition",
            "paramnames": []
          },
          "vars": {
            "": null
          }
        },
        "description": "Get the total playtime",
        "returns": [
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "description": "the total playtime in milliseconds"
          }
        ],
        "name": "getPlayTime",
        "longname": "Scene#getPlayTime",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "params": [],
        "$longname": "Scene#getPlayTime"
      },
      {
        "comment": "/**\n     *\n     * Adds a new resource to be loaded later\n     *\n     */",
        "meta": {
          "range": [
            5586,
            5841
          ],
          "filename": "Scene.js",
          "lineno": 193,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100000983",
            "name": "Scene#load",
            "type": "MethodDefinition",
            "paramnames": [
              "type",
              "src",
              "id"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Adds a new resource to be loaded later",
        "name": "load",
        "longname": "Scene#load",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "params": [],
        "$longname": "Scene#load"
      },
      {
        "comment": "/**\n     * Adds an audio file to the scene resource list\n     *\n     * @param {String} src The url of the file to load.\n     * @param {String} id The id to use for the audio file.\n     *\n     * @note this method should be called in the `setup` method\n     */",
        "meta": {
          "range": [
            6446,
            6523
          ],
          "filename": "Scene.js",
          "lineno": 226,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001038",
            "name": "Scene#loadAudio",
            "type": "MethodDefinition",
            "paramnames": [
              "src",
              "id"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Adds an audio file to the scene resource list",
        "params": [
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The url of the file to load.",
            "name": "src"
          },
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The id to use for the audio file.",
            "name": "id",
            "defaultvalue": null
          }
        ],
        "tags": [
          {
            "originalTitle": "note",
            "title": "note",
            "text": "this method should be called in the `setup` method",
            "value": "this method should be called in the `setup` method"
          }
        ],
        "name": "loadAudio",
        "longname": "Scene#loadAudio",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#loadAudio"
      },
      {
        "comment": "/**\n     * Adds an image to the scene resource list\n     *\n     * @param {String} src The url of the file to load.\n     * @param {String} id The id to use for the image.\n     *\n     * @note this method should be called in the `setup` method\n     */",
        "meta": {
          "range": [
            6100,
            6177
          ],
          "filename": "Scene.js",
          "lineno": 214,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001020",
            "name": "Scene#loadImage",
            "type": "MethodDefinition",
            "paramnames": [
              "src",
              "id"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Adds an image to the scene resource list",
        "params": [
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The url of the file to load.",
            "name": "src"
          },
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The id to use for the image.",
            "name": "id",
            "defaultvalue": null
          }
        ],
        "tags": [
          {
            "originalTitle": "note",
            "title": "note",
            "text": "this method should be called in the `setup` method",
            "value": "this method should be called in the `setup` method"
          }
        ],
        "name": "loadImage",
        "longname": "Scene#loadImage",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#loadImage"
      },
      {
        "comment": "/**\n     * Adds a map file to the scene resource list\n     *\n     * @param {String} src The url of the file to load.\n     * @param {String} id The id to use for the map.\n     *\n     */",
        "meta": {
          "range": [
            6718,
            6791
          ],
          "filename": "Scene.js",
          "lineno": 237,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001056",
            "name": "Scene#loadMap",
            "type": "MethodDefinition",
            "paramnames": [
              "src",
              "id"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Adds a map file to the scene resource list",
        "params": [
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The url of the file to load.",
            "name": "src"
          },
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The id to use for the map.",
            "name": "id",
            "defaultvalue": null
          }
        ],
        "name": "loadMap",
        "longname": "Scene#loadMap",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#loadMap"
      },
      {
        "comment": "/**\n     * Notify the scene of an event\n     *\n     * @param {String} eventType The type of event to trigger.\n     * @param {any} data The data (if any) associated with the event.\n     */",
        "meta": {
          "range": [
            19282,
            19349
          ],
          "filename": "Scene.js",
          "lineno": 688,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002115",
            "name": "Scene#notify",
            "type": "MethodDefinition",
            "paramnames": [
              "eventType",
              "data"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Notify the scene of an event",
        "params": [
          {
            "type": {
              "names": [
                "String"
              ]
            },
            "description": "The type of event to trigger.",
            "name": "eventType"
          },
          {
            "type": {
              "names": [
                "any"
              ]
            },
            "description": "The data (if any) associated with the event.",
            "name": "data"
          }
        ],
        "name": "notify",
        "longname": "Scene#notify",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#notify"
      },
      {
        "comment": "/**\n     * onEvent is called once one of the registered events has been triggered.\n     *\n     * Override this scene as needed.\n     */",
        "meta": {
          "range": [
            19833,
            19851
          ],
          "filename": "Scene.js",
          "lineno": 708,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002146",
            "name": "Scene#onEvent",
            "type": "MethodDefinition",
            "paramnames": []
          },
          "vars": {
            "": null
          }
        },
        "description": "onEvent is called once one of the registered events has been triggered.\n\nOverride this scene as needed.",
        "name": "onEvent",
        "longname": "Scene#onEvent",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "params": [],
        "$longname": "Scene#onEvent"
      },
      {
        "comment": "/**\n     * Called when the scene is paused. This may happen for several reasons:\n     * - browser tab is hidden\n     * - debug is enabled and user pressed the p key\n     *\n     * @param {Boolean} isRunning\n     */",
        "meta": {
          "range": [
            17278,
            17321
          ],
          "filename": "Scene.js",
          "lineno": 617,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001984",
            "name": "Scene#pause",
            "type": "MethodDefinition",
            "paramnames": [
              "isRunning"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Called when the scene is paused. This may happen for several reasons:\n- browser tab is hidden\n- debug is enabled and user pressed the p key",
        "params": [
          {
            "type": {
              "names": [
                "Boolean"
              ]
            },
            "name": "isRunning"
          }
        ],
        "name": "pause",
        "longname": "Scene#pause",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#pause"
      },
      {
        "comment": "/**\n     * Remove the specified object from the scene\n     *\n     * @param {Drawable} drawable The object to remove from the scene.\n     */",
        "meta": {
          "range": [
            20582,
            20794
          ],
          "filename": "Scene.js",
          "lineno": 740,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002190",
            "name": "Scene#removeObject",
            "type": "MethodDefinition",
            "paramnames": [
              "drawable"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Remove the specified object from the scene",
        "params": [
          {
            "type": {
              "names": [
                "Drawable"
              ]
            },
            "description": "The object to remove from the scene.",
            "name": "drawable"
          }
        ],
        "name": "removeObject",
        "longname": "Scene#removeObject",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#removeObject"
      },
      {
        "comment": "/**\n     * This method is responsible for drawing the scene and will be called 60 times a second.\n     *\n     * @param {Array<RenderingContext>} drawContexts The layers array to draw over.\n     * *note* When the scene is not running, this method isn't called at all.\n     */",
        "meta": {
          "range": [
            18499,
            18808
          ],
          "filename": "Scene.js",
          "lineno": 662,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002059",
            "name": "Scene#render",
            "type": "MethodDefinition",
            "paramnames": [
              "drawContexts"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "This method is responsible for drawing the scene and will be called 60 times a second.",
        "params": [
          {
            "type": {
              "names": [
                "Array.<RenderingContext>"
              ]
            },
            "description": "The layers array to draw over.\n*note* When the scene is not running, this method isn't called at all.",
            "name": "drawContexts"
          }
        ],
        "name": "render",
        "longname": "Scene#render",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#render"
      },
      {
        "comment": "/**\n     * Set a static (CSS) background image independently of the layers\n     *\n     * @param {(Image|String)} image The image to set as background.\n     * @obsolete\n     */",
        "meta": {
          "range": [
            15335,
            15684
          ],
          "filename": "Scene.js",
          "lineno": 520,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001783",
            "name": "Scene#setBackgroundImage",
            "type": "MethodDefinition",
            "paramnames": [
              "image"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Set a static (CSS) background image independently of the layers",
        "params": [
          {
            "type": {
              "names": [
                "Image",
                "String"
              ]
            },
            "description": "The image to set as background.",
            "name": "image"
          }
        ],
        "tags": [
          {
            "originalTitle": "obsolete",
            "title": "obsolete",
            "text": ""
          }
        ],
        "name": "setBackgroundImage",
        "longname": "Scene#setBackgroundImage",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#setBackgroundImage"
      },
      {
        "comment": "/**\n     * Attach the specified display to the scene\n     *\n     * @param {Display} display The display to attach the scene to.\n     */",
        "meta": {
          "range": [
            19997,
            20143
          ],
          "filename": "Scene.js",
          "lineno": 717,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002150",
            "name": "Scene#setDisplay",
            "type": "MethodDefinition",
            "paramnames": [
              "display"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Attach the specified display to the scene",
        "params": [
          {
            "type": {
              "names": [
                "Display"
              ]
            },
            "description": "The display to attach the scene to.",
            "name": "display"
          }
        ],
        "name": "setDisplay",
        "longname": "Scene#setDisplay",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#setDisplay"
      },
      {
        "comment": "/**\n     *\n     * @param {Number} layer Layer number.\n     * @param {Boolean} background Set to true to put layer in background, false for foreground.\n     */",
        "meta": {
          "range": [
            18977,
            19084
          ],
          "filename": "Scene.js",
          "lineno": 678,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002097",
            "name": "Scene#setLayerPriority",
            "type": "MethodDefinition",
            "paramnames": [
              "layer",
              "background"
            ]
          },
          "vars": {
            "": null
          }
        },
        "params": [
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "description": "Layer number.",
            "name": "layer"
          },
          {
            "type": {
              "names": [
                "Boolean"
              ]
            },
            "description": "Set to true to put layer in background, false for foreground.",
            "name": "background"
          }
        ],
        "name": "setLayerPriority",
        "longname": "Scene#setLayerPriority",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#setLayerPriority"
      },
      {
        "comment": "/**\n     * Associates the specified map with the scene: the map will then be used to render the scene.\n     * *note* The map can either be an instance of a Map or a class inheriting from Map, in which case\n     *\n     * @param {Map|Object} map The `Map` to use: it can be an instance of a Map inheriting class or\n     * an options Object that will be used to create a new {Map} instance\n     *\n     * @param {Number} [x=0] x Offset where to start drawing the map onto the scene.\n     * @param {Number} [y=0] y Offset where to start drawing the map onto the scene.\n     *\n     */",
        "meta": {
          "range": [
            10326,
            10640
          ],
          "filename": "Scene.js",
          "lineno": 346,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001342",
            "name": "Scene#setMap",
            "type": "MethodDefinition",
            "paramnames": [
              "map",
              "x",
              "y"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Associates the specified map with the scene: the map will then be used to render the scene.\n*note* The map can either be an instance of a Map or a class inheriting from Map, in which case",
        "params": [
          {
            "type": {
              "names": [
                "Map",
                "Object"
              ]
            },
            "description": "The `Map` to use: it can be an instance of a Map inheriting class or\nan options Object that will be used to create a new {Map} instance",
            "name": "map"
          },
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "optional": true,
            "defaultvalue": 0,
            "description": "x Offset where to start drawing the map onto the scene.",
            "name": "x"
          },
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "optional": true,
            "defaultvalue": 0,
            "description": "y Offset where to start drawing the map onto the scene.",
            "name": "y"
          }
        ],
        "name": "setMap",
        "longname": "Scene#setMap",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#setMap"
      },
      {
        "comment": "/**\n     * Changes the opacity of the scene\n     *\n     * @param {Number} opacity The new opacity.\n     */",
        "meta": {
          "range": [
            14912,
            14971
          ],
          "filename": "Scene.js",
          "lineno": 501,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001764",
            "name": "Scene#setOpacity",
            "type": "MethodDefinition",
            "paramnames": [
              "opacity"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "Changes the opacity of the scene",
        "params": [
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "description": "The new opacity.",
            "name": "opacity"
          }
        ],
        "name": "setOpacity",
        "longname": "Scene#setOpacity",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#setOpacity"
      },
      {
        "comment": "/**\n     * Public setup method: this method is called right after internal Scene._setup().\n     *\n     * You should overriden it in your own Scene instances.\n     */",
        "meta": {
          "range": [
            15860,
            15949
          ],
          "filename": "Scene.js",
          "lineno": 535,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001836",
            "name": "Scene#setup",
            "type": "MethodDefinition",
            "paramnames": []
          },
          "vars": {
            "": null
          }
        },
        "description": "Public setup method: this method is called right after internal Scene._setup().\n\nYou should overriden it in your own Scene instances.",
        "name": "setup",
        "longname": "Scene#setup",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "params": [],
        "$longname": "Scene#setup"
      },
      {
        "comment": "/**\n     * Starts the scene\n     *\n     */",
        "meta": {
          "range": [
            16860,
            16875
          ],
          "filename": "Scene.js",
          "lineno": 595,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100001958",
            "name": "Scene#start",
            "type": "MethodDefinition",
            "paramnames": []
          },
          "vars": {
            "": null
          }
        },
        "description": "Starts the scene",
        "name": "start",
        "longname": "Scene#start",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "params": [],
        "$longname": "Scene#start"
      },
      {
        "comment": "/**\n     * The run loop is where scene elements are moved and collisions are checked.\n     *\n     * The map, if there is one, is also updated here (viewport, new objects, etc)\n     *\n     * @param {Number} timestamp current times\n     */",
        "meta": {
          "range": [
            17923,
            18214
          ],
          "filename": "Scene.js",
          "lineno": 645,
          "columnno": 4,
          "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
          "code": {
            "id": "astnode100002027",
            "name": "Scene#update",
            "type": "MethodDefinition",
            "paramnames": [
              "timestamp"
            ]
          },
          "vars": {
            "": null
          }
        },
        "description": "The run loop is where scene elements are moved and collisions are checked.\n\nThe map, if there is one, is also updated here (viewport, new objects, etc)",
        "params": [
          {
            "type": {
              "names": [
                "Number"
              ]
            },
            "description": "current times",
            "name": "timestamp"
          }
        ],
        "name": "update",
        "longname": "Scene#update",
        "kind": "function",
        "memberof": "Scene",
        "scope": "instance",
        "$longname": "Scene#update"
      }
    ],
    "$constructor": {
      "comment": "/**\n     * Creates a new Scene\n     *\n     * @param {Object} options\n     * @param {String} [options.name=\"Scene\"+timestamp] The name of your scene.\n     * @param {Object} [options.resources] An optional array of resources of the form: `{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.\n     * @param {Number} [options.layers=2] The number of layers: layers are stacked above the backgrounds.\n     * @param {Number} [options.opacity=1] The default opacity for the scene: can be usefull to have fadeIn effects when starting the scene.\n     * @param {Scene} [options.hudScene] Scenes can have an option `hud` scene that is automatically rendered on top of it. This allows to easily add score/status elements to games.\n     */",
      "meta": {
        "range": [
          1711,
          2704
        ],
        "filename": "Scene.js",
        "lineno": 40,
        "columnno": 4,
        "path": "e:\\Docs\\Dev\\athenajs\\js\\Scene",
        "code": {
          "id": "astnode100000567",
          "name": "Scene",
          "type": "MethodDefinition",
          "paramnames": [
            "options"
          ]
        },
        "vars": {
          "": null
        }
      },
      "description": "Creates a new Scene",
      "params": [
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "name": "options"
        },
        {
          "type": {
            "names": [
              "String"
            ]
          },
          "optional": true,
          "defaultvalue": "\"Scene\"+timestamp",
          "description": "The name of your scene.",
          "name": "options.name"
        },
        {
          "type": {
            "names": [
              "Object"
            ]
          },
          "optional": true,
          "description": "An optional array of resources of the form: `{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.",
          "name": "options.resources"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": 2,
          "description": "The number of layers: layers are stacked above the backgrounds.",
          "name": "options.layers"
        },
        {
          "type": {
            "names": [
              "Number"
            ]
          },
          "optional": true,
          "defaultvalue": 1,
          "description": "The default opacity for the scene: can be usefull to have fadeIn effects when starting the scene.",
          "name": "options.opacity"
        },
        {
          "type": {
            "names": [
              "Scene"
            ]
          },
          "optional": true,
          "description": "Scenes can have an option `hud` scene that is automatically rendered on top of it. This allows to easily add score/status elements to games.",
          "name": "options.hudScene"
        }
      ],
      "name": "Scene",
      "longname": "Scene",
      "kind": "class",
      "scope": "global",
      "undocumented": true,
      "$longname": "Scene"
    }
  }
]