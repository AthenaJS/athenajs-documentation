!function(t,e){"function"==typeof define&&define.amd&&!0===define.amd.dust?define("dust.core",[],e):"object"==typeof exports?module.exports=e():t.dust=e()}(this,function(){var dust={version:"2.7.5"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){},e,g,d;function getTemplate(t,e){if(t)return"function"==typeof t&&t.template?t.template:dust.isTemplateFn(t)?t:!1!==e?dust.cache[t]:void 0}function load(e,t,i){if(!e)return t.setError(new Error("No template or template name provided to render"));var n=getTemplate(e,dust.config.cache);return n?n(t,Context.wrap(i,n.templateName)):dust.onLoad?t.map(function(r){var o=e;function t(t,e){var n;if(t)return r.setError(t);if(!(n=getTemplate(e,!1)||getTemplate(o,dust.config.cache))){if(!dust.compile)return r.setError(new Error("Dust compiler not available"));n=dust.loadSource(dust.compile(e,o))}n(r,Context.wrap(i,n.templateName)).end()}3===dust.onLoad.length?dust.onLoad(o,i.options,t):dust.onLoad(o,t)}):t.setError(new Error("Template Not Found: "+e))}function Context(t,e,n,r,o){void 0===t||t instanceof Stack||(t=new Stack(t)),this.stack=t,this.global=e,this.options=n,this.blocks=r,this.templateName=o,this._isContext=!0}function getWithResolvedData(e,n,r){return function(t){return e.push(t)._get(n,r)}}function Stack(t,e,n,r){this.tail=e,this.isObject=t&&"object"==typeof t,this.head=t,this.index=n,this.of=r}function Stub(t){this.head=new Chunk(this),this.callback=t,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(t,e,n){this.root=t,this.next=e,this.data=[],this.flushable=!1,this.taps=n}for(var f in dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},d={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4},g="undefined"!=typeof console&&console.log?"function"==typeof(e=console.log)?function(){e.apply(console,arguments)}:function(){e(Array.prototype.slice.apply(arguments).join(" "))}:EMPTY_FUNC,dust.log=function(t,e){d[e=e||INFO]>=d[dust.debugLevel]&&g("[DUST:"+e+"]",t)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG),dust.helpers={},dust.cache={},dust.register=function(t,e){t&&(e.templateName=t,!1!==dust.config.cache&&(dust.cache[t]=e))},dust.render=function(t,e,n){var r=new Stub(n).head;try{load(t,r,e).end()}catch(t){r.setError(t)}},dust.stream=function(t,e){var n=new Stream,r=n.head;return dust.nextTick(function(){try{load(t,r,e).end()}catch(t){r.setError(t)}}),n},dust.loadSource=function(source){return eval(source)},Array.isArray?dust.isArray=Array.isArray:dust.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)},dust.nextTick=function(t){setTimeout(t,0)},dust.isEmpty=function(t){return 0!==t&&(!(!dust.isArray(t)||t.length)||!t)},dust.isEmptyObject=function(t){var e;if(null===t)return!1;if(void 0===t)return!1;if(0<t.length)return!1;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0},dust.isTemplateFn=function(t){return"function"==typeof t&&t.__dustBody},dust.isThenable=function(t){return t&&"object"==typeof t&&"function"==typeof t.then},dust.isStreamable=function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pipe},dust.filter=function(t,e,n,r){var o,i,s,u;if(n)for(o=0,i=n.length;o<i;o++)(s=n[o]).length&&(u=dust.filters[s],"s"===s?e=null:"function"==typeof u?t=u(t,r):dust.log("Invalid filter `"+s+"`",WARN));return e&&(t=dust.filters[e](t,r)),t},dust.filters={h:function(t){return dust.escapeHtml(t)},j:function(t){return dust.escapeJs(t)},u:encodeURI,uc:encodeURIComponent,js:function(t){return dust.escapeJSON(t)},jp:function(t){return JSON?JSON.parse(t):(dust.log("JSON is undefined; could not parse `"+t+"`",WARN),t)}},dust.makeBase=dust.context=function(t,e){return new Context(void 0,t,e)},dust.isContext=function(t){return"object"==typeof t&&!0===t._isContext},Context.wrap=function(t,e){return dust.isContext(t)?t:new Context(t,{},{},null,e)},Context.prototype.get=function(t,e){return"string"==typeof t&&("."===t[0]&&(e=!0,t=t.substr(1)),t=t.split(".")),this._get(e,t)},Context.prototype._get=function(t,e){var n,r,o,i,s,u=this.stack||{},a=1;if(r=e[0],o=e.length,t&&0===o)u=(i=u).head;else{if(t)u&&(u=u.head?u.head[r]:void 0);else{for(;u&&(!u.isObject||(i=u.head,void 0===(n=u.head[r])));)u=u.tail;u=void 0!==n?n:this.global&&this.global[r]}for(;u&&a<o;){if(dust.isThenable(u))return u.then(getWithResolvedData(this,t,e.slice(a)));u=(i=u)[e[a]],a++}}return"function"==typeof u?((s=function(){try{return u.apply(i,arguments)}catch(t){throw dust.log(t,ERROR),t}}).__dustBody=!!u.__dustBody,s):(void 0===u&&dust.log("Cannot find reference `{"+e.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),u)},Context.prototype.getPath=function(t,e){return this._get(t,e)},Context.prototype.push=function(t,e,n){return void 0===t?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(t,this.stack,e,n))},Context.prototype.pop=function(){var t=this.current();return this.stack=this.stack&&this.stack.tail,t},Context.prototype.rebase=function(t){return new Context(t,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var t=this.rebase();return t.stack=this.stack,t},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(t){var e,n,r;if("function"==typeof t&&(t=t(new Chunk,this).data.join("")),!(e=this.blocks))return dust.log("No blocks for context `"+t+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(n=e.length;n--;)if(r=e[n][t])return r;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(t){var e,n=this.blocks;return t?(e=n?n.concat([t]):[t],new Context(this.stack,this.global,this.options,e,this.getTemplateName())):this},Context.prototype.resolve=function(t){var e;return"function"!=typeof t?t:(e=(new Chunk).render(t,this))instanceof Chunk?e.data.join(""):e},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.callback(t.error),dust.log("Rendering failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=t.data.join(""),t=t.next,this.head=t}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var t=this.head;t;){if(!t.flushable)return t.error?(this.emit("error",t.error),this.emit("end"),dust.log("Streaming failed with error `"+t.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",t.data.join("")),t=t.next,this.head=t}this.emit("end")},Stream.prototype.emit=function(t,e){var n,r,o=(this.events||{})[t]||[];if(!o.length)return dust.log("Stream broadcasting, but no listeners for `"+t+"`",DEBUG),!1;for(n=0,r=(o=o.slice(0)).length;n<r;n++)o[n](e);return!0},Stream.prototype.on=function(t,e){var n=this.events=this.events||{},r=n[t]=n[t]||[];return"function"!=typeof e?dust.log("No callback function provided for `"+t+"` event listener",WARN):r.push(e),this},Stream.prototype.pipe=function(e){if("function"!=typeof e.write||"function"!=typeof e.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var n=!1;return"function"==typeof e.emit&&e.emit("pipe",this),"function"==typeof e.on&&e.on("error",function(){n=!0}),this.on("data",function(t){if(!n)try{e.write(t,"utf8")}catch(t){dust.log(t,ERROR)}}).on("end",function(){if(!n)try{e.end(),n=!0}catch(t){dust.log(t,ERROR)}})},Chunk.prototype.write=function(t){var e=this.taps;return e&&(t=e.go(t)),this.data.push(t),this},Chunk.prototype.end=function(t){return t&&this.write(t),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(t){var e=new Chunk(this.root,this.next,this.taps),n=new Chunk(this.root,e,this.taps);this.next=n,this.flushable=!0;try{t(n)}catch(t){dust.log(t,ERROR),n.setError(t)}return e},Chunk.prototype.tap=function(t){var e=this.taps;return this.taps=e?e.push(t):new Tap(t),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(t,e){return t(this,e)},Chunk.prototype.reference=function(t,e,n,r){return"function"==typeof t?(t=t.apply(e.current(),[this,e,null,{auto:n,filters:r}]))instanceof Chunk?t:this.reference(t,e,n,r):dust.isThenable(t)?this.await(t,e,null,n,r):dust.isStreamable(t)?this.stream(t,e,null,n,r):dust.isEmpty(t)?this:this.write(dust.filter(t,n,r,e))},Chunk.prototype.section=function(t,e,n,r){var o,i,s,u=n.block,a=n.else,c=this;if("function"==typeof t&&!dust.isTemplateFn(t)){try{t=t.apply(e.current(),[this,e,n,r])}catch(t){return dust.log(t,ERROR),this.setError(t)}if(t instanceof Chunk)return t}if(dust.isEmptyObject(n))return c;if(dust.isEmptyObject(r)||(e=e.push(r)),dust.isArray(t)){if(u){if(0<(i=t.length)){for((s=e.stack&&e.stack.head||{}).$len=i,o=0;o<i;o++)s.$idx=o,c=u(c,e.push(t[o],o,i));return s.$idx=void 0,s.$len=void 0,c}if(a)return a(this,e)}}else{if(dust.isThenable(t))return this.await(t,e,n);if(dust.isStreamable(t))return this.stream(t,e,n);if(!0===t){if(u)return u(this,e)}else if(t||0===t){if(u)return u(this,e.push(t))}else if(a)return a(this,e)}return dust.log("Section without corresponding key in template `"+e.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(o)return o(this,e)}else{if(r)return r(this,e);dust.log("No block for exists check in template `"+e.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(t,e,n){var r=n.block,o=n.else;if(dust.isEmpty(t)){if(r)return r(this,e);dust.log("No block for not-exists check in template `"+e.getTemplateName()+"`",DEBUG)}else if(o)return o(this,e);return this},Chunk.prototype.block=function(t,e,n){var r=t||n.block;return r?r(this,e):this},Chunk.prototype.partial=function(t,e,n,r){var o;return void 0===r&&(r=n,n=e),dust.isEmptyObject(r)||(o=(n=n.clone()).pop(),n=n.push(r).push(o)),dust.isTemplateFn(t)?this.capture(t,e,function(t,e){load(n.templateName=t,e,n).end()}):load(n.templateName=t,this,n)},Chunk.prototype.helper=function(e,t,n,r,o){var i,s=this,u=r.filters;if(void 0===o&&(o="h"),!dust.helpers[e])return dust.log("Helper `"+e+"` does not exist",WARN),s;try{return(i=dust.helpers[e](s,t,n,r))instanceof Chunk?i:("string"==typeof u&&(u=u.split("|")),dust.isEmptyObject(n)?s.reference(i,t,o,u):s.section(i,t,n,r))}catch(t){return dust.log("Error in helper `"+e+"`: "+t.message,ERROR),s.setError(t)}},Chunk.prototype.await=function(t,r,o,e,i){return this.map(function(n){t.then(function(t){(n=o?n.section(t,r,o):n.reference(t,r,e,i)).end()},function(t){var e=o&&o.error;e?n.render(e,r.push(t)).end():(dust.log("Unhandled promise rejection in `"+r.getTemplateName()+"`",INFO),n.end())})})},Chunk.prototype.stream=function(t,o,i,s,u){var a=i&&i.block,e=i&&i.error;return this.map(function(n){var r=!1;t.on("data",function(e){r||(a?n=n.map(function(t){t.render(a,o.push(e)).end()}):i||(n=n.reference(e,o,s,u)))}).on("error",function(t){r||(e?n.render(e,o.push(t)):dust.log("Unhandled stream error in `"+o.getTemplateName()+"`",INFO),r||(r=!0,n.end()))}).on("end",function(){r||(r=!0,n.end())})})},Chunk.prototype.capture=function(e,r,o){return this.map(function(n){var t=new Stub(function(t,e){t?n.setError(t):o(e,n)});e(t.head,r).end()})},Chunk.prototype.setError=function(t){return this.error=t,this.root.flush(),this},Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);function Tap(t,e){this.head=t,this.tail=e}Tap.prototype.push=function(t){return new Tap(t,this)},Tap.prototype.go=function(t){for(var e=this;e;)t=e.head(t),e=e.tail;return t};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(t){return"string"==typeof t||t&&"function"==typeof t.toString?("string"!=typeof t&&(t=t.toString()),HCHARS.test(t)?t.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):t):t};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(t){return"string"==typeof t?t.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):t},dust.escapeJSON=function(t){return JSON?JSON.stringify(t).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+t+"`",WARN),t)},dust}),"function"==typeof define&&define.amd&&!0===define.amd.dust&&define(["require","dust.core"],function(n,t){return t.onLoad=function(t,e){n([t],function(){e()})},t});
!function(e,t){"function"==typeof define&&define.amd&&!0===define.amd.dust?define(["dust.core"],t):"object"==typeof exports?(module.exports=t(require("dustjs-linkedin")),module.exports.registerWith=t):t(e.dust)}(this,function(a){function k(e,t,r){r=r||"INFO",e=e?"{@"+e+"}: ":"",a.log(e+t,r)}var s={};function p(e){return(t=e).stack.tail&&t.stack.tail.head&&void 0!==t.stack.tail.head.__select__&&e.get("__select__");var t}function u(e,t){var r,n=e.stack.head,s=e.rebase();e.stack&&e.stack.tail&&(s.stack=e.stack.tail);var i={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(r in t)i[r]=t[r];return s.push({__select__:i}).push(n,e.stack.index,e.stack.of)}function d(e){var t,r;if(e.isDeferredPending=!0,e.deferreds.length)for(e.isDeferredComplete=!0,t=0,r=e.deferreds.length;t<r;t++)e.deferreds[t]();e.isDeferredPending=!1}function c(e,t){return"function"==typeof t?t.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):t}function e(s,i){return function(e,t,r,n){return function(e,t,r,n,s,i){var o,a,c,u,d=r.block,l=r.else,f=p(t)||{};if(f.isResolved&&!f.isDeferredPending)return e;if(n.hasOwnProperty("key"))a=n.key;else{if(!f.hasOwnProperty("key"))return k(s,"No key specified","WARN"),e;a=f.key}u=n.type||f.type,a=h(t.resolve(a),u),c=h(t.resolve(n.value),u),i(a,c)?(f.isPending||(o=!0,f.isPending=!0),d&&(e=e.render(d,t)),o&&(f.isResolved=!0)):l&&(e=e.render(l,t));return e}(e,t,r,n,s,i)}}function h(e,t){switch(t&&(t=t.toLowerCase()),t){case"number":return+e;case"string":return String(e);case"boolean":return e="false"!==e&&e,Boolean(e);case"date":return new Date(e)}return e}var t={tap:function(e,t,r){var n;return s[n="tap"]||(k(n,"Deprecation warning: "+n+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),k(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+n.replace(/\W+/g,""),"WARN"),s[n]=!0),r.resolve(e)},sep:function(e,t,r){var n=r.block;return t.stack.index===t.stack.of-1?e:n?n(e,t):e},first:function(e,t,r){return 0===t.stack.index?r.block(e,t):e},last:function(e,t,r){return t.stack.index===t.stack.of-1?r.block(e,t):e},contextDump:function(e,t,r,n){var s,i,o=t.resolve(n.to);switch(t.resolve(n.key)){case"full":s=t.stack;break;default:s=t.stack.head}switch(i=JSON.stringify(s,c,2),o){case"console":k("contextDump",i);break;default:i=i.replace(/</g,"\\u003c"),e=e.write(i)}return e},math:function(e,t,r,n){var s,i=n.key,o=n.method,a=n.operand,c=n.round;if(!n.hasOwnProperty("key")||!n.method)return k("math","`key` or `method` was not provided","ERROR"),e;switch(i=parseFloat(t.resolve(i)),a=parseFloat(t.resolve(a)),o){case"mod":0===a&&k("math","Division by 0","ERROR"),s=i%a;break;case"add":s=i+a;break;case"subtract":s=i-a;break;case"multiply":s=i*a;break;case"divide":0===a&&k("math","Division by 0","ERROR"),s=i/a;break;case"ceil":case"floor":case"round":case"abs":s=Math[o](i);break;case"toint":s=parseInt(i,10);break;default:k("math","Method `"+o+"` is not supported","ERROR")}return void 0!==s&&(c&&(s=Math.round(s)),r&&r.block?(t=u(t,{key:s}),e=e.render(r.block,t),d(p(t))):e=e.write(s)),e},select:function(e,t,r,n){var s=r.block,i={};return n.hasOwnProperty("key")&&(i.key=t.resolve(n.key)),n.hasOwnProperty("type")&&(i.type=n.type),s?(t=u(t,i),e=e.render(s,t),d(p(t))):k("select","Missing body block","WARN"),e},eq:e("eq",function(e,t){return e===t}),ne:e("ne",function(e,t){return e!==t}),lt:e("lt",function(e,t){return e<t}),lte:e("lte",function(e,t){return e<=t}),gt:e("gt",function(e,t){return t<e}),gte:e("gte",function(e,t){return t<=e}),any:function(e,t,r,n){var s=p(t);return s?s.isDeferredComplete?k("any","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){s.deferreds.push(function(){s.isResolved&&(e=e.render(r.block,t)),e.end()})}):k("any","Must be used inside a {@select} block","ERROR"),e},none:function(e,t,r,n){var s=p(t);return s?s.isDeferredComplete?k("none","Must not be nested inside {@any} or {@none} block","ERROR"):e=e.map(function(e){s.deferreds.push(function(){s.isResolved||(e=e.render(r.block,t)),e.end()})}):k("none","Must be used inside a {@select} block","ERROR"),e},size:function(e,t,r,n){var s,i,o=n.key;if((o=t.resolve(n.key))&&!0!==o)if(a.isArray(o))s=o.length;else if(!isNaN(parseFloat(o))&&isFinite(o))s=o;else if("object"==typeof o)for(i in s=0,o)o.hasOwnProperty(i)&&s++;else s=(o+"").length;else s=0;return e.write(s)}};for(var r in t)a.helpers[r]=t[r];return a});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.page=e()}(this,function(){"use strict";var p=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},o=c,t=a,e=function(t){return r(a(t))},n=r,i=h,_=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t){for(var e,n,i=[],o=0,r=0,a="";null!=(e=_.exec(t));){var s=e[0],h=e[1],c=e.index;if(a+=t.slice(r,c),r=c+s.length,h)a+=h[1];else{a&&(i.push(a),a="");var p=e[2],u=e[3],f=e[4],l=e[5],d=e[6],g=e[7],v="+"===d||"*"===d,m="?"===d||"*"===d,w=p||"/",y=f||l||(g?".*":"[^"+w+"]+?");i.push({name:u||o++,prefix:p||"",delimiter:w,optional:m,repeat:v,pattern:(n=y,n.replace(/([=!:$\/()])/g,"\\$1"))})}}return r<t.length&&(a+=t.substr(r)),a&&i.push(a),i}function r(h){for(var c=new Array(h.length),t=0;t<h.length;t++)"object"==typeof h[t]&&(c[t]=new RegExp("^"+h[t].pattern+"$"));return function(t){for(var e="",n=t||{},i=0;i<h.length;i++){var o=h[i];if("string"!=typeof o){var r,a=n[o.name];if(null==a){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to be defined')}if(p(a)){if(!o.repeat)throw new TypeError('Expected "'+o.name+'" to not repeat, but received "'+a+'"');if(0===a.length){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to not be empty')}for(var s=0;s<a.length;s++){if(r=encodeURIComponent(a[s]),!c[i].test(r))throw new TypeError('Expected all "'+o.name+'" to match "'+o.pattern+'", but received "'+r+'"');e+=(0===s?o.prefix:o.delimiter)+r}}else{if(r=encodeURIComponent(a),!c[i].test(r))throw new TypeError('Expected "'+o.name+'" to match "'+o.pattern+'", but received "'+r+'"');e+=o.prefix+r}}else e+=o}return e}}function u(t){return t.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(t,e){return t.keys=e,t}function f(t){return t.sensitive?"":"i"}function h(t,e){for(var n=(e=e||{}).strict,i=!1!==e.end,o="",r=t[t.length-1],a="string"==typeof r&&/\/$/.test(r),s=0;s<t.length;s++){var h=t[s];if("string"==typeof h)o+=u(h);else{var c=u(h.prefix),p=h.pattern;h.repeat&&(p+="(?:"+c+p+")*"),o+=p=h.optional?c?"(?:"+c+"("+p+"))?":"("+p+")?":c+"("+p+")"}}return n||(o=(a?o.slice(0,-2):o)+"(?:\\/(?=$))?"),o+=i?"$":n&&a?"":"(?=\\/|$)",new RegExp("^"+o,f(e))}function c(t,e,n){return p(e=e||[])?n||(n={}):(n=e,e=[]),t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)e.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return s(t,e)}(t,e):p(t)?function(t,e,n){for(var i=[],o=0;o<t.length;o++)i.push(c(t[o],e,n).source);return s(new RegExp("(?:"+i.join("|")+")",f(n)),e)}(t,e,n):function(t,e,n){for(var i=a(t),o=h(i,n),r=0;r<i.length;r++)"string"!=typeof i[r]&&e.push(i[r]);return s(o,e)}(t,e,n)}o.parse=t,o.compile=e,o.tokensToFunction=n,o.tokensToRegExp=i;var l,d="undefined"!=typeof document,g="undefined"!=typeof window,v="undefined"!=typeof history,m="undefined"!=typeof process,w=d&&document.ontouchstart?"touchstart":"click",y=g&&!(!window.history.location&&!window.location);function b(){this.callbacks=[],this.exits=[],this.current="",this.len=0,this._decodeURLComponents=!0,this._base="",this._strict=!1,this._running=!1,this._hashbang=!1,this.clickHandler=this.clickHandler.bind(this),this._onpopstate=this._onpopstate.bind(this)}function x(t,e){if("function"==typeof t)return x.call(this,"*",t);if("function"==typeof e)for(var n=new R(t,null,this),i=1;i<arguments.length;++i)this.callbacks.push(n.middleware(arguments[i]));else"string"==typeof t?this["string"==typeof e?"redirect":"show"](t,e):this.start(t)}function E(t,e,n){var i=this.page=n||x,o=i._window,r=i._hashbang,a=i._getBase();"/"===t[0]&&0!==t.indexOf(a)&&(t=a+(r?"#!":"")+t);var s=t.indexOf("?");this.canonicalPath=t;var h=new RegExp("^"+a.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"));if(this.path=t.replace(h,"")||"/",r&&(this.path=this.path.replace("#!","")||"/"),this.title=d&&o.document.title,this.state=e||{},this.state.path=t,this.querystring=~s?i._decodeURLEncodedURIComponent(t.slice(s+1)):"",this.pathname=i._decodeURLEncodedURIComponent(~s?t.slice(0,s):t),this.params={},this.hash="",!r){if(!~this.path.indexOf("#"))return;var c=this.path.split("#");this.path=this.pathname=c[0],this.hash=i._decodeURLEncodedURIComponent(c[1])||"",this.querystring=this.querystring.split("#")[0]}}function R(t,e,n){this.page=n||k;var i=e||{};i.strict=i.strict||n._strict,this.path="*"===t?"(.*)":t,this.method="GET",this.regexp=o(this.path,this.keys=[],i)}b.prototype.configure=function(t){var e=t||{};this._window=e.window||g&&window,this._decodeURLComponents=!1!==e.decodeURLComponents,this._popstate=!1!==e.popstate&&g,this._click=!1!==e.click&&d,this._hashbang=!!e.hashbang;var n=this._window;this._popstate?n.addEventListener("popstate",this._onpopstate,!1):g&&n.removeEventListener("popstate",this._onpopstate,!1),this._click?n.document.addEventListener(w,this.clickHandler,!1):d&&n.document.removeEventListener(w,this.clickHandler,!1),this._hashbang&&g&&!v?n.addEventListener("hashchange",this._onpopstate,!1):g&&n.removeEventListener("hashchange",this._onpopstate,!1)},b.prototype.base=function(t){if(0===arguments.length)return this._base;this._base=t},b.prototype._getBase=function(){var t=this._base;if(t)return t;var e=g&&this._window&&this._window.location;return g&&this._hashbang&&e&&"file:"===e.protocol&&(t=e.pathname),t},b.prototype.strict=function(t){if(0===arguments.length)return this._strict;this._strict=t},b.prototype.start=function(t){var e=t||{};if(this.configure(e),!1!==e.dispatch){var n;if(this._running=!0,y){var i=this._window.location;n=this._hashbang&&~i.hash.indexOf("#!")?i.hash.substr(2)+i.search:this._hashbang?i.search+i.hash:i.pathname+i.search+i.hash}this.replace(n,null,!0,e.dispatch)}},b.prototype.stop=function(){if(this._running){this.current="",this.len=0,this._running=!1;var t=this._window;this._click&&t.document.removeEventListener(w,this.clickHandler,!1),g&&t.removeEventListener("popstate",this._onpopstate,!1),g&&t.removeEventListener("hashchange",this._onpopstate,!1)}},b.prototype.show=function(t,e,n,i){var o=new E(t,e,this),r=this.prevContext;return this.prevContext=o,this.current=o.path,!1!==n&&this.dispatch(o,r),!1!==o.handled&&!1!==i&&o.pushState(),o},b.prototype.back=function(t,e){var n=this;if(0<this.len){var i=this._window;v&&i.history.back(),this.len--}else t?setTimeout(function(){n.show(t,e)}):setTimeout(function(){n.show(n._getBase(),e)})},b.prototype.redirect=function(t,e){var n=this;"string"==typeof t&&"string"==typeof e&&x.call(this,t,function(t){setTimeout(function(){n.replace(e)},0)}),"string"==typeof t&&void 0===e&&setTimeout(function(){n.replace(t)},0)},b.prototype.replace=function(t,e,n,i){var o=new E(t,e,this),r=this.prevContext;return this.prevContext=o,this.current=o.path,o.init=n,o.save(),!1!==i&&this.dispatch(o,r),o},b.prototype.dispatch=function(e,n){var i=0,o=0,r=this;function a(){var t=r.callbacks[i++];if(e.path===r.current)return t?void t(e,a):function(t){if(t.handled)return;var e,n=this._window;e=this._hashbang?y&&this._getBase()+n.location.hash.replace("#!",""):y&&n.location.pathname+n.location.search;if(e===t.canonicalPath)return;this.stop(),t.handled=!1,y&&(n.location.href=t.canonicalPath)}.call(r,e);e.handled=!1}n?function t(){var e=r.exits[o++];if(!e)return a();e(n,t)}():a()},b.prototype.exit=function(t,e){if("function"==typeof t)return this.exit("*",t);for(var n=new R(t,null,this),i=1;i<arguments.length;++i)this.exits.push(n.middleware(arguments[i]))},b.prototype.clickHandler=function(t){if(1===this._which(t)&&!(t.metaKey||t.ctrlKey||t.shiftKey||t.defaultPrevented)){var e=t.target,n=t.path||(t.composedPath?t.composedPath():null);if(n)for(var i=0;i<n.length;i++)if(n[i].nodeName&&"A"===n[i].nodeName.toUpperCase()&&n[i].href){e=n[i];break}for(;e&&"A"!==e.nodeName.toUpperCase();)e=e.parentNode;if(e&&"A"===e.nodeName.toUpperCase()){var o="object"==typeof e.href&&"SVGAnimatedString"===e.href.constructor.name;if(!e.hasAttribute("download")&&"external"!==e.getAttribute("rel")){var r=e.getAttribute("href");if((this._hashbang||!this._samePath(e)||!e.hash&&"#"!==r)&&!(r&&-1<r.indexOf("mailto:"))&&(o?!e.target.baseVal:!e.target)&&(o||this.sameOrigin(e.href))){var a=o?e.href.baseVal:e.pathname+e.search+(e.hash||"");a="/"!==a[0]?"/"+a:a,m&&a.match(/^\/[a-zA-Z]:\//)&&(a=a.replace(/^\/[a-zA-Z]:\//,"/"));var s=a,h=this._getBase();0===a.indexOf(h)&&(a=a.substr(h.length)),this._hashbang&&(a=a.replace("#!","")),(!h||s!==a||y&&"file:"===this._window.location.protocol)&&(t.preventDefault(),this.show(s))}}}}},b.prototype._onpopstate=(l=!1,g?(d&&"complete"===document.readyState?l=!0:window.addEventListener("load",function(){setTimeout(function(){l=!0},0)}),function(t){if(l)if(t.state){var e=t.state.path;this.replace(e,t.state)}else if(y){var n=this._window.location;this.show(n.pathname+n.search+n.hash,void 0,void 0,!1)}}):function(){}),b.prototype._which=function(t){return null==(t=t||g&&this._window.event).which?t.button:t.which},b.prototype._toURL=function(t){var e=this._window;if("function"==typeof URL&&y)return new URL(t,e.location.toString());if(d){var n=e.document.createElement("a");return n.href=t,n}},b.prototype.sameOrigin=function(t){if(!t||!y)return!1;var e=this._toURL(t),n=this._window.location;return n.protocol===e.protocol&&n.hostname===e.hostname&&n.port===e.port},b.prototype._samePath=function(t){if(!y)return!1;var e=this._window.location;return t.pathname===e.pathname&&t.search===e.search},b.prototype._decodeURLEncodedURIComponent=function(t){return"string"!=typeof t?t:this._decodeURLComponents?decodeURIComponent(t.replace(/\+/g," ")):t},E.prototype.pushState=function(){var t=this.page,e=t._window,n=t._hashbang;t.len++,v&&e.history.pushState(this.state,this.title,n&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},E.prototype.save=function(){var t=this.page;v&&"file:"!==t._window.location.protocol&&t._window.history.replaceState(this.state,this.title,t._hashbang&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},R.prototype.middleware=function(n){var i=this;return function(t,e){if(i.match(t.path,t.params))return n(t,e);e()}},R.prototype.match=function(t,e){var n=this.keys,i=t.indexOf("?"),o=~i?t.slice(0,i):t,r=this.regexp.exec(decodeURIComponent(o));if(!r)return!1;for(var a=1,s=r.length;a<s;++a){var h=n[a-1],c=this.page._decodeURLEncodedURIComponent(r[a]);void 0===c&&hasOwnProperty.call(e,h.name)||(e[h.name]=c)}return!0};var k=function t(){var e=new b;function n(){return x.apply(e,arguments)}return n.callbacks=e.callbacks,n.exits=e.exits,n.base=e.base.bind(e),n.strict=e.strict.bind(e),n.start=e.start.bind(e),n.stop=e.stop.bind(e),n.show=e.show.bind(e),n.back=e.back.bind(e),n.redirect=e.redirect.bind(e),n.replace=e.replace.bind(e),n.dispatch=e.dispatch.bind(e),n.exit=e.exit.bind(e),n.configure=e.configure.bind(e),n.sameOrigin=e.sameOrigin.bind(e),n.clickHandler=e.clickHandler.bind(e),n.create=t,Object.defineProperty(n,"len",{get:function(){return e.len},set:function(t){e.len=t}}),Object.defineProperty(n,"current",{get:function(){return e.current},set:function(t){e.current=t}}),n.Context=E,n.Route=R,n}(),U=k,L=k;return U.default=L,U});
!function(e){"use strict";function t(){}var n=t.prototype,r=e.EventEmitter;function s(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function i(e){return function(){return this[e].apply(this,arguments)}}n.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp)for(n in t={},r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n]);else t=r[e]||(r[e]=[]);return t},n.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},n.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&((t={})[e]=n),t||n},n.addListener=function(e,t){if(!function e(t){return"function"==typeof t||t instanceof RegExp||!(!t||"object"!=typeof t)&&e(t.listener)}(t))throw new TypeError("listener must be a function");var n,r=this.getListenersAsObject(e),i="object"==typeof t;for(n in r)r.hasOwnProperty(n)&&-1===s(r[n],t)&&r[n].push(i?t:{listener:t,once:!1});return this},n.on=i("addListener"),n.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},n.once=i("addOnceListener"),n.defineEvent=function(e){return this.getListeners(e),this},n.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},n.removeListener=function(e,t){var n,r,i=this.getListenersAsObject(e);for(r in i)i.hasOwnProperty(r)&&-1!==(n=s(i[r],t))&&i[r].splice(n,1);return this},n.off=i("removeListener"),n.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},n.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},n.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},n.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},n.removeAllListeners=i("removeEvent"),n.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(s in o)if(o.hasOwnProperty(s))for(n=o[s].slice(0),i=0;i<n.length;i++)!0===(r=n[i]).once&&this.removeListener(e,r.listener),r.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},n.trigger=i("emitEvent"),n.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},n.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},n._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},n._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return e.EventEmitter=r,t},"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:e.EventEmitter=t}(this||{});
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.<br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar","enabled"]),ctx,{"block":body_1},{}).w("<div id=\"page-content-wrapper\" class=\"collapse-def\"><div class=\"container\"><br />").s(ctx.get(["documentation"], false),ctx,{"block":body_2},{}).w("<br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class='").h("eq",ctx,{"block":body_1},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("'><div id=\"docma-content\"></div>").h("eq",ctx,{"block":body_2},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("</div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("container container-boxed");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","enums"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Enumeration</div><ul class=\"param-list\">").s(ctx.get(["$members"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\"><span class=\"param-info value\">Value:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","enabled"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar ").x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"block":body_2},{}).w("\"><div class=\"navbar-inner ").x(ctx.get(["boxed"], false),ctx,{"block":body_3},{}).w("\"><div class=\"navbar-brand\">").x(ctx.getPath(false, ["template","options","logo","dark"]),ctx,{"block":body_4},{}).w("<span class=\"navbar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").h("gt",ctx,{"block":body_7},{"key":ctx.getPath(false, ["template","options","navbar","menu","length"]),"value":0},"h").w("</div></nav>").x(ctx.getPath(false, ["template","options","navbar","fixed"]),ctx,{"block":body_16},{}).w("<div class=\"nav-overlay\"></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("dark");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"else":body_5,"block":body_6},{});}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","dark"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<div class=\"navbar-menu-btn\" tabindex=\"0\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i><i class=\"fas fa-md fa-times trans-all-ease\"></i></div><div class=\"navbar-menu\"><ul class=\"navbar-list\">").s(ctx.getPath(false, ["template","options","navbar","menu"]),ctx,{"block":body_8},{}).w("</ul><input type=\"text\" class=\"search-api\" id=\"search-api\" placeholder=\"Search AthenaJS documentation\" />                    </div>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_9,"block":body_10},{});}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_11,"block":body_12},{}).w("\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>").x(ctx.get(["label"], false),ctx,{"block":body_13},{}).x(ctx.get(["chevron"], false),ctx,{"block":body_14},{}).w("</a><ul>").s(ctx.get(["items"], false),ctx,{"block":body_15},{}).w("</ul></li>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("#");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h").w("</span>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<i class=\"nav-arrow fas fa-sm fa-angle-down\"></i>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w(" ").p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{}).w(" ");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.w("<div class=\"nav-spacer\"></div>");}body_16.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_8},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li>").x(ctx.get(["onClick"], false),ctx,{"else":body_2,"block":body_5},{}).x(ctx.get(["iconClass"], false),ctx,{"block":body_6},{}).x(ctx.get(["label"], false),ctx,{"block":body_7},{}).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_3,"block":body_4},{}).w("\"target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("#");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<a href=\"\" onClick=\"").f(ctx.get(["onClick"], false),ctx,"h").w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h",["s"]).w("</span>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_8.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_8},{"key":ctx.getPath(false, ["template","options","symbols","params"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Parameters</div><ul class=\"param-list\">").s(ctx.get(["params"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").x(ctx.get(["variable"], false),ctx,{"block":body_4},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").x(ctx.get(["variable"], false),ctx,{"block":body_5},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\">").x(ctx.get(["optional"], false),ctx,{"else":body_6,"block":body_7},{}).w("</span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("...");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("...");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<span class=\"param-info default\">Default:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_9},{}).w("</tbody></table>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<tr><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_10},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_11},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"else":body_12,"block":body_13},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("...");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("...");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_13.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","props"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Properties</div><ul class=\"param-list\">").s(ctx.get(["properties"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div id=\"sidebar-toggle\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i></div><div class=\"sidebar-brand\">").x(ctx.getPath(false, ["template","options","logo","light"]),ctx,{"block":body_1},{}).w("<span class=\"sidebar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").x(ctx.getPath(false, ["template","options","sidebar","search"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["template","options","sidebar","toolbar"]),ctx,{"block":body_3},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").f(ctx.get(["symbols"], false),ctx,"h",["s","$navnodes"]).w("</ul></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"sidebar-logo\" />");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"sidebar-search\"><div class=\"sidebar-search-icon\"><i class=\"fas fa-md fa-search\"></i></div><input id=\"txt-search\" type=\"search\" placeholder=\"Filter...\" autocorrect=\"off\" autocapitalize=\"off\"spellcheck=\"false\" /><div class=\"sidebar-search-clean\"><i class=\"fas fa-lg fa-times-circle\"></i></div></div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<div class=\"sidebar-toolbar\"><div class=\"toolbar-scope-filters\"></div><div class=\"toolbar-kind-filters\"></div><div class=\"toolbar-buttons\"><span class=\"btn-switch-fold inline-block\" title=\"Fold Symbols\">").h("eq",ctx,{"else":body_4,"block":body_5},{"key":ctx.getPath(false, ["template","options","sidebar","itemsFolded"]),"type":"boolean","value":"true"},"h").w("</span><span class=\"btn-switch-outline inline-block space-left-xs\" title=\"Toggle Outline\">").h("eq",ctx,{"else":body_6,"block":body_7},{"key":ctx.getPath(false, ["template","options","sidebar","outline"]),"type":"string","value":"tree"},"h").w("</span></div></div>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-down\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-right\"></i>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-outdent\"></i>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-indent\"></i>");}body_7.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.nx(ctx.getPath(false, ["symbol","$hide"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\" class=\"symbol-container ").f(ctx.get(["symbol"], false),ctx,"h",["$get_type"]).w("\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\"><i class=\"fas fa-link color-gray-light\" aria-hidden=\"true\"></i></a><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$type"]).w("</code>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div></div><div class=\"symbol-definition\"><div class=\"symbol-info\">").x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","since"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_7},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_8},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_9},{}).w("</div>").x(ctx.getPath(false, ["symbol","defaultvalue"]),ctx,{"block":body_10},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_11},{}).h("ne",ctx,{"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","fires"]),ctx,{"block":body_19},{}).x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_21},{}).x(ctx.getPath(false, ["symbol","generator"]),ctx,{"block":body_24},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_28},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_31},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_32},{}).x(ctx.getPath(false, ["template","options","symbols","meta"]),ctx,{"block":body_35},{}).w("</div></div>").x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_39},{}).nx(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_41},{});}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.nx(ctx.get(["$constructor"], false),ctx,{"block":body_3},{});}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<p><b class=\"caption\">Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<p><b class=\"caption\">Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<p><b class=\"caption\">Version:</b>&nbsp;").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</p>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<p><b class=\"caption\">Since:</b>&nbsp;").f(ctx.getPath(false, ["symbol","since"]),ctx,"h",["s"]).w("</p>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<p><b class=\"caption\">Copyright:</b>&nbsp;").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</p>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b class=\"caption\">Author:</b>&nbsp;").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</p>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<p><b class=\"caption\">License:</b>&nbsp;").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</p>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<p class=\"symbol-def-val\"><b class=\"caption\"><i>Value:</i></b>&nbsp;<code>").f(ctx.get(["symbol"], false),ctx,"h",["$def"]).w("</code></p>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<p class=\"no-margin\"><b>See</b>").h("gt",ctx,{"else":body_12,"block":body_14},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_13},{});}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_15},{}).w("</ul>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_17,"block":body_18},{});}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk;}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.h("gt",ctx,{"block":body_20},{"key":ctx.getPath(false, ["symbol","fires","length"]),"value":"0","type":"number"},"h");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.w("<p><b class=\"caption\">Emits:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$emits"]).w("</p>");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.h("gt",ctx,{"else":body_22,"block":body_23},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<p><b class=\"caption\">Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.w("<b class=\"caption\">Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","yields"]),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.h("gt",ctx,{"else":body_26,"block":body_27},{"key":ctx.getPath(false, ["symbol","yields","length"]),"value":"1","type":"number"},"h");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<p><b class=\"caption\">Yields:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<b class=\"caption\">Yields:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.h("gt",ctx,{"else":body_29,"block":body_30},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<p><b class=\"caption\">Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.w("<b class=\"caption\">Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.w("<p><b>Example").h("gt",ctx,{"block":body_34},{"key":ctx.getPath(false, ["symbol","examples","length"]),"value":1},"h").w("</b>").f(ctx.getPath(true, []),ctx,"h",["$get_caption","s"]).w("</p><pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt","$tnl","$remove_caption"]).w("</code></pre>");}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.w("&nbsp;#").h("math",ctx,{},{"key":ctx.get(["$idx"], false),"method":"add","operand":"1"},"h");}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_36},{});}body_35.__dustBody=!0;function body_36(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_37},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_38},{}).w("</p>");}body_36.__dustBody=!0;function body_37(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_37.__dustBody=!0;function body_38(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_38.__dustBody=!0;function body_39(chk,ctx){return chk.h("ne",ctx,{"block":body_40},{"key":ctx.getPath(false, ["symbol","hideconstructor"]),"type":"boolean","value":"true"},"h");}body_39.__dustBody=!0;function body_40(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_40.__dustBody=!0;function body_41(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_42},{});}body_41.__dustBody=!0;function body_42(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_42.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var DocmaWeb = (function () {
'use strict';

var Utils={};function getStr(e){return"string"==typeof e?e.trim():""}function bracket(e){return/^[a-z$_][a-z\d$_]*$/i.test(e)?"."+e:'["'+e+'"]'}function fixBracket(r){return r.replace(/(.*?)\."([^"]+)"\]?$/,function(e,t,n){return n?t+bracket(n):r})}function cleanName(e){return fixBracket(e=getStr(e).replace(/([^>]+>)?~?(.*)/,"$2").replace(/^"[^"]+"\.?~?([^"]+)$/,"$1").replace(/^(module\.)?exports\./,"").replace(/^module:/,""))}function getMetaCodeName(e){return cleanName(Utils.notate(e,"meta.code.name")||"")}function identity(e){return e}function hasConstructorTag(e){return/\*\s+@construct(s|or)\b/.test(e.comment)}Utils.type=function(e){return Object.prototype.toString.call(e).match(/\s(\w+)/i)[1].toLowerCase()},Utils.notate=function(e,t){if("object"==typeof e){var n,r=Array.isArray(t)?t:t.split("."),i=r[0];if(i)return n=e[i],1<r.length?(r.shift(),Utils.notate(n,r)):n}},Utils.getName=function(e){if(e.alias){var t=getMetaCodeName(e);if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},Utils.getLongName=function(e){var t=cleanName(e.longname),n=getMetaCodeName(e)||t,r=e.memberof||"";if(r=/^".*"$/.test(r)?"":cleanName(r),e.name===r&&Utils.isConstructor(e))return n;var i=e.alias?n:t;if(!r)return i;var l=new RegExp("^"+r+"[#.~:]"),o="instance"===e.scope?"#":".";return l.test(i)?i:r+o+i},Utils.getFullName=Utils.getLongName,Utils.getCodeName=function(e){return getMetaCodeName(e)||Utils.getLongName(e)},Utils.getSymbolByName=function(e,t){var n,r,i,l;if("object"===Utils.type(e)){var o=Object.keys(e);for(n=0;n<o.length;n++)if(i=e[o[n]].documentation,l=Utils.getSymbolByName(i,t))return l;return null}for(i=e,n=0;n<i.length;n++){if((r=i[n]).name===t||r.longname===t||Utils.getFullName(r)===t)return r;if(r.$members&&(l=Utils.getSymbolByName(r.$members,t)))return l}return null},Utils.getLevels=function(e){var t=("string"==typeof e?e:e.$longname)||"";return(t=cleanName(t))?((t||"").split(/[.#~]/)||[]).length:0},Utils.getParentName=function(e){var t;if("string"!=typeof e){if(e.memberof&&!1===/^".*"$/.test(e.memberof))return cleanName(e.memberof);t=cleanName(e.$longname)}else t=cleanName(e);return t&&/[.#~]/g.test(t)?t.replace(/[.#~][^.#~]*$/,""):""},Utils.getParent=function(e,t){var n="string"==typeof t?Utils.getSymbolByName(e,t):t;if(!n)return null;var r=Utils.getParentName(n);return r?Utils.getSymbolByName(e,r):null},Utils.isDeprecated=function(e){return e.deprecated},Utils.isGlobal=function(e){return"global"===e.scope},Utils.isNamespace=function(e){return"namespace"===e.kind},Utils.isModule=function(e){return"module"===e.kind},Utils.isMixin=function(e){return"mixin"===e.kind},Utils.isClass=function(e){return"class"===e.kind&&"MethodDefinition"!==Utils.notate(e,"meta.code.type")&&!hasConstructorTag(e)},Utils.isConstant=function(e){return"constant"===e.kind},Utils.isConstructor=function(e){return"class"===e.kind&&("MethodDefinition"===Utils.notate(e,"meta.code.type")||hasConstructorTag(e))},Utils.isStaticMember=function(e){return"static"===e.scope},Utils.isStatic=Utils.isStaticMember,Utils.isInner=function(e){return"inner"===e.scope},Utils.isInstanceMember=function(e){return"instance"===e.scope},Utils.isInterface=function(e){return"interface"===e.scope},Utils.isMethod=function(e){var t=Utils.notate(e,"meta.code.type");return"function"===e.kind||"FunctionExpression"===t||"FunctionDeclaration"===t},Utils.isFunction=Utils.isMethod,Utils.isInstanceMethod=function(e){return Utils.isInstanceMember(e)&&Utils.isMethod(e)},Utils.isStaticMethod=function(e){return Utils.isStaticMember(e)&&Utils.isMethod(e)},Utils.isProperty=function(e){return"member"===e.kind&&!Utils.isMethod(e)},Utils.isInstanceProperty=function(e){return Utils.isInstanceMember(e)&&Utils.isProperty(e)},Utils.isStaticProperty=function(e){return Utils.isStaticMember(e)&&Utils.isProperty(e)},Utils.isTypeDef=function(e){return"typedef"===e.kind},Utils.isCustomType=Utils.isTypeDef,Utils.isCallback=function(e){var t=(e.type||{}).names||[];return"typedef"===e.kind&&0<=(e.comment||"").indexOf("@callback "+e.longname)&&1===t.length&&"function"===t[0]},Utils.isEnum=function(e){return Boolean(e.isEnum)},Utils.isEvent=function(e){return"event"===e.kind},Utils.isExternal=function(e){return"external"===e.kind},Utils.isGenerator=function(e){return e.generator&&"function"===e.kind},Utils.isReadOnly=function(e){return e.readonly},Utils.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},Utils.isPrivate=function(e){return"private"===e.access},Utils.isPackagePrivate=function(e){return"package"===e.access},Utils.isProtected=function(e){return"protected"===e.access},Utils.isUndocumented=function(e){return!e.comments},Utils.hasDescription=function(e){return Boolean(getStr(e.classdesc)||getStr(e.description))},Utils.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},Utils.trimNewLines=function(e){return e.replace(/^[\r\n]+|[\r\n]+$/,"")},Utils.parseTicks=function(e){return"string"!=typeof e?"":e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,t,n){return Utils.normalizeTabs(Utils._wrapCode(n,!0,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,t,n){return Utils._wrapCode(n,!0)})},Utils.parseNewLines=function(e,r){return r=r||{},Utils._tokenize(e,function(e,t){if(t)return e;var n=e.split(/[\r\n]{2,}/);return n.length<=1&&r.keepIfSingle?e:n.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},Utils.parseLinks=function(e,l){if("string"!=typeof e)return"";l=l||{};var t=e.replace(/\{@link +([^}]*?)\}/g,function(e,t){var n,r,i=t.split("|");return 1===i.length?n=r=i[0].trim():(n=i[0].trim(),r=i[1].trim()),!1===/[/?&=]/.test(n)&&"#"!==n[0]&&(n="#"+n),'<a href="'+n+'"'+(l.target?' target="'+l.target+'" rel="noopener noreferrer"':"")+">"+r+"</a>"});return Utils.parseTicks(t)},Utils.parse=function(e,t){return t=t||{},e=Utils.trimLeft(e),e=Utils.parseNewLines(e,t),e=Utils.parseTicks(e),Utils.parseLinks(e,t)},Utils.normalizeTabs=function(e){if("string"!=typeof e)return"";var r,t=e.match(/^\s*/gm),n=1/0;if(t.forEach(function(e,t){e=e.replace(/\t/g,"  "),0<t&&(n=Math.min(e.length,n))}),n!==1/0){var i=new RegExp("^\\s{"+n+"}","g");e=e.replace(i,"")}return(e=e.replace(/^\s*/,"")).replace(/([\r\n]+)(\s+)/gm,function(e,t,n){return r=n.replace(/\t/g,"  "),t+(r=new Array(r.length-r.length%2+1).join(" "))})},Utils.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var t=Utils.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.$kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return Utils.isConstructor(e)&&(t+=" constructor"),Utils.isMethod(e)&&(t+=" method"),Utils.isProperty(e)&&(t+=" property"),t.replace(/[><"'`\n\r]/g,"").toLowerCase()},Utils.getCodeFileInfo=function(e){return{filename:Utils.notate(e,"meta.filename"),lineno:Utils.notate(e,"meta.lineno"),path:Utils.notate(e,"meta.path")}},Utils.getSymbolLink=function(e,t){if("string"!=typeof t)return t.$docmaLink;var n=Utils.getSymbolByName(e,t);return n?n.$docmaLink:""};var reEndBrackets=/\[\]$/,reTypeParts=/^([^<]+?)(?:\.)?(?:<\(([^>)]+)\)>)?(?:<([^>]+)>)?(\[\])?$/;function _link(e,t,n){var r,i=reEndBrackets.test(t)?"[]":"",l=(t||"").replace(reEndBrackets,""),o=n||{},a="";return"internal"!==o.linkType&&(r=Utils._getTypeExternalLink(l))&&(a=' target="_blank" rel="noopener noreferrer"'),r||"external"===o.linkType||(r=Utils.getSymbolLink(e,l)),r&&(t='<a href="'+r+'"'+a+">"+(o.displayText||l)+i+"</a>"),t}function serializer(r){var i=[],l=[];return function(e,t){if(2e3<i.length)return"[Too Big Object]";if(0<i.length){var n=i.indexOf(this);~n?(i.splice(n+1),l.splice(n,1/0,e)):(i.push(this),l.push(e)),0<=i.indexOf(t)&&(t=i[0]===t?"[Circular ~]":"[Circular ~."+l.slice(0,i.indexOf(t)).join(".")+"]")}else i.push(t);return r?r.call(this,e,t):t}}function decodeHash(e){return decodeURIComponent(e).replace(/^#/,"")}Utils._parseAnchorLinks=function(t,e,n){var r=e.match(reTypeParts);if(!r||!r[1])return"";var i=r[4]||"",l=r[2]||r[3]||"";return l&&(l=l.split(",").map(function(e){return e.trim().split("|").map(function(e){return _link(t,e,n)}).join('<span class="code-delim">|</span>')}).join('<span class="code-delim">, </span>')),l&&(l="&lt;"+l+"&gt;"),_link(t,r[1],n)+l+i},Utils.getTypes=function(t,e,n){var r=n||{},i="class"===e.kind?["class"]:Utils.notate(e,"type.names")||[];return i=i.map(function(e){return r.links&&(e=Utils._parseAnchorLinks(t,e,{linkType:r.links})),e}).join('<span class="code-delim">|</span>'),e.isEnum?"enum&lt;"+i+"&gt;":i},Utils.getReturnTypes=function(r,e,t){var n=e.returns;if(!Array.isArray(n))return"void";var i=t||{},l=n.reduce(function(e,t){var n=Utils.notate(t,"type.names")||[];return i.links&&(n=n.map(function(e){return Utils._parseAnchorLinks(r,e,{linkType:i.links})})),e.concat(n)},[]);return 0<l.length?l.join('<span class="code-delim">|</span>'):"void"},Utils.getCodeTags=function(n,e,t){var r=t||{};return e.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(r.demileter||",")},Utils.getFormattedTypeList=function(n,e,t){if(!Array.isArray(e)||0===e.length)return"";var r=t||{},i='<span class="code-delim">'+(r.delimeter||"|")+"</span>",l="boolean"!=typeof r.descriptions||r.descriptions,o=r.descDelimeter||"&nbsp;&nbsp;—&nbsp;&nbsp;",a="",s=e.map(function(e){return l&&(a=Utils.parse(e.description||"",{keepIfSingle:!0}))&&(a=o+a),e.type?(e.type.names||[]).map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(i)+a:a?"— "+a:""});return 1<s.length?"<ul><li>"+s.join("</li><li>")+"</li></ul>":s},Utils.getEmittedEvents=function(n,e,t){if(!e||0===e.length)return"";var r,i,l=t||{},o=l.delimeter||", ";return(e||[]).map(function(e){if(r=e.split(/\s*[\s-—]\s*/g),i=(r[0]||"").trim(),l.links){var t=Utils._parseAnchorLinks(n,i,{linkType:l.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(i,!0)}).join(o)},Utils._find=function(e,t){if(!e||!t)return null;var n,r,i=null;for(n=0;n<e.length;n++)if((r=e[n])&&"object"==typeof r){for(var l in t)if(void 0!==t[l]&&t.hasOwnProperty(l)){if(t[l]!==r[l]){i=null;break}i=r}if(i)break}return i},Utils._assign=function(e,t,n){var r;for(r in e=e||{},t)t.hasOwnProperty(r)&&(n?Object.defineProperty(e,r,{enumerable:!0,value:t[r]}):e[r]=t[r]);return e},Utils._values=function(e){if(Array.isArray(e))return e;var t,n=[];for(t in e)e.hasOwnProperty(t)&&n.push(e[t]);return n},Utils._wrapCode=function(e,t,n){return"string"!=typeof e?"":(void 0!==t&&!0!==t||(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;")),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e)},Utils._tokenize=function(e,t){"function"!=typeof t&&(t=identity);if(e.indexOf("```")<0)return[t(e,!1)];var n,r="```".length,i="",l="",o=[],a=!1;for(n=0;n<e.length;n++)i+=e[n],l+=e[n],i.length>r&&(i=i.slice(-r)),"```"===i&&(l=(a=!a)?(o.push(t(l.slice(0,-r),!1)),i):(o.push(t(l,!0)),""));return o},Utils._ensureSlash=function(e,t,n){return t?(e&&"/"!==t.slice(0,1)&&(t="/"+t),n&&"/"!==t.slice(-1)&&(t+="/"),t):e||n?"/":""},Utils._safeStringify=function(t,e,n){try{return JSON.stringify(t,serializer(e),n)}catch(e){return String(t)}},Utils.DOM={};var ATTR_BODY_STYLE="data-body-style";Utils.DOM.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var r=document.documentElement;return{top:n.top+window.pageYOffset-r.clientTop,left:n.left+window.pageXOffset-r.clientLeft}}}},Utils.DOM.scrollTo=function(e){var t=document.documentElement||document.body;if(e=decodeHash(e||window.location.hash||"")){var n=document.getElementById(e);if(n){var r=Utils.DOM.getOffset(n);r&&(t.scrollTop=r.top)}}else t.scrollTop=0},Utils.DOM._createChild=function(e,t,n){n=n||{};var r=document.createElement(t||"div");return Object.keys(n).forEach(function(e){r[e]=n[e]}),e.appendChild(r),r},Utils.DOM._removePrevBodyStyles=function(){for(var e=document.getElementsByTagName("head")[0].querySelectorAll("["+ATTR_BODY_STYLE+"]");0<e.length;)e[0].parentNode.removeChild(e[0])},Utils.DOM._moveBodyStylesToHead=function(){var e,t,n=document.getElementsByTagName("head")[0],r=document.body.getElementsByTagName("style");for(e=0;e<r.length;e++)(t=r[e]).parentNode.removeChild(t),t.setAttribute(ATTR_BODY_STYLE,""),n.appendChild(t)};var _builtinURLs={globals:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/",statements:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/",operators:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/",functions:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/",web:"https://developer.mozilla.org/en-US/docs/Web/API/"},_builtins={globals:["Infinity","NaN","undefined","null","Object","Function","function","Boolean","boolean","Symbol","Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","Number","number","Math","Date","String","string","RegExp","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Map","Set","WeakMap","WeakSet","ArrayBuffer","DataView","JSON","Promise","Generator","GeneratorFunction","Reflect","Proxy","TypedArray","Intl","Intl.Collator","Intl.DateTimeFormat","Intl.NumberFormat","WebAssembly","WebAssembly.Module","WebAssembly.Instance","WebAssembly.Memory","WebAssembly.Table","WebAssembly.CompileError","WebAssembly.LinkError","WebAssembly.RuntimeError"],statements:["function","function*","async function","class","debugger"],operators:["void","super","this"],functions:["arguments"],web:["AbstractWorker","AnalyserNode","AudioBuffer","AudioContext","AudioListener","AudioNode","BaseAudioContext","BeforeUnloadEvent","Blob","BlobEvent","BufferSource","ByteString","CSSMediaRule","CSSPageRule","CSSPrimitiveValue","CSSRule","CSSRuleList","CSSStyleDeclaration","CSSStyleRule","CSSStyleSheet","CSSSupportsRule","CSSValue","CSSValueList","CloseEvent","CompositionEvent","Console","Coordinates","Crypto","CryptoKey","CustomEvent","DOMException","DOMImplementation","Document","DocumentFragment","DocumentType","DoubleRange","DragEvent","Element","ErrorEvent","Event","EventListener","EventSource","EventTarget","File","FileList","FileReader","FileReaderSync","FormData","Geolocation","HTMLAnchorElement","HTMLAreaElement","HTMLAudioElement","HTMLBRElement","HTMLBaseElement","HTMLBodyElement","HTMLButtonElement","HTMLCanvasElement","HTMLCollection","HTMLDListElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDivElement","HTMLDocument","HTMLElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormControlsCollection","HTMLFormElement","HTMLHRElement","HTMLHeadElement","HTMLHeadingElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLKeygenElement","HTMLLIElement","HTMLLabelElement","HTMLLegendElement","HTMLLinkElement","HTMLMapElement","HTMLMediaElement","HTMLMetaElement","HTMLMeterElement","HTMLModElement","HTMLOListElement","HTMLObjectElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOptionsCollection","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSlotElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableDataCellElement","HTMLTableElement","HTMLTableHeaderCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTemplateElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLUnknownElement","HTMLVideoElement","HashChangeEvent","History","ImageData","InputEvent","KeyboardEvent","LinkStyle","Location","LongRange","MediaDevices","MediaDeviceInfo","MediaError","MediaRecorder","MediaStream","MessageChannel","MessageEvent","MessagePort","MouseEvent","MutationObserver","MutationRecord","NamedNodeMap","Navigator","NavigatorGeolocation","Node","NodeIterator","NodeList","NonDocumentTypeChildNode","Notification","PageTransitionEvent","PointerEvent","PopStateEvent","Position","PositionError","PositionOptions","ProgressEvent","PromiseRejectionEvent","RTCCertificate","RTCConfiguration","RTCDTMFSender","RTCDTMFToneChangeEvent","RTCDataChannel","RTCPeerConnection","RTCPeerConnection","RTCRtpCodecParameters","RTCRtpContributingSource","RTCRtpReceiver","RTCRtpSender","RTCRtpSynchronizationSource","RTCRtpTransceiver","RTCRtpTransceiverDirection","RTCRtpTransceiverInit","RTCStatsReport","RadioNodeList","RandomSource","Range","RenderingContext","SVGAnimateElement","SVGAnimateMotionElement","SVGAnimateTransformElement","SVGAnimationElement","SVGCircleElement","SVGClipPathElement","SVGCursorElement","SVGElement","SVGEllipseElement","SVGEvent","SVGFilterElement","SVGGeometryElement","SVGGradientElement","SVGGraphicsElement","SVGImageElement","SVGLineElement","SVGLinearGradientElement","SVGMPathElement","SVGMaskElement","SVGMetadataElement","SVGPathElement","SVGPatternElement","SVGPolygonElement","SVGPolylineElement","SVGRadialGradientElement","SVGRect","SVGRectElement","SVGSVGElement","SVGScriptElement","SVGSetElement","SVGStopElement","SVGStyleElement","SVGSwitchElement","SVGSymbolElement","SVGTSpanElement","SVGTextContentElement","SVGTextElement","SVGTextPathElement","SVGTextPositioningElement","SVGTitleElement","SVGTransform","SVGTransformList","SVGTransformable","SVGUseElement","SVGViewElement","ShadowRoot","SharedWorker","Storage","StorageEvent","StyleSheet","StyleSheetList","Text","TextMetrics","TimeEvent","TimeRanges","Touch","TouchEvent","TouchList","Transferable","TreeWalker","UIEvent","URL","WebGLActiveInfo","WebGLBuffer","WebGLContextEvent","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLRenderingContext","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject","WebSocket","WheelEvent","Window","Worker","WorkerGlobalScope","WorkerLocation","WorkerNavigator","XMLHttpRequest","XMLHttpRequestEventTarget","XMLSerializer","XPathExpression","XPathResult","XSLTProcessor"]},_cats=Object.keys(_builtins);Utils._getTypeExternalLink=function(e){var t,n;for(t=0;t<_cats.length;t++)if(n=_cats[t],0<=_builtins[n].indexOf(e))return _builtinURLs[n]+(e||"").replace(/^([^.]*\.)/,"");return""};

function DocmaWeb(t){this._=t||{},this._.initialLoad=!1,this._.appEntranceRI=null,this._.emitter=new EventEmitter,Object.defineProperty(this,"app",{configurable:!1,get:function(){return this._.app||null}}),Object.defineProperty(this,"apis",{configurable:!1,get:function(){return this._.apis||{}}}),Object.defineProperty(this,"routes",{configurable:!1,get:function(){return this._.routes||{}}}),Object.defineProperty(this,"template",{configurable:!1,get:function(){return this._.template||{}}}),Object.defineProperty(this,"location",{configurable:!1,get:function(){var t=Utils._ensureSlash(!0,window.location.pathname,!0),e=Utils._ensureSlash(!0,docma.app.base,!0),o=t;return t.slice(0,e.length)===e&&(o=t.slice(e.length-1,t.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:Utils._ensureSlash(!0,docma.app.entrance,!1),base:e,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:t,pathname:o,path:o+(window.location.search||""),getQuery:function(t,e){"?"===(e=void 0===e?window.location.search||"":e).slice(0,1)&&(e=e.slice(1)),t=(t||"").replace(/[[\]]/g,"\\$&");var o=new RegExp("&?"+t+"(=([^&#]*)|&|#|$)").exec(e);return o&&o[2]?decodeURIComponent(o[2].replace(/\+/g," ")):""}}}}),Object.defineProperty(this,"currentRoute",{configurable:!1,get:function(){return this._.currentRoute||null}}),Object.defineProperty(this,"documentation",{configurable:!1,get:function(){return this._.documentation||[]}}),Object.defineProperty(this,"symbols",{configurable:!1,get:function(){return this._.symbols||[]}})}DocmaWeb.prototype._trigger=function(t,e){this.info("Event:",t,e?e[0]:""),this._.emitter.trigger(t,e)},DocmaWeb.Event={Ready:"ready",Render:"render",Route:"route",Navigate:"navigate"},DocmaWeb.prototype.on=function(t,e){return this._.emitter.on.apply(this._.emitter,arguments),docma},DocmaWeb.prototype.once=function(){return this._.emitter.once.apply(this._.emitter,arguments),this},DocmaWeb.prototype.off=function(){return this._.emitter.off.apply(this._.emitter,arguments),this},DocmaWeb.prototype.addListener=DocmaWeb.prototype.on,DocmaWeb.prototype.addListenerOnce=DocmaWeb.prototype.once,DocmaWeb.prototype.removeListener=DocmaWeb.prototype.off,DocmaWeb.prototype.log=function(){docma._.logsEnabled&&console.log.apply(console,arguments)},DocmaWeb.prototype.info=function(){docma._.logsEnabled&&console.info.apply(console,arguments)},DocmaWeb.prototype.warn=function(){docma._.logsEnabled&&console.warn.apply(console,arguments)},DocmaWeb.prototype.error=function(){docma._.logsEnabled&&console.error.apply(console,arguments)},DocmaWeb.prototype.getDocmaElem=function(){var t=document.getElementById(this._.elementID);return t||(t=Utils.DOM.createChild(document.body,"div",{id:this._.elementID})),t},DocmaWeb.prototype.getContentElem=function(){var t=document.getElementById(this._.contentElementID);if(!t)throw new Error("Partial "+this._.partials.content+' should have an element with id="'+this._.contentElementID+'".');return t},DocmaWeb.prototype.loadContent=function(t){this.getContentElem().innerHTML=t,Utils.DOM._removePrevBodyStyles(),Utils.DOM._moveBodyStylesToHead(),Utils.DOM.scrollTo()},DocmaWeb.prototype._loadCompiledContent=function(t){this.getDocmaElem().innerHTML=t},DocmaWeb.prototype._fixAnchors=function(r){this.app.base&&setTimeout(function(){var t,e,o=document.querySelectorAll('a[href^="#"]');for(t=0;t<o.length;t++){var n=(e=o[t]).getAttribute("href");"#"===n.slice(0,1)&&1<n.length&&(n=window.location.pathname+(window.location.search||"")+n,e.setAttribute("href",n))}"function"==typeof r&&r()},50)},DocmaWeb.prototype.addFilter=function(t,e){if(this.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,this},DocmaWeb.prototype.removeFilter=function(t){return delete dust.filters[t],this},DocmaWeb.prototype.filterExists=function(t){return"function"==typeof dust.filters[t]},DocmaWeb.prototype.createRoute=function(t,e){return new DocmaWeb.Route(this,t,e)},DocmaWeb.prototype.createRouteFromID=function(t){if("string"!=typeof t)return this.warn("Route ID is not a string: "+t),new DocmaWeb.Route(this,null);var e=t.split(":");return new DocmaWeb.Route(this,e[1],e[0])},DocmaWeb.prototype.createRouteFromQuery=function(t){if(!t)return new DocmaWeb.Route(null);var e=t.split("&")[0].split("="),o=e[0].toLowerCase(),n=e[1];return new DocmaWeb.Route(this,n,o)},DocmaWeb.prototype._render=function(o,n){var r=this;dust.render(o,this,function(t,e){if(t)throw r.warn("Could not load Docma partial:",o),r.log("Compiled HTML: ",e),t;r._loadCompiledContent(e),"function"==typeof n&&n()})},DocmaWeb.prototype._triggerAfterRender=function(){this._trigger(DocmaWeb.Event.Render,[docma.currentRoute]),this._.initialLoad&&(this._trigger(DocmaWeb.Event.Ready),this._.initialLoad=!1)},DocmaWeb.prototype._render404=function(t,e){this._.currentRoute=this.createRoute(null);var o=this;this._render(this._.partials.notFound,function(){if(o._trigger(DocmaWeb.Event.Render,[null]),Utils.DOM.scrollTo(),"function"==typeof e)return e(404);throw new Error("Page or content not found for route: "+Utils._safeStringify(t))})},DocmaWeb.prototype.fetch=function(e,o){var n=new XMLHttpRequest,r=this;n.onreadystatechange=function(){if(4===n.readyState){var t=200===n.status?n.responseText:"";return r.log("XHR GET:",n.status,e),o(n.status,t)}},n.open("GET",e,!0),n.send()},DocmaWeb.prototype.render=function(o,n){if(!o||!o.exists())return this._render404(o,n);if(!o.isEqualTo(this.currentRoute)){this._.currentRoute=o;var r="function"==typeof n,i=this;o.type===DocmaWeb.Route.Type.API?this._render(this._.partials.api,function(){i._triggerAfterRender(),r&&n(200),i._fixAnchors(function(){Utils.DOM.scrollTo()})}):docma.fetch(o.contentPath,function(t,e){if(404===t)return i._render404(o,n);i._render(i._.partials.content,function(){i.loadContent(e),i._triggerAfterRender(),r&&n(t),i._fixAnchors(function(){Utils.DOM.scrollTo()})})})}},DocmaWeb.Utils=Utils;

var _arrRouteTypes;DocmaWeb.Route=function(t,e,o){if(this._docma=t,o&&!(_arrRouteTypes.indexOf(o)<0)){if(e)t.app.routing.caseSensitive||(e=e.toLowerCase());else{if(o!==DocmaWeb.Route.Type.API)return;e=t._.defaultApiName}var i=Utils._find(t.routes,{type:o,name:e});i&&Utils._assign(this,i)}},DocmaWeb.Route.Type={API:"api",CONTENT:"content"},_arrRouteTypes=Utils._values(DocmaWeb.Route.Type),DocmaWeb.Route.SourceType={JS:"js",MD:"md",HTML:"html"},DocmaWeb.Route.prototype.exists=function(){return Boolean(this.id)},DocmaWeb.Route.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},DocmaWeb.Route.prototype.isCurrent=function(){return this.isEqualTo(this._docma.currentRoute)},DocmaWeb.Route.prototype.apply=function(t){return this.type===DocmaWeb.Route.Type.API?(this._docma._.documentation=this._docma.apis[this.name].documentation,this._docma._.symbols=this._docma.apis[this.name].symbols):(this._docma._.documentation=null,this._docma._.symbols=null),this._docma._trigger(DocmaWeb.Event.Route,[this.exists()?this:null]),this._docma.render(this,t),this},DocmaWeb.Route.prototype.toString=function(){var e=this.toJSON();return Object.keys(e).map(function(t){return t+": "+e[t]}).join(", ")},DocmaWeb.Route.prototype.toJSON=function(){return{id:this.id,contentPath:this.contentPath,path:this.path,type:this.type,sourceType:this.sourceType,name:this.name}};

dust.filters=dust.filters||{},dust.filters.$pt=function(e){return DocmaWeb.Utils.parseTicks(e)},dust.filters.$pnl=function(e){return DocmaWeb.Utils.parseNewLines(e,{keepIfSingle:!0})},dust.filters.$pl=function(e){return DocmaWeb.Utils.parseLinks(e)},dust.filters.$tl=function(e){return DocmaWeb.Utils.trimLeft(e)},dust.filters.$tnl=function(e){return DocmaWeb.Utils.trimNewLines(e)},dust.filters.$p=function(e){return DocmaWeb.Utils.parse(e,{keepIfSingle:!0})},dust.filters.$nt=function(e){return DocmaWeb.Utils.normalizeTabs(e)},dust.filters.$desc=function(e){return DocmaWeb.Utils.parse(e.classdesc||e.description||"")};var reJSValues=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;function getFormatValue(e,t){if(arguments.length<2&&(t=DocmaWeb.Utils.notate(e,"meta.code.value")||e.defaultvalue),"string"!=typeof t)return String(t);var n=DocmaWeb.Utils.notate(e,"type.names")||[];return!/['"`]/.test(t.slice(0,1))&&0<=n.indexOf("String")&&(1===n.length||-1===reJSValues.indexOf(t))?'"'+t+'"':String(t)}dust.filters.$def=function(e){return e.hasOwnProperty("defaultvalue")?getFormatValue(e,e.defaultvalue):"undefined"},dust.filters.$val=function(e){return getFormatValue(e)},dust.filters.$id=function(e){var t;"string"==typeof e?t=e:t=(DocmaWeb.Utils.isConstructor(e)?"new-":"")+e.$longname;return t.replace(/ /g,"-")};

DocmaWeb.version = "3.2.2";
return DocmaWeb;
})();
var docma = Object.freeze(new DocmaWeb({"version":"3.2.2","routes":[{"id":"api:","type":"api","name":"_def_","path":"?api","contentPath":null,"sourceType":"js"},{"id":"api:game","type":"api","name":"game","path":"?api=game","contentPath":null,"sourceType":"js"},{"id":"api:scene","type":"api","name":"scene","path":"?api=scene","contentPath":null,"sourceType":"js"},{"id":"api:drawable","type":"api","name":"drawable","path":"?api=drawable","contentPath":null,"sourceType":"js"},{"id":"api:drawables","type":"api","name":"drawables","path":"?api=drawables","contentPath":null,"sourceType":"js"},{"id":"api:behaviors","type":"api","name":"behaviors","path":"?api=behaviors","contentPath":null,"sourceType":"js"},{"id":"api:fx","type":"api","name":"fx","path":"?api=fx","contentPath":null,"sourceType":"js"},{"id":"api:map","type":"api","name":"map","path":"?api=map","contentPath":null,"sourceType":"js"},{"id":"api:input","type":"api","name":"input","path":"?api=input","contentPath":null,"sourceType":"js"},{"id":"api:audio","type":"api","name":"audio","path":"?api=audio","contentPath":null,"sourceType":"js"},{"id":"api:resource","type":"api","name":"resource","path":"?api=resource","contentPath":null,"sourceType":"js"},{"id":"api:notification","type":"api","name":"notification","path":"?api=notification","contentPath":null,"sourceType":"js"},{"id":"api:utils","type":"api","name":"utils","path":"?api=utils","contentPath":null,"sourceType":"js"},{"id":"content:home","type":"content","name":"home","path":"?content=home","contentPath":"content/home.html","sourceType":"md"},{"id":"content:start","type":"content","name":"start","path":"?content=start","contentPath":"content/start.html","sourceType":"md"},{"id":"content:made_with_athenajs","type":"content","name":"made_with_athenajs","path":"?content=made_with_athenajs","contentPath":"content/made_with_athenajs.html","sourceType":"md"}],"apis":{"_def_":{"documentation":[],"symbols":[]},"game":{"documentation":[{"comment":"/**\n * The `Game` class is the central part to AthenaJS.\n *\n * @param {Object} [options={}]\n * @param {Boolean} [options.debug=false] Debug will be enabled if this is true.\n * @param {String} [options.name] The name of the game.\n * @param {String|HTMLElement} [options.target=\"Dom('div')\"] target The DOM target of the game: this is where the game canvas elements will be added.\n * By default the target is a new Div that is appened to the body element.\n * @param {Boolean} [options.showFps=false] A little fps counter will be displayed if this is true.\n * @param {Number} [options.width=1024] The width of the game display.\n * @param {Number} [options.height=768] The height of the game display.\n * @param {Object} [options.resources] An optionnal array of resources of the form:`{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.\n * @example\n * import { Game } from 'athenajs';\n *\n * const myGame = new Game({\n *    name: 'first-game',\n *    width: 320,\n *    height: 200\n * });\n */","meta":{"range":[1386,16839],"filename":"Game.js","lineno":30,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000030","name":"Game","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The `Game` class is the central part to AthenaJS.","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Debug will be enabled if this is true.","name":"options.debug"},{"type":{"names":["String"]},"optional":true,"description":"The name of the game.","name":"options.name"},{"type":{"names":["String","HTMLElement"]},"optional":true,"defaultvalue":"\"Dom('div')\"","description":"target The DOM target of the game: this is where the game canvas elements will be added.\nBy default the target is a new Div that is appened to the body element.","name":"options.target"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"A little fps counter will be displayed if this is true.","name":"options.showFps"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1024,"description":"The width of the game display.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":768,"description":"The height of the game display.","name":"options.height"},{"type":{"names":["Object"]},"optional":true,"description":"An optionnal array of resources of the form:`{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.","name":"options.resources"}],"examples":["import { Game } from 'athenajs';\n\nconst myGame = new Game({\n   name: 'first-game',\n   width: 320,\n   height: 200\n});"],"name":"Game","longname":"Game","kind":"class","scope":"global","description":"Creates a new Game","$longname":"Game","$kind":"class","$docmaLink":"?api=game#Game","$members":[{"comment":"/**\n     * Get ready for events from NotificationManager\n     *\n     * @param {String} eventList space-separated list of events to listen to\n     *\n     */","meta":{"range":[8427,8511],"filename":"Game.js","lineno":227,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000827","name":"Game#bindEvents","type":"MethodDefinition","paramnames":["eventList"]},"vars":{"":null}},"description":"Get ready for events from NotificationManager","params":[{"type":{"names":["String"]},"description":"space-separated list of events to listen to","name":"eventList"}],"name":"bindEvents","longname":"Game#bindEvents","kind":"function","memberof":"Game","scope":"instance","$longname":"Game#bindEvents","$kind":"method","$docmaLink":"?api=game#Game#bindEvents"},{"comment":"/**\n     * Method that gets called when receiving an event: by default it does nothing\n     * It's up to the developer to override this method on its Game\n     *\n     * @param {String} event the event name that got fired.\n     *\n     */","meta":{"range":[8759,8796],"filename":"Game.js","lineno":239,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000845","name":"Game#onEvent","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null}},"description":"Method that gets called when receiving an event: by default it does nothing\nIt's up to the developer to override this method on its Game","params":[{"type":{"names":["String"]},"description":"the event name that got fired.","name":"event"}],"name":"onEvent","longname":"Game#onEvent","kind":"function","memberof":"Game","scope":"instance","$longname":"Game#onEvent","$kind":"method","$docmaLink":"?api=game#Game#onEvent"},{"comment":"/**\n     * Sets a new scene as the current scene\n     *\n     * @param {Scene} scene instance to set as current Scene\n     *\n     */","meta":{"range":[11521,12410],"filename":"Game.js","lineno":335,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100001029","name":"Game#setScene","type":"MethodDefinition","paramnames":["scene"]},"vars":{"":null}},"description":"Sets a new scene as the current scene","params":[{"type":{"names":["Scene"]},"description":"instance to set as current Scene","name":"scene"}],"name":"setScene","longname":"Game#setScene","kind":"function","memberof":"Game","scope":"instance","$longname":"Game#setScene","$kind":"method","$docmaLink":"?api=game#Game#setScene"},{"comment":"/**\n     * Toggles fullscreen status\n     */","meta":{"range":[9073,9182],"filename":"Game.js","lineno":258,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000869","name":"Game#toggleFullscreen","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Toggles fullscreen status","name":"toggleFullscreen","longname":"Game#toggleFullscreen","kind":"function","memberof":"Game","scope":"instance","params":[],"$longname":"Game#toggleFullscreen","$kind":"method","$docmaLink":"?api=game#Game#toggleFullscreen"},{"comment":"/**\n     * Pauses the game: both loops are stopped so almost no cpu/gpu is used when calling it\n     *\n     */","meta":{"range":[15678,16260],"filename":"Game.js","lineno":477,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100001367","name":"Game#togglePause","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Pauses the game: both loops are stopped so almost no cpu/gpu is used when calling it","name":"togglePause","longname":"Game#togglePause","kind":"function","memberof":"Game","scope":"instance","params":[],"$longname":"Game#togglePause","$kind":"method","$docmaLink":"?api=game#Game#togglePause"},{"comment":"/**\n     * Toggles global sound\n     *\n     * @param {Boolean} bool Weather to enable or disable sound.\n     *\n     */","meta":{"range":[8926,9018],"filename":"Game.js","lineno":250,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000852","name":"Game#toggleSound","type":"MethodDefinition","paramnames":["bool"]},"vars":{"":null}},"description":"Toggles global sound","params":[{"type":{"names":["Boolean"]},"description":"Weather to enable or disable sound.","name":"bool"}],"name":"toggleSound","longname":"Game#toggleSound","kind":"function","memberof":"Game","scope":"instance","$longname":"Game#toggleSound","$kind":"method","$docmaLink":"?api=game#Game#toggleSound"},{"comment":"/**\n     * Toggles the Map tiles inspector\n     *\n     * @param {Boolean} enable whether to enable the tileInspector\n     */","meta":{"range":[7794,8261],"filename":"Game.js","lineno":207,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000759","name":"Game#toggleTileInspector","type":"MethodDefinition","paramnames":["enable"]},"vars":{"":null}},"description":"Toggles the Map tiles inspector","params":[{"type":{"names":["Boolean"]},"description":"whether to enable the tileInspector","name":"enable"}],"name":"toggleTileInspector","longname":"Game#toggleTileInspector","kind":"function","memberof":"Game","scope":"instance","$longname":"Game#toggleTileInspector","$kind":"method","$docmaLink":"?api=game#Game#toggleTileInspector"}],"$constructor":{"comment":"/**\n     * Creates a new Game\n     *\n     * @param {Object} [options={}]\n     * @param {Boolean} [options.debug=false] Debug will be enabled if this is true.\n     * @param {String} [options.name] The name of the game.\n     * @param {String|HTMLElement} [options.target=\"Dom('div')\"] target The DOM target of the game: this is where the game canvas elements will be added.\n     * By default the target is a new Div that is appened to the body element.\n     * @param {Boolean} [options.showFps=false] A little fps counter will be displayed if this is true.\n     * @param {Number} [options.width=1024] The width of the game display.\n     * @param {Number} [options.height=768] The height of the game display.\n     * @param {Object} [options.resources] An optionnal array of resources of the form:`{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.\n    */","meta":{"range":[2307,5124],"filename":"Game.js","lineno":44,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Game","code":{"id":"astnode100000033","name":"Game","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Creates a new Game","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Debug will be enabled if this is true.","name":"options.debug"},{"type":{"names":["String"]},"optional":true,"description":"The name of the game.","name":"options.name"},{"type":{"names":["String","HTMLElement"]},"optional":true,"defaultvalue":"\"Dom('div')\"","description":"target The DOM target of the game: this is where the game canvas elements will be added.\nBy default the target is a new Div that is appened to the body element.","name":"options.target"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"A little fps counter will be displayed if this is true.","name":"options.showFps"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1024,"description":"The width of the game display.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":768,"description":"The height of the game display.","name":"options.height"},{"type":{"names":["Object"]},"optional":true,"description":"An optionnal array of resources of the form:`{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.","name":"options.resources"}],"name":"Game","longname":"Game","kind":"class","scope":"global","undocumented":true,"$longname":"Game","$kind":"constructor","$docmaLink":"?api=game#Game"}}],"symbols":["Game","Game#bindEvents","Game#onEvent","Game#setScene","Game#toggleFullscreen","Game#togglePause","Game#toggleSound","Game#toggleTileInspector"]},"scene":{"documentation":[{"comment":"/**\n * The `Scene` is used to display your objects. In AthenaJS you first add objects onto the scene.\n * \n * When you scene is rendered (at 60fps), your objects appear on the screen.\n *\n * <blockquote>Instead of creating a new scene, it is common to extend the Scene class to create your own scene.</blockquote>\n * \n * @example\n * import { Scene, SimpleText } from 'athenajs';\n * \n * class MyScene extends Scene{\n *     start() {\n *         const myText = new SimpleText('my text', {\n *             text: 'This is a test',\n *             color: 'black'\n *         });\n *         // add the object onto the scene\n *         this.addObject(myText);\n *     }\n * };\n */","meta":{"range":[961,20992],"filename":"Scene.js","lineno":32,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100000564","name":"Scene","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The `Scene` is used to display your objects. In AthenaJS you first add objects onto the scene.\n\nWhen you scene is rendered (at 60fps), your objects appear on the screen.\n\n<blockquote>Instead of creating a new scene, it is common to extend the Scene class to create your own scene.</blockquote>","examples":["import { Scene, SimpleText } from 'athenajs';\n\nclass MyScene extends Scene{\n    start() {\n        const myText = new SimpleText('my text', {\n            text: 'This is a test',\n            color: 'black'\n        });\n        // add the object onto the scene\n        this.addObject(myText);\n    }\n};"],"name":"Scene","longname":"Scene","kind":"class","scope":"global","description":"Creates a new Scene","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"Scene\"+timestamp","description":"The name of your scene.","name":"options.name"},{"type":{"names":["Object"]},"optional":true,"description":"An optional array of resources of the form: `{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.","name":"options.resources"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":2,"description":"The number of layers: layers are stacked above the backgrounds.","name":"options.layers"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"The default opacity for the scene: can be usefull to have fadeIn effects when starting the scene.","name":"options.opacity"},{"type":{"names":["Scene"]},"optional":true,"description":"Scenes can have an option `hud` scene that is automatically rendered on top of it. This allows to easily add score/status elements to games.","name":"options.hudScene"}],"$longname":"Scene","$kind":"class","$docmaLink":"?api=scene#Scene","$members":[{"comment":"/**\n     * Add one ore more display objects onto the scene\n     *\n     * @param {Array|Drawable} objects The object(s) to add onto the scene.\n     * @param {Number} [layerIndex=0] Defines the layer number where to add the objects.\n     */","meta":{"range":[11656,12479],"filename":"Scene.js","lineno":398,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001473","name":"Scene#addObject","type":"MethodDefinition","paramnames":["objects","layerIndex"]},"vars":{"":null}},"description":"Add one ore more display objects onto the scene","params":[{"type":{"names":["Array","Drawable"]},"description":"The object(s) to add onto the scene.","name":"objects"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Defines the layer number where to add the objects.","name":"layerIndex"}],"name":"addObject","longname":"Scene#addObject","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#addObject","$kind":"method","$docmaLink":"?api=scene#Scene#addObject"},{"comment":"/**\n     * Apply the specified effect to the scene\n     *\n     * @param {String} fxName The name of the effect to apply.\n     * @param {Object} options The options of the effect.\n     */","meta":{"range":[20536,20628],"filename":"Scene.js","lineno":737,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002174","name":"Scene#animate","type":"MethodDefinition","paramnames":["fxName","options"]},"vars":{"":null}},"description":"Apply the specified effect to the scene","params":[{"type":{"names":["String"]},"description":"The name of the effect to apply.","name":"fxName"},{"type":{"names":["Object"]},"description":"The options of the effect.","name":"options"}],"name":"animate","longname":"Scene#animate","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#animate","$kind":"method","$docmaLink":"?api=scene#Scene#animate"},{"comment":"/**\n     * Subscribe to a space-separated list of events.\n     *\n     * <blockquote><strong>Note:</strong> events are automatically unbound when changing scene.</blockquote>\n     * \n     * @param {String} eventList The list of events to subscribe to as a space separated string.\n     *\n     */","meta":{"range":[19799,19883],"filename":"Scene.js","lineno":705,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002128","name":"Scene#bindEvents","type":"MethodDefinition","paramnames":["eventList"]},"vars":{"":null}},"description":"Subscribe to a space-separated list of events.\n\n<blockquote><strong>Note:</strong> events are automatically unbound when changing scene.</blockquote>","params":[{"type":{"names":["String"]},"description":"The list of events to subscribe to as a space separated string.","name":"eventList"}],"name":"bindEvents","longname":"Scene#bindEvents","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#bindEvents","$kind":"method","$docmaLink":"?api=scene#Scene#bindEvents"},{"comment":"/**\n     * Simple debug method: only toggles map boxes for now\n     *\n     * @param {Boolean} [isDebug=undefined] if specified, this will be the new debug status, otherwise toggle current debug status\n     */","meta":{"range":[7915,8285],"filename":"Scene.js","lineno":276,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001160","name":"Scene#debug","type":"MethodDefinition","paramnames":["isDebug"]},"vars":{"":null}},"description":"Simple debug method: only toggles map boxes for now","params":[{"type":{"names":["Boolean"]},"optional":true,"description":"if specified, this will be the new debug status, otherwise toggle current debug status","name":"isDebug"}],"name":"debug","longname":"Scene#debug","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#debug","$kind":"method","$docmaLink":"?api=scene#Scene#debug"},{"comment":"/**\n     * Returns the current opacity of the scene\n     *\n     * @returns {Number} The current opacity value.\n     */","meta":{"range":[15246,15295],"filename":"Scene.js","lineno":515,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001775","name":"Scene#getOpacity","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the current opacity of the scene","returns":[{"type":{"names":["Number"]},"description":"The current opacity value."}],"name":"getOpacity","longname":"Scene#getOpacity","kind":"function","memberof":"Scene","scope":"instance","params":[],"$longname":"Scene#getOpacity","$kind":"method","$docmaLink":"?api=scene#Scene#getOpacity"},{"comment":"/**\n     * Get the total playtime\n     *\n     * @returns {Number} the total playtime in milliseconds\n     */","meta":{"range":[17586,17821],"filename":"Scene.js","lineno":631,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001991","name":"Scene#getPlayTime","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Get the total playtime","returns":[{"type":{"names":["Number"]},"description":"the total playtime in milliseconds"}],"name":"getPlayTime","longname":"Scene#getPlayTime","kind":"function","memberof":"Scene","scope":"instance","params":[],"$longname":"Scene#getPlayTime","$kind":"method","$docmaLink":"?api=scene#Scene#getPlayTime"},{"comment":"/**\n     *\n     * Adds a new resource to be loaded later\n     *\n     */","meta":{"range":[5631,5886],"filename":"Scene.js","lineno":196,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100000983","name":"Scene#load","type":"MethodDefinition","paramnames":["type","src","id"]},"vars":{"":null}},"description":"Adds a new resource to be loaded later","name":"load","longname":"Scene#load","kind":"function","memberof":"Scene","scope":"instance","params":[],"$longname":"Scene#load","$kind":"method","$docmaLink":"?api=scene#Scene#load"},{"comment":"/**\n     * Adds an audio file to the scene resource list\n     *\n     * <blockquote><strong>Note</strong> this method should be called in the `setup` method.</blockquote>\n     * \n     * @param {String} src The url of the file to load.\n     * @param {String} id The id to use for the audio file.\n     *\n     */","meta":{"range":[6592,6669],"filename":"Scene.js","lineno":231,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001038","name":"Scene#loadAudio","type":"MethodDefinition","paramnames":["src","id"]},"vars":{"":null}},"description":"Adds an audio file to the scene resource list\n\n<blockquote><strong>Note</strong> this method should be called in the `setup` method.</blockquote>","params":[{"type":{"names":["String"]},"description":"The url of the file to load.","name":"src"},{"type":{"names":["String"]},"description":"The id to use for the audio file.","name":"id","defaultvalue":null}],"name":"loadAudio","longname":"Scene#loadAudio","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#loadAudio","$kind":"method","$docmaLink":"?api=scene#Scene#loadAudio"},{"comment":"/**\n     * Adds an image to the scene resource list\n     *\n     * <blockquote><strong>Note:</strong> this method should be called in the `setup` method.</blockquote>\n     * \n     * @param {String} src The url of the file to load.\n     * @param {String} id The id to use for the image.\n     *\n     */","meta":{"range":[6196,6273],"filename":"Scene.js","lineno":218,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001020","name":"Scene#loadImage","type":"MethodDefinition","paramnames":["src","id"]},"vars":{"":null}},"description":"Adds an image to the scene resource list\n\n<blockquote><strong>Note:</strong> this method should be called in the `setup` method.</blockquote>","params":[{"type":{"names":["String"]},"description":"The url of the file to load.","name":"src"},{"type":{"names":["String"]},"description":"The id to use for the image.","name":"id","defaultvalue":null}],"name":"loadImage","longname":"Scene#loadImage","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#loadImage","$kind":"method","$docmaLink":"?api=scene#Scene#loadImage"},{"comment":"/**\n     * Adds a map file to the scene resource list\n     *\n     * @param {String} src The url of the file to load.\n     * @param {String} id The id to use for the map.\n     *\n     */","meta":{"range":[6864,6937],"filename":"Scene.js","lineno":242,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001056","name":"Scene#loadMap","type":"MethodDefinition","paramnames":["src","id"]},"vars":{"":null}},"description":"Adds a map file to the scene resource list","params":[{"type":{"names":["String"]},"description":"The url of the file to load.","name":"src"},{"type":{"names":["String"]},"description":"The id to use for the map.","name":"id","defaultvalue":null}],"name":"loadMap","longname":"Scene#loadMap","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#loadMap","$kind":"method","$docmaLink":"?api=scene#Scene#loadMap"},{"comment":"/**\n     * Notify the scene of an event\n     *\n     * @param {String} eventType The type of event to trigger.\n     * @param {any} data The data (if any) associated with the event.\n     */","meta":{"range":[19428,19495],"filename":"Scene.js","lineno":693,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002115","name":"Scene#notify","type":"MethodDefinition","paramnames":["eventType","data"]},"vars":{"":null}},"description":"Notify the scene of an event","params":[{"type":{"names":["String"]},"description":"The type of event to trigger.","name":"eventType"},{"type":{"names":["any"]},"description":"The data (if any) associated with the event.","name":"data"}],"name":"notify","longname":"Scene#notify","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#notify","$kind":"method","$docmaLink":"?api=scene#Scene#notify"},{"comment":"/**\n     * onEvent is called once one of the registered events has been triggered.\n     *\n     * Override this scene as needed.\n     */","meta":{"range":[20029,20047],"filename":"Scene.js","lineno":714,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002146","name":"Scene#onEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"onEvent is called once one of the registered events has been triggered.\n\nOverride this scene as needed.","name":"onEvent","longname":"Scene#onEvent","kind":"function","memberof":"Scene","scope":"instance","params":[],"$longname":"Scene#onEvent","$kind":"method","$docmaLink":"?api=scene#Scene#onEvent"},{"comment":"/**\n     * Called when the scene is paused. This may happen for several reasons:\n     * - browser tab is hidden\n     * - debug is enabled and user pressed the p key\n     *\n     * @param {Boolean} isRunning\n     */","meta":{"range":[17424,17467],"filename":"Scene.js","lineno":622,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001984","name":"Scene#pause","type":"MethodDefinition","paramnames":["isRunning"]},"vars":{"":null}},"description":"Called when the scene is paused. This may happen for several reasons:\n- browser tab is hidden\n- debug is enabled and user pressed the p key","params":[{"type":{"names":["Boolean"]},"name":"isRunning"}],"name":"pause","longname":"Scene#pause","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#pause","$kind":"method","$docmaLink":"?api=scene#Scene#pause"},{"comment":"/**\n     * Remove the specified object from the scene\n     *\n     * @param {Drawable} drawable The object to remove from the scene.\n     */","meta":{"range":[20778,20990],"filename":"Scene.js","lineno":746,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002190","name":"Scene#removeObject","type":"MethodDefinition","paramnames":["drawable"]},"vars":{"":null}},"description":"Remove the specified object from the scene","params":[{"type":{"names":["Drawable"]},"description":"The object to remove from the scene.","name":"drawable"}],"name":"removeObject","longname":"Scene#removeObject","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#removeObject","$kind":"method","$docmaLink":"?api=scene#Scene#removeObject"},{"comment":"/**\n     * This method is responsible for drawing the scene and will be called 60 times a second.\n     *\n     * @param {Array<RenderingContext>} drawContexts The layers array to draw over.\n     * *note* When the scene is not running, this method isn't called at all.\n     */","meta":{"range":[18645,18954],"filename":"Scene.js","lineno":667,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002059","name":"Scene#render","type":"MethodDefinition","paramnames":["drawContexts"]},"vars":{"":null}},"description":"This method is responsible for drawing the scene and will be called 60 times a second.","params":[{"type":{"names":["Array.<RenderingContext>"]},"description":"The layers array to draw over.\n*note* When the scene is not running, this method isn't called at all.","name":"drawContexts"}],"name":"render","longname":"Scene#render","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#render","$kind":"method","$docmaLink":"?api=scene#Scene#render"},{"comment":"/**\n     * Set a static (CSS) background image independently of the layers\n     *\n     * @param {(Image|String)} image The image to set as background.\n     * @obsolete\n     */","meta":{"range":[15481,15830],"filename":"Scene.js","lineno":525,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001783","name":"Scene#setBackgroundImage","type":"MethodDefinition","paramnames":["image"]},"vars":{"":null}},"description":"Set a static (CSS) background image independently of the layers","params":[{"type":{"names":["Image","String"]},"description":"The image to set as background.","name":"image"}],"tags":[{"originalTitle":"obsolete","title":"obsolete","text":""}],"name":"setBackgroundImage","longname":"Scene#setBackgroundImage","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#setBackgroundImage","$kind":"method","$docmaLink":"?api=scene#Scene#setBackgroundImage"},{"comment":"/**\n     * Attach the specified display to the scene\n     *\n     * @param {Display} display The display to attach the scene to.\n     */","meta":{"range":[20193,20339],"filename":"Scene.js","lineno":723,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002150","name":"Scene#setDisplay","type":"MethodDefinition","paramnames":["display"]},"vars":{"":null}},"description":"Attach the specified display to the scene","params":[{"type":{"names":["Display"]},"description":"The display to attach the scene to.","name":"display"}],"name":"setDisplay","longname":"Scene#setDisplay","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#setDisplay","$kind":"method","$docmaLink":"?api=scene#Scene#setDisplay"},{"comment":"/**\n     *\n     * @param {Number} layer Layer number.\n     * @param {Boolean} background Set to true to put layer in background, false for foreground.\n     */","meta":{"range":[19123,19230],"filename":"Scene.js","lineno":683,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002097","name":"Scene#setLayerPriority","type":"MethodDefinition","paramnames":["layer","background"]},"vars":{"":null}},"params":[{"type":{"names":["Number"]},"description":"Layer number.","name":"layer"},{"type":{"names":["Boolean"]},"description":"Set to true to put layer in background, false for foreground.","name":"background"}],"name":"setLayerPriority","longname":"Scene#setLayerPriority","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#setLayerPriority","$kind":"method","$docmaLink":"?api=scene#Scene#setLayerPriority"},{"comment":"/**\n     * Associates the specified map with the scene: the map will then be used to render the scene.\n     * *note* The map can either be an instance of a Map or a class inheriting from Map, in which case\n     *\n     * @param {Map|Object} map The `Map` to use: it can be an instance of a Map inheriting class or\n     * an options Object that will be used to create a new {Map} instance\n     *\n     * @param {Number} [x=0] x Offset where to start drawing the map onto the scene.\n     * @param {Number} [y=0] y Offset where to start drawing the map onto the scene.\n     *\n     */","meta":{"range":[10472,10786],"filename":"Scene.js","lineno":351,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001342","name":"Scene#setMap","type":"MethodDefinition","paramnames":["map","x","y"]},"vars":{"":null}},"description":"Associates the specified map with the scene: the map will then be used to render the scene.\n*note* The map can either be an instance of a Map or a class inheriting from Map, in which case","params":[{"type":{"names":["Map","Object"]},"description":"The `Map` to use: it can be an instance of a Map inheriting class or\nan options Object that will be used to create a new {Map} instance","name":"map"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"x Offset where to start drawing the map onto the scene.","name":"x"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"y Offset where to start drawing the map onto the scene.","name":"y"}],"name":"setMap","longname":"Scene#setMap","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#setMap","$kind":"method","$docmaLink":"?api=scene#Scene#setMap"},{"comment":"/**\n     * Changes the opacity of the scene\n     *\n     * @param {Number} opacity The new opacity.\n     */","meta":{"range":[15058,15117],"filename":"Scene.js","lineno":506,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001764","name":"Scene#setOpacity","type":"MethodDefinition","paramnames":["opacity"]},"vars":{"":null}},"description":"Changes the opacity of the scene","params":[{"type":{"names":["Number"]},"description":"The new opacity.","name":"opacity"}],"name":"setOpacity","longname":"Scene#setOpacity","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#setOpacity","$kind":"method","$docmaLink":"?api=scene#Scene#setOpacity"},{"comment":"/**\n     * Public setup method: this method is called right after internal Scene._setup().\n     *\n     * You should overriden it in your own Scene instances.\n     */","meta":{"range":[16006,16095],"filename":"Scene.js","lineno":540,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001836","name":"Scene#setup","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Public setup method: this method is called right after internal Scene._setup().\n\nYou should overriden it in your own Scene instances.","name":"setup","longname":"Scene#setup","kind":"function","memberof":"Scene","scope":"instance","params":[],"$longname":"Scene#setup","$kind":"method","$docmaLink":"?api=scene#Scene#setup"},{"comment":"/**\n     * Starts the scene\n     *\n     */","meta":{"range":[17006,17021],"filename":"Scene.js","lineno":600,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100001958","name":"Scene#start","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Starts the scene","name":"start","longname":"Scene#start","kind":"function","memberof":"Scene","scope":"instance","params":[],"$longname":"Scene#start","$kind":"method","$docmaLink":"?api=scene#Scene#start"},{"comment":"/**\n     * The run loop is where scene elements are moved and collisions are checked.\n     *\n     * The map, if there is one, is also updated here (viewport, new objects, etc)\n     *\n     * @param {Number} timestamp current times\n     */","meta":{"range":[18069,18360],"filename":"Scene.js","lineno":650,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100002027","name":"Scene#update","type":"MethodDefinition","paramnames":["timestamp"]},"vars":{"":null}},"description":"The run loop is where scene elements are moved and collisions are checked.\n\nThe map, if there is one, is also updated here (viewport, new objects, etc)","params":[{"type":{"names":["Number"]},"description":"current times","name":"timestamp"}],"name":"update","longname":"Scene#update","kind":"function","memberof":"Scene","scope":"instance","$longname":"Scene#update","$kind":"method","$docmaLink":"?api=scene#Scene#update"}],"$constructor":{"comment":"/**\n     * Creates a new Scene\n     *\n     * @param {Object} options\n     * @param {String} [options.name=\"Scene\"+timestamp] The name of your scene.\n     * @param {Object} [options.resources] An optional array of resources of the form: `{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.\n     * @param {Number} [options.layers=2] The number of layers: layers are stacked above the backgrounds.\n     * @param {Number} [options.opacity=1] The default opacity for the scene: can be usefull to have fadeIn effects when starting the scene.\n     * @param {Scene} [options.hudScene] Scenes can have an option `hud` scene that is automatically rendered on top of it. This allows to easily add score/status elements to games.\n     */","meta":{"range":[1756,2749],"filename":"Scene.js","lineno":43,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Scene","code":{"id":"astnode100000567","name":"Scene","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Creates a new Scene","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"Scene\"+timestamp","description":"The name of your scene.","name":"options.name"},{"type":{"names":["Object"]},"optional":true,"description":"An optional array of resources of the form: `{ id: 'unique id', type: 'image|script|map|audio', src: 'path_to_resource'}` that the scene needs.","name":"options.resources"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":2,"description":"The number of layers: layers are stacked above the backgrounds.","name":"options.layers"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"The default opacity for the scene: can be usefull to have fadeIn effects when starting the scene.","name":"options.opacity"},{"type":{"names":["Scene"]},"optional":true,"description":"Scenes can have an option `hud` scene that is automatically rendered on top of it. This allows to easily add score/status elements to games.","name":"options.hudScene"}],"name":"Scene","longname":"Scene","kind":"class","scope":"global","undocumented":true,"$longname":"Scene","$kind":"constructor","$docmaLink":"?api=scene#Scene"}}],"symbols":["Scene","Scene#addObject","Scene#animate","Scene#bindEvents","Scene#debug","Scene#getOpacity","Scene#getPlayTime","Scene#load","Scene#loadAudio","Scene#loadImage","Scene#loadMap","Scene#notify","Scene#onEvent","Scene#pause","Scene#removeObject","Scene#render","Scene#setBackgroundImage","Scene#setDisplay","Scene#setLayerPriority","Scene#setMap","Scene#setOpacity","Scene#setup","Scene#start","Scene#update"]},"drawable":{"documentation":[{"comment":"/**\n * `Drawable` is the base class for objects that can be rendered on the screen.\n *\n * A `Drawable` has properties like x, y, vx, vy, speed.\n * In order to be rendered, an object must be added onto the active scene/map.\n * It can also have an optional behavior which tells Athena how\n * to move an object at each frame.\n *\n * <blockquote>Usually, you don't need to use the `Drawable` class directly:\n * you can one of the more high-level {@link ?api=drawables|drawables} classes instead.</blockquote>\n */","meta":{"range":[756,29268],"filename":"Drawable.js","lineno":19,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000022","name":"Drawable","type":"ClassDeclaration","paramnames":["type","options"]}},"classdesc":"`Drawable` is the base class for objects that can be rendered on the screen.\n\nA `Drawable` has properties like x, y, vx, vy, speed.\nIn order to be rendered, an object must be added onto the active scene/map.\nIt can also have an optional behavior which tells Athena how\nto move an object at each frame.\n\n<blockquote>Usually, you don't need to use the `Drawable` class directly:\nyou can one of the more high-level {@link ?api=drawables|drawables} classes instead.</blockquote>","name":"Drawable","longname":"Drawable","kind":"class","scope":"global","description":"Creates a new Drawable: this class should be extended before creating an instance","params":[{"type":{"names":["String"]},"description":"The type of object: this describes the type of object","name":"type"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"optional":true,"description":"The id of the object. The defaults is type + random timestamp.","name":"options.objectId"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The type of collision to use for the object.","name":"options.collideGroup"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if the object should be the master.","name":"options.master"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":true,"description":"An invisible object isn't rendered onto the screen.","name":"options.visible"}],"$longname":"Drawable","$kind":"class","$docmaLink":"?api=drawable#Drawable","$members":[{"comment":"/**\n     * Add a new Child to the object.\n     *\n     * Childs are automatically rendered and moved when the parent object is.\n     * <blockquote><strong>Note:</strong> children are automatically added to the scene/map of the parent object.</blockquote>\n     * \n     * \n     * @param {Drawable} child The child to add.\n     *\n     */","meta":{"range":[25487,25628],"filename":"Drawable.js","lineno":885,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002324","name":"Drawable#addChild","type":"MethodDefinition","paramnames":["child"]},"vars":{"":null}},"description":"Add a new Child to the object.\n\nChilds are automatically rendered and moved when the parent object is.\n<blockquote><strong>Note:</strong> children are automatically added to the scene/map of the parent object.</blockquote>","params":[{"type":{"names":["Drawable"]},"description":"The child to add.","name":"child"}],"name":"addChild","longname":"Drawable#addChild","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#addChild","$kind":"method","$docmaLink":"?api=drawable#Drawable#addChild"},{"comment":"/**\n     * Add a new handler to be called after each move of the object\n     *\n     * @param {Function} cb The callback to add.\n     */","meta":{"range":[21135,21197],"filename":"Drawable.js","lineno":736,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002038","name":"Drawable#addMoveHandler","type":"MethodDefinition","paramnames":["cb"]},"vars":{"":null}},"description":"Add a new handler to be called after each move of the object","params":[{"type":{"names":["function"]},"description":"The callback to add.","name":"cb"}],"name":"addMoveHandler","longname":"Drawable#addMoveHandler","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#addMoveHandler","$kind":"method","$docmaLink":"?api=drawable#Drawable#addMoveHandler"},{"comment":"/**\n     * Performs an animation on the object using one of the defined {FX} effects\n     *\n     * Effects change the object size/position using an interpolation function.\n     *\n     * Athena has the following effects:\n     * - {Fade} performs a fade\n     * - {Mosaic} performs a SNES-like mosaic effect\n     * - {Rotate} performs a rotation on the object\n     *\n     * @param {String} fxName The name of the effect to use.\n     * @param {Object} options The options of the effect.\n     * @param {String} [options.easing=\"linear\"] The easing functions to use, can be: 'linear', 'swing', 'easeInQuad', 'easeOutBounce'.\n     *\n     * @returns {Promise} a promise that will be fullfilled when the effect has been completed\n     */","meta":{"range":[22814,23685],"filename":"Drawable.js","lineno":792,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002122","name":"Drawable#animate","type":"MethodDefinition","paramnames":["fxName","options"]},"vars":{"":null}},"description":"Performs an animation on the object using one of the defined {FX} effects\n\nEffects change the object size/position using an interpolation function.\n\nAthena has the following effects:\n- {Fade} performs a fade\n- {Mosaic} performs a SNES-like mosaic effect\n- {Rotate} performs a rotation on the object","params":[{"type":{"names":["String"]},"description":"The name of the effect to use.","name":"fxName"},{"type":{"names":["Object"]},"description":"The options of the effect.","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"linear\"","description":"The easing functions to use, can be: 'linear', 'swing', 'easeInQuad', 'easeOutBounce'.","name":"options.easing"}],"returns":[{"type":{"names":["Promise"]},"description":"a promise that will be fullfilled when the effect has been completed"}],"name":"animate","longname":"Drawable#animate","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#animate","$kind":"method","$docmaLink":"?api=drawable#Drawable#animate"},{"comment":"/**\n     * Stops the object from moving, optionnaly immediately going to target position\n     *\n     * @param {Boolean} [gotoTarget=false] Set to true to go to the target position.\n     */","meta":{"range":[9037,9269],"filename":"Drawable.js","lineno":308,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000875","name":"Drawable#cancelMoveTo","type":"MethodDefinition","paramnames":["gotoTarget"]},"vars":{"":null}},"description":"Stops the object from moving, optionnaly immediately going to target position","params":[{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true to go to the target position.","name":"gotoTarget"}],"name":"cancelMoveTo","longname":"Drawable#cancelMoveTo","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#cancelMoveTo","$kind":"method","$docmaLink":"?api=drawable#Drawable#cancelMoveTo"},{"comment":"/**\n     * Centers the object into the scene.\n     *\n     * @returns {Drawable} this\n     */","meta":{"range":[9372,9563],"filename":"Drawable.js","lineno":323,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000912","name":"Drawable#center","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Centers the object into the scene.","returns":[{"type":{"names":["Drawable"]},"description":"this"}],"name":"center","longname":"Drawable#center","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#center","$kind":"method","$docmaLink":"?api=drawable#Drawable#center"},{"comment":"/**\n     * Stop using a particular behavior.\n     *\n     * The vx and vy properties of the object will be set to zero.\n     */","meta":{"range":[10304,10388],"filename":"Drawable.js","lineno":352,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000991","name":"Drawable#clearBehavior","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Stop using a particular behavior.\n\nThe vx and vy properties of the object will be set to zero.","name":"clearBehavior","longname":"Drawable#clearBehavior","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#clearBehavior","$kind":"method","$docmaLink":"?api=drawable#Drawable#clearBehavior"},{"comment":"/**\n     * Destroy is called when an object is removed from a scene or object\n     *\n     * <blockquote><strong>Note:</strong> calling destroy on a parent will automatically call the destroy method of each child.</blockquote>\n     * \n     */","meta":{"range":[28748,29266],"filename":"Drawable.js","lineno":994,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002596","name":"Drawable#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Destroy is called when an object is removed from a scene or object\n\n<blockquote><strong>Note:</strong> calling destroy on a parent will automatically call the destroy method of each child.</blockquote>","name":"destroy","longname":"Drawable#destroy","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#destroy","$kind":"method","$docmaLink":"?api=drawable#Drawable#destroy"},{"comment":"/**\n     * Returns the angle property of the object.\n     * \n     * @returns {Number} The angle of the object\n     */","meta":{"range":[14705,14750],"filename":"Drawable.js","lineno":515,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001366","name":"Drawable#getAngle","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the angle property of the object.","returns":[{"type":{"names":["Number"]},"description":"The angle of the object"}],"name":"getAngle","longname":"Drawable#getAngle","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#getAngle","$kind":"method","$docmaLink":"?api=drawable#Drawable#getAngle"},{"comment":"/**\n     * Returns the current height of the object: with some types of Drawables ({Sprite}),\n     * height can vary\n     *\n     * @returns {number} The current height of the object\n     *\n     * @related {Sprite}\n     */","meta":{"range":[16435,16489],"filename":"Drawable.js","lineno":597,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001457","name":"Drawable#getCurrentHeight","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the current height of the object: with some types of Drawables ({Sprite}),\nheight can vary","returns":[{"type":{"names":["number"]},"description":"The current height of the object"}],"tags":[{"originalTitle":"related","title":"related","text":"{Sprite}","value":"{Sprite}"}],"name":"getCurrentHeight","longname":"Drawable#getCurrentHeight","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#getCurrentHeight","$kind":"method","$docmaLink":"?api=drawable#Drawable#getCurrentHeight"},{"comment":"/**\n     * Returns the current width of the drawable: with some types of drawables ({Sprite}),\n     * width can vary\n     *\n     * @returns {number} The current width of the object\n     *\n     * @related {Sprite}\n     */","meta":{"range":[16151,16203],"filename":"Drawable.js","lineno":585,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001449","name":"Drawable#getCurrentWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the current width of the drawable: with some types of drawables ({Sprite}),\nwidth can vary","returns":[{"type":{"names":["number"]},"description":"The current width of the object"}],"tags":[{"originalTitle":"related","title":"related","text":"{Sprite}","value":"{Sprite}"}],"name":"getCurrentWidth","longname":"Drawable#getCurrentWidth","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#getCurrentWidth","$kind":"method","$docmaLink":"?api=drawable#Drawable#getCurrentWidth"},{"comment":"/**\n     * Returns the object's hitbox.\n     *\n     * Some drawables (eg. {Sprite} may have different hitbox for different frames.\n     *\n     * @returns {Object} an object with x, y, x2, Y2 describing the hit box\n     */","meta":{"range":[16721,16892],"filename":"Drawable.js","lineno":608,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001465","name":"Drawable#getHitBox","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the object's hitbox.\n\nSome drawables (eg. {Sprite} may have different hitbox for different frames.","returns":[{"type":{"names":["Object"]},"description":"an object with x, y, x2, Y2 describing the hit box"}],"name":"getHitBox","longname":"Drawable#getHitBox","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#getHitBox","$kind":"method","$docmaLink":"?api=drawable#Drawable#getHitBox"},{"comment":"/**\n     * Returns the current opacity of the object\n     *\n     * @returns {number} The current opacity value.\n     */","meta":{"range":[8789,8838],"filename":"Drawable.js","lineno":299,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000867","name":"Drawable#getOpacity","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the current opacity of the object","returns":[{"type":{"names":["number"]},"description":"The current opacity value."}],"name":"getOpacity","longname":"Drawable#getOpacity","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#getOpacity","$kind":"method","$docmaLink":"?api=drawable#Drawable#getOpacity"},{"comment":"/**\n     * Returns previously seved position\n     *\n     * @returns {Object} The saved position\n     */","meta":{"range":[13433,13542],"filename":"Drawable.js","lineno":458,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001315","name":"Drawable#getSavedPosition","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns previously seved position","returns":[{"type":{"names":["Object"]},"description":"The saved position"}],"name":"getSavedPosition","longname":"Drawable#getSavedPosition","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#getSavedPosition","$kind":"method","$docmaLink":"?api=drawable#Drawable#getSavedPosition"},{"comment":"/**\n     * Hides the object\n     *\n     * @returns {Drawable} this\n     */","meta":{"range":[15080,15146],"filename":"Drawable.js","lineno":537,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001391","name":"Drawable#hide","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Hides the object","returns":[{"type":{"names":["Drawable"]},"description":"this"}],"name":"hide","longname":"Drawable#hide","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#hide","$kind":"method","$docmaLink":"?api=drawable#Drawable#hide"},{"comment":"/**\n     * Performs collision tests on the specifed object.\n     *\n     * @param {Drawable} obj The object to perform test on\n     *\n     * @returns {Boolean} Returns true if this and obj collide\n     */","meta":{"range":[19450,20723],"filename":"Drawable.js","lineno":683,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001783","name":"Drawable#hitTest","type":"MethodDefinition","paramnames":["obj"]},"vars":{"":null}},"description":"Performs collision tests on the specifed object.","params":[{"type":{"names":["Drawable"]},"description":"The object to perform test on","name":"obj"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true if this and obj collide"}],"name":"hitTest","longname":"Drawable#hitTest","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#hitTest","$kind":"method","$docmaLink":"?api=drawable#Drawable#hitTest"},{"comment":"/**\n     * Moves the object to a new destination.\n     *\n     * @param {number} x The new horizontal position.\n     * @param {number} y The new vertical position.\n     * @param {number} [duration=0] The duration of the move, 0 to have the object move immediately to new position.\n     *\n     * @returns {Drawable} this\n     */","meta":{"range":[6543,7262],"filename":"Drawable.js","lineno":220,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000613","name":"Drawable#moveTo","type":"MethodDefinition","paramnames":["x","y","duration"]},"vars":{"":null}},"description":"Moves the object to a new destination.","params":[{"type":{"names":["number"]},"description":"The new horizontal position.","name":"x"},{"type":{"names":["number"]},"description":"The new vertical position.","name":"y"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The duration of the move, 0 to have the object move immediately to new position.","name":"duration"}],"returns":[{"type":{"names":["Drawable"]},"description":"this"}],"name":"moveTo","longname":"Drawable#moveTo","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#moveTo","$kind":"method","$docmaLink":"?api=drawable#Drawable#moveTo"},{"comment":"/**\n     * Sends a notification to listeners\n     *\n     * <blockquote><strong>Note:</strong> this is a simple wrapper to the NotificationManageger's notify method.</blockquote>\n     *\n     * @param {String} id name of the event to send\n     * @param {Object} data data to send with the event, default = empty object\n     */","meta":{"range":[28340,28416],"filename":"Drawable.js","lineno":982,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002574","name":"Drawable#notify","type":"MethodDefinition","paramnames":["id","data"]},"vars":{"":null}},"description":"Sends a notification to listeners\n\n<blockquote><strong>Note:</strong> this is a simple wrapper to the NotificationManageger's notify method.</blockquote>","params":[{"type":{"names":["String"]},"description":"name of the event to send","name":"id"},{"type":{"names":["Object"]},"description":"data to send with the event, default = empty object","name":"data"}],"name":"notify","longname":"Drawable#notify","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#notify","$kind":"method","$docmaLink":"?api=drawable#Drawable#notify"},{"comment":"/**\n     * onCollision is called on each collision with the object.\n     *\n     * This method does nothing and should be extended if needed.\n     *\n     */","meta":{"range":[25121,25143],"filename":"Drawable.js","lineno":871,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002320","name":"Drawable#onCollision","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"onCollision is called on each collision with the object.\n\nThis method does nothing and should be extended if needed.","name":"onCollision","longname":"Drawable#onCollision","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#onCollision","$kind":"method","$docmaLink":"?api=drawable#Drawable#onCollision"},{"comment":"/**\n     * onHit is called when the object collides with another object\n     *\n     * @param {Drawable} obj The object that collided.\n     *\n     * This function does nothing interesting: this should be extended if needed.\n     */","meta":{"range":[21438,21573],"filename":"Drawable.js","lineno":747,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002051","name":"Drawable#onHit","type":"MethodDefinition","paramnames":["obj"]},"vars":{"":null}},"description":"onHit is called when the object collides with another object","params":[{"type":{"names":["Drawable"]},"description":"The object that collided.\n\nThis function does nothing interesting: this should be extended if needed.","name":"obj"}],"name":"onHit","longname":"Drawable#onHit","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#onHit","$kind":"method","$docmaLink":"?api=drawable#Drawable#onHit"},{"comment":"/**\n     * Plays the spcified sound\n     *\n     * @param {String} id The id of the sound to play.\n     * @param {Object} options\n     * @param {Boolean} [options.pan=true] Set pan to true if you want to use panning.\n     * @param {Boolean} [options.loop=false] Set to true to loop the sound.\n     */","meta":{"range":[27319,28005],"filename":"Drawable.js","lineno":952,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002456","name":"Drawable#playSound","type":"MethodDefinition","paramnames":["id","options"]},"vars":{"":null}},"description":"Plays the spcified sound","params":[{"type":{"names":["String"]},"description":"The id of the sound to play.","name":"id"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":true,"description":"Set pan to true if you want to use panning.","name":"options.pan"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true to loop the sound.","name":"options.loop"}],"name":"playSound","longname":"Drawable#playSound","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#playSound","$kind":"method","$docmaLink":"?api=drawable#Drawable#playSound"},{"comment":"/**\n     * Remove every children from the object.\n     */","meta":{"range":[26150,26318],"filename":"Drawable.js","lineno":912,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002392","name":"Drawable#removeAllChildren","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Remove every children from the object.","name":"removeAllChildren","longname":"Drawable#removeAllChildren","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#removeAllChildren","$kind":"method","$docmaLink":"?api=drawable#Drawable#removeAllChildren"},{"comment":"/**\n     * Remove a child from the object\n     *\n     * <blockquote><strong>Note:</strong> removing a child object will call its `destroy` method.</blockquote>\n     * \n     * @param {Drawable} child The child to remove from the object.\n     *\n     */","meta":{"range":[25889,26082],"filename":"Drawable.js","lineno":900,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002353","name":"Drawable#removeChild","type":"MethodDefinition","paramnames":["child"]},"vars":{"":null}},"description":"Remove a child from the object\n\n<blockquote><strong>Note:</strong> removing a child object will call its `destroy` method.</blockquote>","params":[{"type":{"names":["Drawable"]},"description":"The child to remove from the object.","name":"child"}],"name":"removeChild","longname":"Drawable#removeChild","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#removeChild","$kind":"method","$docmaLink":"?api=drawable#Drawable#removeChild"},{"comment":"/**\n     * User customized reset method\n     */","meta":{"range":[3762,3778],"filename":"Drawable.js","lineno":121,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000314","name":"Drawable#reset","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"User customized reset method","name":"reset","longname":"Drawable#reset","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#reset","$kind":"method","$docmaLink":"?api=drawable#Drawable#reset"},{"comment":"/**\n     * Restores the previous context globalAlpha property.\n     *\n     * @param {RenderingContext} ctx The context.\n     */","meta":{"range":[15850,15920],"filename":"Drawable.js","lineno":573,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001436","name":"Drawable#restoreCtxAlpha","type":"MethodDefinition","paramnames":["ctx"]},"vars":{"":null}},"description":"Restores the previous context globalAlpha property.","params":[{"type":{"names":["RenderingContext"]},"description":"The context.","name":"ctx"}],"name":"restoreCtxAlpha","longname":"Drawable#restoreCtxAlpha","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#restoreCtxAlpha","$kind":"method","$docmaLink":"?api=drawable#Drawable#restoreCtxAlpha"},{"comment":"/**\n     * Saves current object position into `savedX` and `savedY` properties\n     */","meta":{"range":[13237,13319],"filename":"Drawable.js","lineno":448,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001295","name":"Drawable#savePosition","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Saves current object position into `savedX` and `savedY` properties","name":"savePosition","longname":"Drawable#savePosition","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#savePosition","$kind":"method","$docmaLink":"?api=drawable#Drawable#savePosition"},{"comment":"/**\n     * Change the angle of an object\n     *\n     * <blockquote><strong>Note:</strong> this property is only used for the rendering and it's ignored for collisions.</blockquote>\n     * \n     * @param {number} angle The new angle of the object. 0 < angle < 360.\n     *\n     */","meta":{"range":[14479,14577],"filename":"Drawable.js","lineno":505,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001355","name":"Drawable#setAngle","type":"MethodDefinition","paramnames":["angle"]},"vars":{"":null}},"description":"Change the angle of an object\n\n<blockquote><strong>Note:</strong> this property is only used for the rendering and it's ignored for collisions.</blockquote>","params":[{"type":{"names":["number"]},"description":"The new angle of the object. 0 < angle < 360.","name":"angle"}],"name":"setAngle","longname":"Drawable#setAngle","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setAngle","$kind":"method","$docmaLink":"?api=drawable#Drawable#setAngle"},{"comment":"/**\n     * Sets a new behavior to the object: this will be called in the move loop\n     *\n     * @param {(String|Behavior)} behavior Either the name of a standard behavior or a Behavior class to use.\n     * @param {Object} [options={}] The options of the behavior (may depend on the behavior type).\n     *\n     * @related {Behavior}\n     */","meta":{"range":[9914,10167],"filename":"Drawable.js","lineno":339,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000954","name":"Drawable#setBehavior","type":"MethodDefinition","paramnames":["behavior","options"]},"vars":{"":null}},"description":"Sets a new behavior to the object: this will be called in the move loop","params":[{"type":{"names":["String","Behavior"]},"description":"Either the name of a standard behavior or a Behavior class to use.","name":"behavior"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The options of the behavior (may depend on the behavior type).","name":"options"}],"tags":[{"originalTitle":"related","title":"related","text":"{Behavior}","value":"{Behavior}"}],"name":"setBehavior","longname":"Drawable#setBehavior","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setBehavior","$kind":"method","$docmaLink":"?api=drawable#Drawable#setBehavior"},{"comment":"/**\n     * Associates an image to the drawable.\n     *\n     * Some objects (eg. Sprite) need a source sheet image before being able to\n     * be rendered onto the display.\n     *\n     * @param {Image} image the image that this object needs to draw: redefine if needed\n     */","meta":{"range":[26604,26628],"filename":"Drawable.js","lineno":927,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002428","name":"Drawable#setImage","type":"MethodDefinition","paramnames":["image"]},"vars":{"":null}},"description":"Associates an image to the drawable.\n\nSome objects (eg. Sprite) need a source sheet image before being able to\nbe rendered onto the display.","params":[{"type":{"names":["Image"]},"description":"the image that this object needs to draw: redefine if needed","name":"image"}],"name":"setImage","longname":"Drawable#setImage","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setImage","$kind":"method","$docmaLink":"?api=drawable#Drawable#setImage"},{"comment":"/**\n     * Sets the map of the object.\n     *\n     * <blockquote><strong>Note:</strong> you don't usually need to call this method as it's called automatically when adding an object\n     * onto a map.</blockquote>\n     * \n     * @param {Map} map The map of the object.\n     *\n     */","meta":{"range":[5367,5504],"filename":"Drawable.js","lineno":178,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000548","name":"Drawable#setMap","type":"MethodDefinition","paramnames":["map"]},"vars":{"":null}},"description":"Sets the map of the object.\n\n<blockquote><strong>Note:</strong> you don't usually need to call this method as it's called automatically when adding an object\nonto a map.</blockquote>","params":[{"type":{"names":["Map"]},"description":"The map of the object.","name":"map"}],"name":"setMap","longname":"Drawable#setMap","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setMap","$kind":"method","$docmaLink":"?api=drawable#Drawable#setMap"},{"comment":"/**\n     * Applies a new mask to the object, clipping its drawing onto the scene/map\n     *\n     * @param {Object} mask The new mask to use, set to null to remove the mask.\n     * @param {Boolean} exclude Set to true to have the mask exclude portions of the drawing, in this case mask.color will be used.\n     */","meta":{"range":[8337,8482],"filename":"Drawable.js","lineno":278,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000829","name":"Drawable#setMask","type":"MethodDefinition","paramnames":["mask","exclude"]},"vars":{"":null}},"description":"Applies a new mask to the object, clipping its drawing onto the scene/map","params":[{"type":{"names":["Object"]},"description":"The new mask to use, set to null to remove the mask.","name":"mask","defaultvalue":null},{"type":{"names":["Boolean"]},"description":"Set to true to have the mask exclude portions of the drawing, in this case mask.color will be used.","name":"exclude","defaultvalue":false}],"name":"setMask","longname":"Drawable#setMask","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setMask","$kind":"method","$docmaLink":"?api=drawable#Drawable#setMask"},{"comment":"/**\n     * Changes the opacity of the object\n     *\n     * @param {number} opacity The new opacity.\n     */","meta":{"range":[8600,8659],"filename":"Drawable.js","lineno":290,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000856","name":"Drawable#setOpacity","type":"MethodDefinition","paramnames":["opacity"]},"vars":{"":null}},"description":"Changes the opacity of the object","params":[{"type":{"names":["number"]},"description":"The new opacity.","name":"opacity"}],"name":"setOpacity","longname":"Drawable#setOpacity","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setOpacity","$kind":"method","$docmaLink":"?api=drawable#Drawable#setOpacity"},{"comment":"/**\n     * Sets a new path for the object\n     *\n     * @param {Path} path The new path that the object will use when moving.\n     *\n     * @related {Path}\n     */","meta":{"range":[13818,13865],"filename":"Drawable.js","lineno":481,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001333","name":"Drawable#setPath","type":"MethodDefinition","paramnames":["path"]},"vars":{"":null}},"description":"Sets a new path for the object","params":[{"type":{"names":["Path"]},"description":"The new path that the object will use when moving.","name":"path"}],"tags":[{"originalTitle":"related","title":"related","text":"{Path}","value":"{Path}"}],"name":"setPath","longname":"Drawable#setPath","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setPath","$kind":"method","$docmaLink":"?api=drawable#Drawable#setPath"},{"comment":"/**\n     * WIP Sets the platform of the object. This will be used when platforms will be fully implemented.\n     *\n     * @param {Drawable} platform The platform the object is attached to.\n     */","meta":{"range":[6143,6206],"filename":"Drawable.js","lineno":207,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000602","name":"Drawable#setPlatform","type":"MethodDefinition","paramnames":["platform"]},"vars":{"":null}},"description":"WIP Sets the platform of the object. This will be used when platforms will be fully implemented.","params":[{"type":{"names":["Drawable"]},"description":"The platform the object is attached to.","name":"platform"}],"name":"setPlatform","longname":"Drawable#setPlatform","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setPlatform","$kind":"method","$docmaLink":"?api=drawable#Drawable#setPlatform"},{"comment":"/**\n     * Change the scale of the object\n     *\n     * <blockquote><strong>Note:</strong> it's only used when rendering, collision detection is not using the scale yet.</blockquote>\n     * \n     * @param {number} scale The new scale of the object.\n     *\n     */","meta":{"range":[14139,14190],"filename":"Drawable.js","lineno":493,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001344","name":"Drawable#setScale","type":"MethodDefinition","paramnames":["scale"]},"vars":{"":null}},"description":"Change the scale of the object\n\n<blockquote><strong>Note:</strong> it's only used when rendering, collision detection is not using the scale yet.</blockquote>","params":[{"type":{"names":["number"]},"description":"The new scale of the object.","name":"scale"}],"name":"setScale","longname":"Drawable#setScale","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setScale","$kind":"method","$docmaLink":"?api=drawable#Drawable#setScale"},{"comment":"/**\n     * Sets the scene of the object.\n     *\n     * <blockquote><strong>Note:</strong></blockquote> you don't usually need to call this method as it's called when adding an object onto a scene.\n     * \n     * @param {Scene} scene The scene of the object.\n     *\n     */","meta":{"range":[5787,5936],"filename":"Drawable.js","lineno":194,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000575","name":"Drawable#setScene","type":"MethodDefinition","paramnames":["scene"]},"vars":{"":null}},"description":"Sets the scene of the object.\n\n<blockquote><strong>Note:</strong></blockquote> you don't usually need to call this method as it's called when adding an object onto a scene.","params":[{"type":{"names":["Scene"]},"description":"The scene of the object.","name":"scene"}],"name":"setScene","longname":"Drawable#setScene","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#setScene","$kind":"method","$docmaLink":"?api=drawable#Drawable#setScene"},{"comment":"/**\n     * Show the object\n     *\n     * @returns {Drawable} this\n     */","meta":{"range":[15230,15295],"filename":"Drawable.js","lineno":548,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001403","name":"Drawable#show","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Show the object","returns":[{"type":{"names":["Drawable"]},"description":"this"}],"name":"show","longname":"Drawable#show","kind":"function","memberof":"Drawable","scope":"instance","params":[],"$longname":"Drawable#show","$kind":"method","$docmaLink":"?api=drawable#Drawable#show"},{"comment":"/**\n     * Draws the sprite hit box\n     *\n     * @param {RenderingContext} The canvas context where to render the hitbox.\n     */","meta":{"range":[17033,18546],"filename":"Drawable.js","lineno":622,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001489","name":"Drawable#showHitBox","type":"MethodDefinition","paramnames":["ctx"]},"vars":{"":null}},"description":"Draws the sprite hit box","params":[{"type":{"names":["RenderingContext"]},"description":"canvas context where to render the hitbox.","name":"The"}],"name":"showHitBox","longname":"Drawable#showHitBox","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#showHitBox","$kind":"method","$docmaLink":"?api=drawable#Drawable#showHitBox"},{"comment":"/**\n       * Draws a box around objects. This method is called when debugging is enabled.\n       *\n       * @param {RenderingContext} ctx The context where to draw the box.\n       */","meta":{"range":[18739,19113],"filename":"Drawable.js","lineno":661,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001686","name":"Drawable#showObjectBox","type":"MethodDefinition","paramnames":["ctx"]},"vars":{"":null}},"description":"Draws a box around objects. This method is called when debugging is enabled.","params":[{"type":{"names":["RenderingContext"]},"description":"The context where to draw the box.","name":"ctx"}],"name":"showObjectBox","longname":"Drawable#showObjectBox","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#showObjectBox","$kind":"method","$docmaLink":"?api=drawable#Drawable#showObjectBox"},{"comment":"/**\n     * Moves the object by snapping it to the map tiles\n     *\n     * @param {Boolean} isLeft Should we snap to the left?\n     * @param {Boolean} isUp Should we snap to the right?\n     */","meta":{"range":[7464,8014],"filename":"Drawable.js","lineno":251,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000738","name":"Drawable#snapToMap","type":"MethodDefinition","paramnames":["isLeft","isUp"]},"vars":{"":null}},"description":"Moves the object by snapping it to the map tiles","params":[{"type":{"names":["Boolean"]},"description":"Should we snap to the left?","name":"isLeft"},{"type":{"names":["Boolean"]},"description":"Should we snap to the right?","name":"isUp"}],"name":"snapToMap","longname":"Drawable#snapToMap","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#snapToMap","$kind":"method","$docmaLink":"?api=drawable#Drawable#snapToMap"},{"comment":"/**\n     * Stops current running animation\n     *\n     * In some cases, the game may need to stop effects from running before\n     * they are completed. This method proves a way to do so and set an end value.\n     *\n     * @param {any} setEndValue The end value of the animation.\n     */","meta":{"range":[23983,24315],"filename":"Drawable.js","lineno":828,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002241","name":"Drawable#stopAnimate","type":"MethodDefinition","paramnames":["setEndValue"]},"vars":{"":null}},"description":"Stops current running animation\n\nIn some cases, the game may need to stop effects from running before\nthey are completed. This method proves a way to do so and set an end value.","params":[{"type":{"names":["any"]},"description":"The end value of the animation.","name":"setEndValue"}],"name":"stopAnimate","longname":"Drawable#stopAnimate","kind":"function","memberof":"Drawable","scope":"instance","$longname":"Drawable#stopAnimate","$kind":"method","$docmaLink":"?api=drawable#Drawable#stopAnimate"}],"$constructor":{"comment":"/**\n     * Creates a new Drawable: this class should be extended before creating an instance\n     *\n     * @param {String} type The type of object: this describes the type of object\n     * @param {Object} options\n     * @param {String} [options.objectId] The id of the object. The defaults is type + random timestamp.\n     * @param {Number} [options.collideGroup=0] The type of collision to use for the object.\n     * @param {Boolean} [options.master=false] Set to true if the object should be the master.\n     * @param {Boolean} [options.visible=true] An invisible object isn't rendered onto the screen.\n     */","meta":{"range":[1394,3704],"filename":"Drawable.js","lineno":30,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000025","name":"Drawable","type":"MethodDefinition","paramnames":["type","options"]},"vars":{"":null}},"description":"Creates a new Drawable: this class should be extended before creating an instance","params":[{"type":{"names":["String"]},"description":"The type of object: this describes the type of object","name":"type"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"optional":true,"description":"The id of the object. The defaults is type + random timestamp.","name":"options.objectId"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The type of collision to use for the object.","name":"options.collideGroup"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if the object should be the master.","name":"options.master"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":true,"description":"An invisible object isn't rendered onto the screen.","name":"options.visible"}],"name":"Drawable","longname":"Drawable","kind":"class","scope":"global","undocumented":true,"$longname":"Drawable","$kind":"constructor","$docmaLink":"?api=drawable#Drawable"}}],"symbols":["Drawable","Drawable#addChild","Drawable#addMoveHandler","Drawable#animate","Drawable#cancelMoveTo","Drawable#center","Drawable#clearBehavior","Drawable#destroy","Drawable#getAngle","Drawable#getCurrentHeight","Drawable#getCurrentWidth","Drawable#getHitBox","Drawable#getOpacity","Drawable#getSavedPosition","Drawable#hide","Drawable#hitTest","Drawable#moveTo","Drawable#notify","Drawable#onCollision","Drawable#onHit","Drawable#playSound","Drawable#removeAllChildren","Drawable#removeChild","Drawable#reset","Drawable#restoreCtxAlpha","Drawable#savePosition","Drawable#setAngle","Drawable#setBehavior","Drawable#setImage","Drawable#setMap","Drawable#setMask","Drawable#setOpacity","Drawable#setPath","Drawable#setPlatform","Drawable#setScale","Drawable#setScene","Drawable#show","Drawable#showHitBox","Drawable#showObjectBox","Drawable#snapToMap","Drawable#stopAnimate"]},"drawables":{"documentation":[{"comment":"/**\n * The BitmapText class allows to use a spritesheet as a font to draw text onto the screen\n * \n * @extends Drawable\n */","meta":{"range":[187,14988],"filename":"BitmapText.js","lineno":9,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002385","name":"BitmapText","type":"ClassDeclaration","paramnames":["type","options"]}},"classdesc":"The BitmapText class allows to use a spritesheet as a font to draw text onto the screen","augments":["Drawable"],"name":"BitmapText","longname":"BitmapText","kind":"class","scope":"global","description":"Creates a new BitmapText Drawable\n\n<blockquote><strong>Note:</strong> the charset is limited to a subset of ascii right now: a-z 0-9</blockquote>","params":[{"type":{"names":["String"]},"optional":true,"defaultvalue":"'BitmapText'","description":"The type of the sprite.","name":"type"},{"type":{"names":["Object"]},"description":"The options describing the BitmapText.","name":"options"},{"type":{"names":["String"]},"description":"The path to the spritesheet file.","name":"options.imageId"},{"type":{"names":["Number"]},"optional":true,"description":"The width of a character in pixels.","name":"options.charWidth"},{"type":{"names":["Number"]},"optional":true,"description":"The height of a character in pixels.","name":"options.charHeight"},{"type":{"names":["String"]},"optional":true,"description":"The list of supported characters in the spritesheet","name":"options.characters"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":"charWidth","description":"The full width of the character (including spaces) inside the spritesheet","name":"options.offsetX"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":2,"description":"The space between each drawn character (in pixels).","name":"options.letterSpacing"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The optinal vertical offset at which to start getting bitmap characters.","name":"options.startY"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The optinal hoeizontal offset at which to start getting bitmap characters.","name":"options.startX"}],"$longname":"BitmapText","$kind":"class","$docmaLink":"?api=drawables#BitmapText","$members":[{"comment":"/**\n     * Clears the buffer\n     */","meta":{"range":[3370,3451],"filename":"BitmapText.js","lineno":100,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002562","name":"BitmapText#clearBuffer","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Clears the buffer","name":"clearBuffer","longname":"BitmapText#clearBuffer","kind":"function","memberof":"BitmapText","scope":"instance","params":[],"$longname":"BitmapText#clearBuffer","$kind":"method","$docmaLink":"?api=drawables#BitmapText#clearBuffer"},{"comment":"/**\n     * Generates a new buffer that can hold current text\n     *\n     * @param {Display} display the display to get the buffer from\n     */","meta":{"range":[3022,3323],"filename":"BitmapText.js","lineno":88,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002535","name":"BitmapText#createBuffer","type":"MethodDefinition","paramnames":["display"]},"vars":{"":null}},"description":"Generates a new buffer that can hold current text","params":[{"type":{"names":["Display"]},"description":"the display to get the buffer from","name":"display"}],"name":"createBuffer","longname":"BitmapText#createBuffer","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#createBuffer","$kind":"method","$docmaLink":"?api=drawables#BitmapText#createBuffer"},{"comment":"/**\n     * Draws the specified line onto the screen\n     *\n     * @param {Object} options\n     * @param {Number} options.x The horizontal position of the line to draw\n     * @param {Number} options.x The vertical position of the line to draw\n     * @param {String} options.text The text to draw\n     *\n     * @example\n     *\n     * bitmapText.drawLine({\n     * \tx: 0,\n     *  y: 0,\n     *  text: 'hi there'\n     * })\n     */","meta":{"range":[11039,11782],"filename":"BitmapText.js","lineno":344,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003258","name":"BitmapText#drawLine","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Draws the specified line onto the screen","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The horizontal position of the line to draw","name":"options.x"},{"type":{"names":["Number"]},"description":"The vertical position of the line to draw","name":"options.x"},{"type":{"names":["String"]},"description":"The text to draw","name":"options.text"}],"examples":["bitmapText.drawLine({\n\tx: 0,\n y: 0,\n text: 'hi there'\n})"],"name":"drawLine","longname":"BitmapText#drawLine","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#drawLine","$kind":"method","$docmaLink":"?api=drawables#BitmapText#drawLine"},{"comment":"/**\n     * Returns the character horizontal offset in pixels inside the spritesheet\n     *\n     * @param {String} char The character to get the position inside the spritesheet\n     *\n     * @returns {Number} The horizontal offset in pixels of the character\n     */","meta":{"range":[10252,10604],"filename":"BitmapText.js","lineno":315,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003219","name":"BitmapText#getCharOffset","type":"MethodDefinition","paramnames":["char"]},"vars":{"":null}},"description":"Returns the character horizontal offset in pixels inside the spritesheet","params":[{"type":{"names":["String"]},"description":"The character to get the position inside the spritesheet","name":"char"}],"returns":[{"type":{"names":["Number"]},"description":"The horizontal offset in pixels of the character"}],"name":"getCharOffset","longname":"BitmapText#getCharOffset","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#getCharOffset","$kind":"method","$docmaLink":"?api=drawables#BitmapText#getCharOffset"},{"comment":"/**\n     * Calculates the position and size of each pixel lines to be rendered onto the screen\n     */","meta":{"range":[5117,6404],"filename":"BitmapText.js","lineno":161,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002733","name":"BitmapText#getLines","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Calculates the position and size of each pixel lines to be rendered onto the screen","name":"getLines","longname":"BitmapText#getLines","kind":"function","memberof":"BitmapText","scope":"instance","params":[],"$longname":"BitmapText#getLines","$kind":"method","$docmaLink":"?api=drawables#BitmapText#getLines"},{"comment":"/**\n     * Returns the length of a text line, in characters\n     *\n     * @param {String} str The string to mesure.\n     * @param {String} eof The character to use as end of line.\n     *\n     * @returns {Number} The length of the string\n     */","meta":{"range":[4826,5004],"filename":"BitmapText.js","lineno":147,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002705","name":"BitmapText#getNextLineLength","type":"MethodDefinition","paramnames":["str","eof"]},"vars":{"":null}},"description":"Returns the length of a text line, in characters","params":[{"type":{"names":["String"]},"description":"The string to mesure.","name":"str"},{"type":{"names":["String"]},"description":"The character to use as end of line.","name":"eof"}],"returns":[{"type":{"names":["Number"]},"description":"The length of the string"}],"name":"getNextLineLength","longname":"BitmapText#getNextLineLength","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#getNextLineLength","$kind":"method","$docmaLink":"?api=drawables#BitmapText#getNextLineLength"},{"comment":"/**\n     * Pre-renders text from this.textArray into the internal buffer\n     *\n     */","meta":{"range":[11880,12114],"filename":"BitmapText.js","lineno":369,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003379","name":"BitmapText#renderText","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Pre-renders text from this.textArray into the internal buffer","name":"renderText","longname":"BitmapText#renderText","kind":"function","memberof":"BitmapText","scope":"instance","params":[],"$longname":"BitmapText#renderText","$kind":"method","$docmaLink":"?api=drawables#BitmapText#renderText"},{"comment":"/**\n     * Scrolls text from the bottom to the top, firing an optional callback at the end\n     *\n     * @param {Number} The duration of the scrolling in milliseconds.\n     * @param {Function} [callback=undefined] An optional callback to fire when the scrolling is over.\n     */","meta":{"range":[6693,7008],"filename":"BitmapText.js","lineno":209,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002910","name":"BitmapText#scrollFromBottom","type":"MethodDefinition","paramnames":["duration","callback"]},"vars":{"":null}},"description":"Scrolls text from the bottom to the top, firing an optional callback at the end","params":[{"type":{"names":["Number"]},"description":"duration of the scrolling in milliseconds.","name":"The"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to fire when the scrolling is over.","name":"callback"}],"name":"scrollFromBottom","longname":"BitmapText#scrollFromBottom","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#scrollFromBottom","$kind":"method","$docmaLink":"?api=drawables#BitmapText#scrollFromBottom"},{"comment":"/**\n     * Scrolls text from the top, firing an optional callback at the end\n     *\n     * @param {Number} duration The duration of the scrolling in milliseconds.\n     * @param {Function} [callback=undefined] An optional callback to fire when the scrolling is over.\n     */","meta":{"range":[7292,7581],"filename":"BitmapText.js","lineno":227,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002944","name":"BitmapText#scrollFromTop","type":"MethodDefinition","paramnames":["duration","callback"]},"vars":{"":null}},"description":"Scrolls text from the top, firing an optional callback at the end","params":[{"type":{"names":["Number"]},"description":"The duration of the scrolling in milliseconds.","name":"duration"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to fire when the scrolling is over.","name":"callback"}],"name":"scrollFromTop","longname":"BitmapText#scrollFromTop","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#scrollFromTop","$kind":"method","$docmaLink":"?api=drawables#BitmapText#scrollFromTop"},{"comment":"/**\n     * Sets bitmapText properties using options\n     *\n     * @param {Object} options\n     */","meta":{"range":[3559,4182],"filename":"BitmapText.js","lineno":109,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002578","name":"BitmapText#setFontParams","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Sets bitmapText properties using options","params":[{"type":{"names":["Object"]},"name":"options"}],"name":"setFontParams","longname":"BitmapText#setFontParams","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#setFontParams","$kind":"method","$docmaLink":"?api=drawables#BitmapText#setFontParams"},{"comment":"/**\n     * Changes the image to use as spritesheet\n     *\n     * @param {Image} image The new {image} to use as source.\n     */","meta":{"range":[12766,12972],"filename":"BitmapText.js","lineno":408,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003467","name":"BitmapText#setImage","type":"MethodDefinition","paramnames":["image"]},"vars":{"":null}},"description":"Changes the image to use as spritesheet","params":[{"type":{"names":["Image"]},"description":"The new {image} to use as source.","name":"image"}],"name":"setImage","longname":"BitmapText#setImage","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#setImage","$kind":"method","$docmaLink":"?api=drawables#BitmapText#setImage"},{"comment":"/**\n     * Sets the scene of the bitmap font\n     *\n     * @param {Scene} scene The scene to use.\n     */","meta":{"range":[13088,13176],"filename":"BitmapText.js","lineno":422,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003496","name":"BitmapText#setScene","type":"MethodDefinition","paramnames":["scene"]},"vars":{"":null}},"description":"Sets the scene of the bitmap font","params":[{"type":{"names":["Scene"]},"description":"The scene to use.","name":"scene"}],"name":"setScene","longname":"BitmapText#setScene","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#setScene","$kind":"method","$docmaLink":"?api=drawables#BitmapText#setScene"},{"comment":"/**\n     * Changes the text of the sprite, calculates every line size, and renders it into\n     * the internal buffer\n     *\n     * @param {String} text The new text to use\n     */","meta":{"range":[12305,12628],"filename":"BitmapText.js","lineno":388,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003424","name":"BitmapText#setText","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"Changes the text of the sprite, calculates every line size, and renders it into\nthe internal buffer","params":[{"type":{"names":["String"]},"description":"The new text to use","name":"text"}],"name":"setText","longname":"BitmapText#setText","kind":"function","memberof":"BitmapText","scope":"instance","$longname":"BitmapText#setText","$kind":"method","$docmaLink":"?api=drawables#BitmapText#setText"},{"comment":"/**\n     * update() is called at each render loop and calculates the next position during a scrolling\n     */","meta":{"range":[9151,9977],"filename":"BitmapText.js","lineno":285,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003098","name":"BitmapText#update","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"update() is called at each render loop and calculates the next position during a scrolling","name":"update","longname":"BitmapText#update","kind":"function","memberof":"BitmapText","scope":"instance","params":[],"$longname":"BitmapText#update","$kind":"method","$docmaLink":"?api=drawables#BitmapText#update"}],"$constructor":{"comment":"/**\n     * Creates a new BitmapText Drawable\n     * \n     * <blockquote><strong>Note:</strong> the charset is limited to a subset of ascii right now: a-z 0-9</blockquote>\n     * \n     * @param {String} [type='BitmapText'] The type of the sprite.\n     * @param {Object} options The options describing the BitmapText.\n     * @param {String} options.imageId The path to the spritesheet file.\n     * @param {Number} [options.charWidth] The width of a character in pixels.\n     * @param {Number} [options.charHeight] The height of a character in pixels.\n     * @param {String} [options.characters] The list of supported characters in the spritesheet\n     * @param {Number} [options.offsetX=charWidth] The full width of the character (including spaces) inside the spritesheet\n     * @param {Number} [options.letterSpacing=2] The space between each drawn character (in pixels).\n     * @param {Number} [options.startY=0] The optinal vertical offset at which to start getting bitmap characters.\n     * @param {Number} [options.startX=0] The optinal hoeizontal offset at which to start getting bitmap characters.\n     *\n     * @example\n     *\n     *  let myFont = new BitmapText('myFont', {\n     *      charWidth: 18,\n     *      charHeight: 18,\n     *      imageId: 'font'\n     *      offsetX: 34,\n     *      startY: 36\n     *   });\n     *\n     */","meta":{"range":[1571,2869],"filename":"BitmapText.js","lineno":37,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100002389","name":"BitmapText","type":"MethodDefinition","paramnames":["type","options"]},"vars":{"":null}},"description":"Creates a new BitmapText Drawable\n\n<blockquote><strong>Note:</strong> the charset is limited to a subset of ascii right now: a-z 0-9</blockquote>","params":[{"type":{"names":["String"]},"optional":true,"defaultvalue":"'BitmapText'","description":"The type of the sprite.","name":"type"},{"type":{"names":["Object"]},"description":"The options describing the BitmapText.","name":"options"},{"type":{"names":["String"]},"description":"The path to the spritesheet file.","name":"options.imageId"},{"type":{"names":["Number"]},"optional":true,"description":"The width of a character in pixels.","name":"options.charWidth"},{"type":{"names":["Number"]},"optional":true,"description":"The height of a character in pixels.","name":"options.charHeight"},{"type":{"names":["String"]},"optional":true,"description":"The list of supported characters in the spritesheet","name":"options.characters"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":"charWidth","description":"The full width of the character (including spaces) inside the spritesheet","name":"options.offsetX"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":2,"description":"The space between each drawn character (in pixels).","name":"options.letterSpacing"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The optinal vertical offset at which to start getting bitmap characters.","name":"options.startY"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The optinal hoeizontal offset at which to start getting bitmap characters.","name":"options.startX"}],"examples":["let myFont = new BitmapText('myFont', {\n     charWidth: 18,\n     charHeight: 18,\n     imageId: 'font'\n     offsetX: 34,\n     startY: 36\n  });"],"name":"BitmapText","longname":"BitmapText","kind":"class","scope":"global","undocumented":true,"$longname":"BitmapText","$kind":"constructor","$docmaLink":"?api=drawables#BitmapText"}},{"comment":"/**\n * The menu class allows to quickly add text menu to an Athena Scene\n *\n * Each menu entry is called menuItem and is a simple object with the following properties:\n * `{ text: 'menu text', selectable: true|false, active: true|false, visible: true|false }`\n *\n * @extends Drawable\n */","meta":{"range":[363,4937],"filename":"Menu.js","lineno":12,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003753","name":"Menu","type":"ClassDeclaration","paramnames":["type","options"]}},"classdesc":"The menu class allows to quickly add text menu to an Athena Scene\n\nEach menu entry is called menuItem and is a simple object with the following properties:\n`{ text: 'menu text', selectable: true|false, active: true|false, visible: true|false }`","augments":["Drawable"],"name":"Menu","longname":"Menu","kind":"class","scope":"global","description":"Creates a new Menu","params":[{"type":{"names":["String"]},"description":"The type of object.","name":"type"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"Menu Title\"","description":"The title of the menu.","name":"options.title"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"black\"","description":"The color of the menu.","name":"options.color"},{"type":{"names":["Array"]},"optional":true,"defaultvalue":"[]","description":"The menu items to add.","name":"options.menuItems"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"red\"","description":"The default color to use for the selected menu item.","name":"options.selectedColor"}],"$longname":"Menu","$kind":"class","$docmaLink":"?api=drawables#Menu","$members":[{"comment":"/**\n     * Adds a new menu item\n     *\n     * @param {Object} menu An hash describing the menu.\n     *\n     * The hash can have the following properties:\n     * { text: 'menu text', selectable: true|false, active: true|false, visible: true|false }\n     */","meta":{"range":[2338,2719],"filename":"Menu.js","lineno":80,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003870","name":"Menu#addMenuItem","type":"MethodDefinition","paramnames":["menu"]},"vars":{"":null}},"description":"Adds a new menu item","params":[{"type":{"names":["Object"]},"description":"An hash describing the menu.\n\nThe hash can have the following properties:\n{ text: 'menu text', selectable: true|false, active: true|false, visible: true|false }","name":"menu"}],"name":"addMenuItem","longname":"Menu#addMenuItem","kind":"function","memberof":"Menu","scope":"instance","$longname":"Menu#addMenuItem","$kind":"method","$docmaLink":"?api=drawables#Menu#addMenuItem"},{"comment":"/**\n     * Adds several menuItems in a row\n     *\n     * @param {Array<Object>} items The list of items to add\n     *\n     * @see {@link #Menu#addMenuItem|`Menu.addMenuItem()`}\n     */","meta":{"range":[2914,3168],"filename":"Menu.js","lineno":98,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003946","name":"Menu#addMenuItems","type":"MethodDefinition","paramnames":["items"]},"vars":{"":null}},"description":"Adds several menuItems in a row","params":[{"type":{"names":["Array.<Object>"]},"description":"The list of items to add","name":"items"}],"see":["{@link #Menu#addMenuItem|`Menu.addMenuItem()`}"],"name":"addMenuItems","longname":"Menu#addMenuItems","kind":"function","memberof":"Menu","scope":"instance","$longname":"Menu#addMenuItems","$kind":"method","$docmaLink":"?api=drawables#Menu#addMenuItems"},{"comment":"/**\n     * Updates the text of a menu item\n     *\n     * @param {Number} itemId The index of the item to modify.\n     * @param {String} text The new text.\n     *\n     */","meta":{"range":[4163,4231],"filename":"Menu.js","lineno":153,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004055","name":"Menu#setText","type":"MethodDefinition","paramnames":["itemId","text"]},"vars":{"":null}},"description":"Updates the text of a menu item","params":[{"type":{"names":["Number"]},"description":"The index of the item to modify.","name":"itemId"},{"type":{"names":["String"]},"description":"The new text.","name":"text"}],"name":"setText","longname":"Menu#setText","kind":"function","memberof":"Menu","scope":"instance","$longname":"Menu#setText","$kind":"method","$docmaLink":"?api=drawables#Menu#setText"}],"$constructor":{"comment":"/**\n     * Creates a new Menu\n     *\n     * @param {String} type The type of object.\n     * @param {Object} options\n     * @param {String} [options.title=\"Menu Title\"] The title of the menu.\n     * @param {String} [options.color=\"black\"] The color of the menu.\n     * @param {Array} [options.menuItems=[]] The menu items to add.\n     * @param {String} [options.selectedColor=\"red\"] The default color to use for the selected menu item.\n     *\n     * @example\n     *\n     * let myMenu = new Menu('mainMenu', {\n     *   title: 'Gods JS',\n     *      color: 'white',\n     *      menuItems: [\n     *      {\n     *          text: '> Start Game',\n     *          selectable: true,\n     *          visible: true,\n     *          active: true\n     *      },\n     *      {\n     *          text: '> Cannot Select ;)',\n     *          selectable: true,\n     *          visible: true\n     *      }]\n     *    })\n     */","meta":{"range":[1308,2072],"filename":"Menu.js","lineno":42,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100003757","name":"Menu","type":"MethodDefinition","paramnames":["type","options"]},"vars":{"":null}},"description":"Creates a new Menu","params":[{"type":{"names":["String"]},"description":"The type of object.","name":"type"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"Menu Title\"","description":"The title of the menu.","name":"options.title"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"black\"","description":"The color of the menu.","name":"options.color"},{"type":{"names":["Array"]},"optional":true,"defaultvalue":"[]","description":"The menu items to add.","name":"options.menuItems"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"red\"","description":"The default color to use for the selected menu item.","name":"options.selectedColor"}],"examples":["let myMenu = new Menu('mainMenu', {\n  title: 'Gods JS',\n     color: 'white',\n     menuItems: [\n     {\n         text: '> Start Game',\n         selectable: true,\n         visible: true,\n         active: true\n     },\n     {\n         text: '> Cannot Select ;)',\n         selectable: true,\n         visible: true\n     }]\n   })"],"name":"Menu","longname":"Menu","kind":"class","scope":"global","undocumented":true,"$longname":"Menu","$kind":"constructor","$docmaLink":"?api=drawables#Menu"}},{"comment":"/**\n * Very basic wrapper for canvas drawing methods\n * Incomplete: missing translate, rotates, scale support\n *\n * @extends Drawable\n */","meta":{"range":[215,5022],"filename":"Paint.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004169","name":"Paint","type":"ClassDeclaration","paramnames":["name","options"]}},"classdesc":"Very basic wrapper for canvas drawing methods\nIncomplete: missing translate, rotates, scale support","augments":["Drawable"],"name":"Paint","longname":"Paint","kind":"class","scope":"global","description":"Creates a new Paint instance","params":[{"type":{"names":["String"]},"description":"The name of the Paint element.","name":"name"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"optional":true,"description":"The width of the Paint element.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"description":"The height of the Paint element.","name":"options.height"},{"type":{"names":["Number"]},"optional":true,"description":"The horizontal position of the element.","name":"options.x"},{"type":{"names":["Number"]},"optional":true,"description":"The vertical position of the element.","name":"options.y"},{"type":{"names":["String"]},"optional":true,"description":"The color of the element. Can be changed by subsequent drawing method calls.","name":"options.color"}],"$longname":"Paint","$kind":"class","$docmaLink":"?api=drawables#Paint","$members":[{"comment":"/**\n     * Since the Paint Drawable only supports the Fade effect, we override\n     * the Drawable's animate method and print a warning in case the user\n     * attempts to run an unsupported animation.\n     *\n     * @param {String} name The name of the animation to run.\n     * @param {Object} options\n     */","meta":{"range":[4746,5020],"filename":"Paint.js","lineno":148,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004526","name":"Paint#animate","type":"MethodDefinition","paramnames":["name","options"]},"vars":{"":null}},"description":"Since the Paint Drawable only supports the Fade effect, we override\nthe Drawable's animate method and print a warning in case the user\nattempts to run an unsupported animation.","params":[{"type":{"names":["String"]},"description":"The name of the animation to run.","name":"name"},{"type":{"names":["Object"]},"name":"options"}],"name":"animate","longname":"Paint#animate","kind":"function","memberof":"Paint","scope":"instance","$longname":"Paint#animate","$kind":"method","$docmaLink":"?api=drawables#Paint#animate"},{"comment":"/**\n     * Draws an arc\n     *\n     * @param {Number} x The arc's center x position, related to the Paint's position.\n     * @param {Number} y The arc's center y position, related to the Paint's position.\n     * @param {Number} radius The arc's radius, in radian.\n     * @param {Number} startAngle The arc's start angle, in radian.\n     * @param {Number} endAngle The arc's send angle, in radian.\n     * @param {String} strokeStyle The arc's stroke style.\n     * @param {Number} strokeWidth The arc's line width.\n     */","meta":{"range":[4107,4426],"filename":"Paint.js","lineno":130,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004464","name":"Paint#arc","type":"MethodDefinition","paramnames":["x","y","radius","startAngle","endAngle","strokeStyle","strokeWidth"]},"vars":{"":null}},"description":"Draws an arc","params":[{"type":{"names":["Number"]},"description":"The arc's center x position, related to the Paint's position.","name":"x"},{"type":{"names":["Number"]},"description":"The arc's center y position, related to the Paint's position.","name":"y"},{"type":{"names":["Number"]},"description":"The arc's radius, in radian.","name":"radius"},{"type":{"names":["Number"]},"description":"The arc's start angle, in radian.","name":"startAngle"},{"type":{"names":["Number"]},"description":"The arc's send angle, in radian.","name":"endAngle"},{"type":{"names":["String"]},"description":"The arc's stroke style.","name":"strokeStyle"},{"type":{"names":["Number"]},"description":"The arc's line width.","name":"strokeWidth"}],"name":"arc","longname":"Paint#arc","kind":"function","memberof":"Paint","scope":"instance","$longname":"Paint#arc","$kind":"method","$docmaLink":"?api=drawables#Paint#arc"},{"comment":"/**\n     * Draws a circle\n     *\n     * @param {Number} x The circle's center x related to the Paint's position.\n     * @param {Number} y The circle's center y related to the Paint's position.\n     * @param {Number} radius The circle's radius in radian.\n     * @param {String} color The circle's color.\n     * @param {Number} strokeWidth The circle's line width.\n     * @param {String} strokeStyle The circle's strokeStyle.\n     */","meta":{"range":[3133,3576],"filename":"Paint.js","lineno":104,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004373","name":"Paint#circle","type":"MethodDefinition","paramnames":["x","y","radius","color","strokeWidth","strokeStyle"]},"vars":{"":null}},"description":"Draws a circle","params":[{"type":{"names":["Number"]},"description":"The circle's center x related to the Paint's position.","name":"x"},{"type":{"names":["Number"]},"description":"The circle's center y related to the Paint's position.","name":"y"},{"type":{"names":["Number"]},"description":"The circle's radius in radian.","name":"radius"},{"type":{"names":["String"]},"description":"The circle's color.","name":"color"},{"type":{"names":["Number"]},"description":"The circle's line width.","name":"strokeWidth"},{"type":{"names":["String"]},"description":"The circle's strokeStyle.","name":"strokeStyle"}],"name":"circle","longname":"Paint#circle","kind":"function","memberof":"Paint","scope":"instance","$longname":"Paint#circle","$kind":"method","$docmaLink":"?api=drawables#Paint#circle"},{"comment":"/**\n     * Fills the Paint with specified color\n     *\n     * @param {String} [color=this.color] The color to used for filling the Paint.\n     */","meta":{"range":[1995,2132],"filename":"Paint.js","lineno":73,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004295","name":"Paint#fill","type":"MethodDefinition","paramnames":["color"]},"vars":{"":null}},"description":"Fills the Paint with specified color","params":[{"type":{"names":["String"]},"optional":true,"defaultvalue":"this.color","description":"The color to used for filling the Paint.","name":"color"}],"name":"fill","longname":"Paint#fill","kind":"function","memberof":"Paint","scope":"instance","$longname":"Paint#fill","$kind":"method","$docmaLink":"?api=drawables#Paint#fill"},{"comment":"/**\n     * Draws a rectangle\n     *\n     * @param {Number} x The rect's x related to the Paint'x position.\n     * @param {Number} y The rect's y related to the Paint'x position.\n     * @param {Number} width The width of the rectangle.\n     * @param {Number} height The height of the rectangle.\n     * @param {String} [color=this.color] The color of the rectangle.\n     */","meta":{"range":[2514,2691],"filename":"Paint.js","lineno":87,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004331","name":"Paint#rect","type":"MethodDefinition","paramnames":["x","y","width","height","color"]},"vars":{"":null}},"description":"Draws a rectangle","params":[{"type":{"names":["Number"]},"description":"The rect's x related to the Paint'x position.","name":"x"},{"type":{"names":["Number"]},"description":"The rect's y related to the Paint'x position.","name":"y"},{"type":{"names":["Number"]},"description":"The width of the rectangle.","name":"width"},{"type":{"names":["Number"]},"description":"The height of the rectangle.","name":"height"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"this.color","description":"The color of the rectangle.","name":"color"}],"name":"rect","longname":"Paint#rect","kind":"function","memberof":"Paint","scope":"instance","$longname":"Paint#rect","$kind":"method","$docmaLink":"?api=drawables#Paint#rect"},{"comment":"/**\n     * The render method is called at each frame.\n     *\n     * User should redefine this and put there needed drawing calls\n     */","meta":{"range":[1822,1839],"filename":"Paint.js","lineno":64,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004291","name":"Paint#render","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"The render method is called at each frame.\n\nUser should redefine this and put there needed drawing calls","name":"render","longname":"Paint#render","kind":"function","memberof":"Paint","scope":"instance","params":[],"$longname":"Paint#render","$kind":"method","$docmaLink":"?api=drawables#Paint#render"}],"$constructor":{"comment":"/**\n     * Creates a new Paint instance\n     *\n     * @param {String} name The name of the Paint element.\n     * @param {Object} options\n     * @param {Number} [options.width] The width of the Paint element.\n     * @param {Number} [options.height] The height of the Paint element.\n     * @param {Number} [options.x] The horizontal position of the element.\n     * @param {Number} [options.y] The vertical position of the element.\n     * @param {String} [options.color] The color of the element. Can be changed by subsequent drawing method calls.\n     *\n     */","meta":{"range":[814,1075],"filename":"Paint.js","lineno":23,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004173","name":"Paint","type":"MethodDefinition","paramnames":["name","options"]},"vars":{"":null}},"description":"Creates a new Paint instance","params":[{"type":{"names":["String"]},"description":"The name of the Paint element.","name":"name"},{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"optional":true,"description":"The width of the Paint element.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"description":"The height of the Paint element.","name":"options.height"},{"type":{"names":["Number"]},"optional":true,"description":"The horizontal position of the element.","name":"options.x"},{"type":{"names":["Number"]},"optional":true,"description":"The vertical position of the element.","name":"options.y"},{"type":{"names":["String"]},"optional":true,"description":"The color of the element. Can be changed by subsequent drawing method calls.","name":"options.color"}],"name":"Paint","longname":"Paint","kind":"class","scope":"global","undocumented":true,"$longname":"Paint","$kind":"constructor","$docmaLink":"?api=drawables#Paint"}},{"comment":"/**\n * Basic class for displaying text using Canvas\n *\n * @extends Drawable\n */","meta":{"range":[155,7684],"filename":"SimpleText.js","lineno":9,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004748","name":"SimpleText","type":"ClassDeclaration","paramnames":["type","options"]}},"classdesc":"Basic class for displaying text using Canvas","augments":["Drawable"],"name":"SimpleText","longname":"SimpleText","kind":"class","scope":"global","params":[{"type":{"names":["String"]},"description":"The type of the graphic object","name":"type"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["String"]},"optional":true,"description":"The initial text. Can be changed later using SimpleText.setText().","name":"options.text"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The width of the text.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The height of the text.","name":"options.height"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"Arial\"","description":"The font to use to draw the text.","name":"options.fontFace"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"normal\"","description":"The style of the font.","name":"options.fontStyle"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"18px\"","description":"The size of the font.","name":"options.fontSize"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"normal\"","description":"The weight of the font.","name":"options.fontWeight"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"center\"","description":"How to align the text when rendered.","name":"options.align"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"white\"","description":"The color to use when rendering the text.","name":"options.color"}],"$longname":"SimpleText","$kind":"class","$docmaLink":"?api=drawables#SimpleText","$members":[{"comment":"/**\n     * Clears the buffer\n     */","meta":{"range":[2411,2492],"filename":"SimpleText.js","lineno":71,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004900","name":"SimpleText#clearBuffer","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Clears the buffer","name":"clearBuffer","longname":"SimpleText#clearBuffer","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#clearBuffer","$kind":"method","$docmaLink":"?api=drawables#SimpleText#clearBuffer"},{"comment":"/**\n     * Generates a new buffer that can hold current text\n     *\n     * @param {Display} display The display to get the buffer from.\n     */","meta":{"range":[2045,2364],"filename":"SimpleText.js","lineno":59,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004869","name":"SimpleText#createBuffer","type":"MethodDefinition","paramnames":["display"]},"vars":{"":null}},"description":"Generates a new buffer that can hold current text","params":[{"type":{"names":["Display"]},"description":"The display to get the buffer from.","name":"display"}],"name":"createBuffer","longname":"SimpleText#createBuffer","kind":"function","memberof":"SimpleText","scope":"instance","$longname":"SimpleText#createBuffer","$kind":"method","$docmaLink":"?api=drawables#SimpleText#createBuffer"},{"comment":"/**\n     * Returns the height of the text object\n     *\n     * @returns {Number} The object's height\n     */","meta":{"range":[5625,5683],"filename":"SimpleText.js","lineno":211,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005213","name":"SimpleText#getCurrentHeight","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the height of the text object","returns":[{"type":{"names":["Number"]},"description":"The object's height"}],"name":"getCurrentHeight","longname":"SimpleText#getCurrentHeight","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#getCurrentHeight","$kind":"method","$docmaLink":"?api=drawables#SimpleText#getCurrentHeight"},{"comment":"/**\n     * Returns the horizontal offset of the text object\n     *\n     * @returns {Number} The object's horizontal offset\n     */","meta":{"range":[5824,5880],"filename":"SimpleText.js","lineno":220,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005221","name":"SimpleText#getCurrentOffsetX","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the horizontal offset of the text object","returns":[{"type":{"names":["Number"]},"description":"The object's horizontal offset"}],"name":"getCurrentOffsetX","longname":"SimpleText#getCurrentOffsetX","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#getCurrentOffsetX","$kind":"method","$docmaLink":"?api=drawables#SimpleText#getCurrentOffsetX"},{"comment":"/**\n     * Returns the vertical offset of the text object\n     *\n     * @returns {Number} The object's vertical offset\n     */","meta":{"range":[6017,6073],"filename":"SimpleText.js","lineno":229,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005229","name":"SimpleText#getCurrentOffsetY","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the vertical offset of the text object","returns":[{"type":{"names":["Number"]},"description":"The object's vertical offset"}],"name":"getCurrentOffsetY","longname":"SimpleText#getCurrentOffsetY","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#getCurrentOffsetY","$kind":"method","$docmaLink":"?api=drawables#SimpleText#getCurrentOffsetY"},{"comment":"/**\n     * Returns the width of the text object\n     *\n     * @returns {Number} The object's width\n     */","meta":{"range":[5450,5506],"filename":"SimpleText.js","lineno":202,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005205","name":"SimpleText#getCurrentWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the width of the text object","returns":[{"type":{"names":["Number"]},"description":"The object's width"}],"name":"getCurrentWidth","longname":"SimpleText#getCurrentWidth","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#getCurrentWidth","$kind":"method","$docmaLink":"?api=drawables#SimpleText#getCurrentWidth"},{"comment":"/**\n     * Returns the hitbox of the text object\n     *\n     * @returns {Object} The new hitbox\n     */","meta":{"range":[5203,5333],"filename":"SimpleText.js","lineno":188,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005187","name":"SimpleText#getHitBox","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the hitbox of the text object","returns":[{"type":{"names":["Object"]},"description":"The new hitbox"}],"name":"getHitBox","longname":"SimpleText#getHitBox","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#getHitBox","$kind":"method","$docmaLink":"?api=drawables#SimpleText#getHitBox"},{"comment":"/**\n     * Gets the following text metrics:\n     *  - this.fakeLineHeight`\n     * - `this.fakeHeight`\n     * - `this.fakeWidth`\n     *\n     * This method also sets the canvas'width & height to fit these metrics\n     */","meta":{"range":[3521,4119],"filename":"SimpleText.js","lineno":124,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004996","name":"SimpleText#getMetrics","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Gets the following text metrics:\n - this.fakeLineHeight`\n- `this.fakeHeight`\n- `this.fakeWidth`\n\nThis method also sets the canvas'width & height to fit these metrics","name":"getMetrics","longname":"SimpleText#getMetrics","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#getMetrics","$kind":"method","$docmaLink":"?api=drawables#SimpleText#getMetrics"},{"comment":"/**\n     * Called when an object collides with the text Object\n     *\n     * @param {Drawable} obj The graphical object that collided.\n     */","meta":{"range":[6226,6376],"filename":"SimpleText.js","lineno":238,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005237","name":"SimpleText#onHit","type":"MethodDefinition","paramnames":["obj"]},"vars":{"":null}},"description":"Called when an object collides with the text Object","params":[{"type":{"names":["Drawable"]},"description":"The graphical object that collided.","name":"obj"}],"name":"onHit","longname":"SimpleText#onHit","kind":"function","memberof":"SimpleText","scope":"instance","$longname":"SimpleText#onHit","$kind":"method","$docmaLink":"?api=drawables#SimpleText#onHit"},{"comment":"/**\n     * Prepare render by getting text metrics and creating temp text buffer\n     */","meta":{"range":[3026,3292],"filename":"SimpleText.js","lineno":103,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004948","name":"SimpleText#prepareRender","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Prepare render by getting text metrics and creating temp text buffer","name":"prepareRender","longname":"SimpleText#prepareRender","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#prepareRender","$kind":"method","$docmaLink":"?api=drawables#SimpleText#prepareRender"},{"comment":"/**\n     * pre-renders text in a temp canvas\n     */","meta":{"range":[4182,4373],"filename":"SimpleText.js","lineno":144,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005094","name":"SimpleText#renderText","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"pre-renders text in a temp canvas","name":"renderText","longname":"SimpleText#renderText","kind":"function","memberof":"SimpleText","scope":"instance","params":[],"$longname":"SimpleText#renderText","$kind":"method","$docmaLink":"?api=drawables#SimpleText#renderText"},{"comment":"/**\n     * Change the color of the object\n     *\n     * @param {String} color The new color to use, can be anything that is valid for the `color` *CSS* property.\n     */","meta":{"range":[5011,5089],"filename":"SimpleText.js","lineno":178,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005171","name":"SimpleText#setColor","type":"MethodDefinition","paramnames":["color"]},"vars":{"":null}},"description":"Change the color of the object","params":[{"type":{"names":["String"]},"description":"The new color to use, can be anything that is valid for the `color` *CSS* property.","name":"color"}],"name":"setColor","longname":"SimpleText#setColor","kind":"function","memberof":"SimpleText","scope":"instance","$longname":"SimpleText#setColor","$kind":"method","$docmaLink":"?api=drawables#SimpleText#setColor"},{"comment":"/**\n     * Overrides Drawable's setScene element: we need to have\n     * have a scene to be able to calculate metrics\n     *\n     * @param {*} scene\n     */","meta":{"range":[4743,4831],"filename":"SimpleText.js","lineno":167,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005152","name":"SimpleText#setScene","type":"MethodDefinition","paramnames":["scene"]},"vars":{"":null}},"description":"Overrides Drawable's setScene element: we need to have\nhave a scene to be able to calculate metrics","params":[{"type":{"names":["*"]},"name":"scene"}],"name":"setScene","longname":"SimpleText#setScene","kind":"function","memberof":"SimpleText","scope":"instance","$longname":"SimpleText#setScene","$kind":"method","$docmaLink":"?api=drawables#SimpleText#setScene"},{"comment":"/**\n     * Change the size of the object\n     *\n     * @param {Number} width The width of the object.\n     * @param {Number} height The height of the object.\n     */","meta":{"range":[2750,2928],"filename":"SimpleText.js","lineno":90,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004920","name":"SimpleText#setSize","type":"MethodDefinition","paramnames":["width","height"]},"vars":{"":null}},"description":"Change the size of the object","params":[{"type":{"names":["Number"]},"description":"The width of the object.","name":"width"},{"type":{"names":["Number"]},"description":"The height of the object.","name":"height"}],"name":"setSize","longname":"SimpleText#setSize","kind":"function","memberof":"SimpleText","scope":"instance","$longname":"SimpleText#setSize","$kind":"method","$docmaLink":"?api=drawables#SimpleText#setSize"},{"comment":"/**\n     * Updates the text's object\n     *\n     * @param {String} text The new text of the SimpleText object.\n     */","meta":{"range":[4502,4576],"filename":"SimpleText.js","lineno":156,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100005136","name":"SimpleText#setText","type":"MethodDefinition","paramnames":["text"]},"vars":{"":null}},"description":"Updates the text's object","params":[{"type":{"names":["String"]},"description":"The new text of the SimpleText object.","name":"text"}],"name":"setText","longname":"SimpleText#setText","kind":"function","memberof":"SimpleText","scope":"instance","$longname":"SimpleText#setText","$kind":"method","$docmaLink":"?api=drawables#SimpleText#setText"}],"$constructor":{"comment":"/**\n     *\n     * @param {String} type The type of the graphic object\n     * @param {Object} [options={}]\n     * @param {String} [options.text=undefined] The initial text. Can be changed later using SimpleText.setText().\n     * @param {Number} [options.width=0] The width of the text.\n     * @param {Number} [options.height=0] The height of the text.\n     * @param {String} [options.fontFace=\"Arial\"] The font to use to draw the text.\n     * @param {String} [options.fontStyle=\"normal\"] The style of the font.\n     * @param {String} [options.fontSize=\"18px\"] The size of the font.\n     * @param {String} [options.fontWeight=\"normal\"] The weight of the font.\n     * @param {String} [options.align=\"center\"] How to align the text when rendered.\n     * @param {String} [options.color=\"white\"] The color to use when rendering the text.\n     *\n     * @example\n     *\n     * let myText = new SimpleText({\n     *  text: 'hello',\n     *  fontFace: 'Verdana',\n     *  fontStyle: 'bold',\n     *  fontSize: '24px'\n     * })\n     */","meta":{"range":[1220,1891],"filename":"SimpleText.js","lineno":33,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004752","name":"SimpleText","type":"MethodDefinition","paramnames":["type","options"]},"vars":{"":null}},"params":[{"type":{"names":["String"]},"description":"The type of the graphic object","name":"type"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["String"]},"optional":true,"description":"The initial text. Can be changed later using SimpleText.setText().","name":"options.text"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The width of the text.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The height of the text.","name":"options.height"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"Arial\"","description":"The font to use to draw the text.","name":"options.fontFace"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"normal\"","description":"The style of the font.","name":"options.fontStyle"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"18px\"","description":"The size of the font.","name":"options.fontSize"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"normal\"","description":"The weight of the font.","name":"options.fontWeight"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"center\"","description":"How to align the text when rendered.","name":"options.align"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"white\"","description":"The color to use when rendering the text.","name":"options.color"}],"examples":["let myText = new SimpleText({\n text: 'hello',\n fontFace: 'Verdana',\n fontStyle: 'bold',\n fontSize: '24px'\n})"],"name":"SimpleText","longname":"SimpleText","kind":"class","scope":"global","undocumented":true,"$longname":"SimpleText","$kind":"constructor","$docmaLink":"?api=drawables#SimpleText"}},{"comment":"/**\n * This class extends {Drawable} to implement 2D sprites using an image sprite sheet.\n *\n * A sprite can have an infinite number of animations.\n * Each animation can have a different frameDuration and any number of frames.\n * Each frame may have a different size and a different hitbox\n *\n * <blockquote><strong>Note:</strong> Since games usually have multiple sprites of the same type, it's common to extend the Sprite class\n * to generate each sprite type with its own properties and then use these sprites instead of instanciating\n * the Sprite class.</blockquote>\n *\n *\n * @extends Drawable\n */","meta":{"range":[750,26786],"filename":"Sprite.js","lineno":20,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000014","name":"Sprite","type":"ClassDeclaration","paramnames":["type","options"]}},"classdesc":"This class extends {Drawable} to implement 2D sprites using an image sprite sheet.\n\nA sprite can have an infinite number of animations.\nEach animation can have a different frameDuration and any number of frames.\nEach frame may have a different size and a different hitbox\n\n<blockquote><strong>Note:</strong> Since games usually have multiple sprites of the same type, it's common to extend the Sprite class\nto generate each sprite type with its own properties and then use these sprites instead of instanciating\nthe Sprite class.</blockquote>","augments":["Drawable"],"name":"Sprite","longname":"Sprite","kind":"class","scope":"global","description":"Creates a new Sprite","params":[{"type":{"names":["String"]},"description":"An identifier for this sprite, can be for example `enemy1`,...","name":"type"},{"type":{"names":["Object"]},"description":"An options hash for the object.","name":"options"},{"type":{"names":["String"]},"description":"The id to the spritesheet image to use.","name":"options.imageId"},{"type":{"names":["Object"]},"description":"A map with a key for each animation of the sprite.","name":"options.animations"}],"$longname":"Sprite","$kind":"class","$docmaLink":"?api=drawables#Sprite","$members":[{"comment":"/**\n     * Adds a new animation to the sprite\n     *\n     * @param {String} name The name of the new animation.\n     * @param {String} id The id of the resource (image) to use for the animation.\n     * @param {Object} [options={}] The animation to add, see:\n     * @param {number} [options.offsetX=0] The x offset of the sprite frames inside the image.\n     * @param {number} [options.offsetY=0] The y offset of the sprite frames inside the image.\n     * @param {number} [options.frameWidth] The width of a frame.\n     * @param {number} [options.frameHeight=imageHeight] The height of a frame. By default frameHeight is taken from image.naturalHeight.\n     * @param {number} [options.frameDuration=1] The duration of a frame (1 = 16ms).\n     * @param {number} [options.frameSpacing=0] The space between each frame.\n     * @param {number} [options.loop=1] 0 = anim play once and stops at the end, 1 = anim loops to frame 1 at the end, 2 = anim will play in reverse when reaching the end, then plays again, etc.\n     * @returns {Deferred} a deferred object that's resolved once the animation is ready.\n     * @example\n     * // creates a new animation from the image run.png\n     * mySprite.addAnimation ('running', 'run.png', {\n     *    frameWidth: 32\n     * })\n     */","meta":{"range":[5042,6556],"filename":"Sprite.js","lineno":152,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000175","name":"Sprite#addAnimation","type":"MethodDefinition","paramnames":["name","id","options"]},"vars":{"":null}},"description":"Adds a new animation to the sprite","params":[{"type":{"names":["String"]},"description":"The name of the new animation.","name":"name"},{"type":{"names":["String"]},"description":"The id of the resource (image) to use for the animation.","name":"id"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","description":"The animation to add, see:","name":"options"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The x offset of the sprite frames inside the image.","name":"options.offsetX"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The y offset of the sprite frames inside the image.","name":"options.offsetY"},{"type":{"names":["number"]},"optional":true,"description":"The width of a frame.","name":"options.frameWidth"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"imageHeight","description":"The height of a frame. By default frameHeight is taken from image.naturalHeight.","name":"options.frameHeight"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"The duration of a frame (1 = 16ms).","name":"options.frameDuration"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The space between each frame.","name":"options.frameSpacing"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"0 = anim play once and stops at the end, 1 = anim loops to frame 1 at the end, 2 = anim will play in reverse when reaching the end, then plays again, etc.","name":"options.loop"}],"returns":[{"type":{"names":["Deferred"]},"description":"a deferred object that's resolved once the animation is ready."}],"examples":["// creates a new animation from the image run.png\nmySprite.addAnimation ('running', 'run.png', {\n   frameWidth: 32\n})"],"name":"addAnimation","longname":"Sprite#addAnimation","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#addAnimation","$kind":"method","$docmaLink":"?api=drawables#Sprite#addAnimation"},{"comment":"/**\n     * advanceFrame is called at each render loop and waits for currentAnim.frameDuration\n     * before advancing to the next animation frame.\n     *\n     * @param {String} animName The name to advance.\n     *\n     * If animName != currentAnimName then switches to the new animation\n     */","meta":{"range":[13202,13611],"filename":"Sprite.js","lineno":389,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000913","name":"Sprite#advanceFrame","type":"MethodDefinition","paramnames":["animName"]},"vars":{"":null}},"description":"advanceFrame is called at each render loop and waits for currentAnim.frameDuration\nbefore advancing to the next animation frame.","params":[{"type":{"names":["String"]},"description":"The name to advance.\n\nIf animName != currentAnimName then switches to the new animation","name":"animName"}],"name":"advanceFrame","longname":"Sprite#advanceFrame","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#advanceFrame","$kind":"method","$docmaLink":"?api=drawables#Sprite#advanceFrame"},{"comment":"/**\n     * Centers the sprite horizontaly around a tile\n     *\n     * @param {Object} tilePos The tile to center the sprite on.\n     */","meta":{"range":[16105,16481],"filename":"Sprite.js","lineno":501,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001113","name":"Sprite#centerXOverTile","type":"MethodDefinition","paramnames":["tilePos"]},"vars":{"":null}},"description":"Centers the sprite horizontaly around a tile","params":[{"type":{"names":["Object"]},"description":"The tile to center the sprite on.","name":"tilePos"}],"name":"centerXOverTile","longname":"Sprite#centerXOverTile","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#centerXOverTile","$kind":"method","$docmaLink":"?api=drawables#Sprite#centerXOverTile"},{"comment":"/**\n     * Stops current animation from running\n     *\n     * TODO: rename this method\n     */","meta":{"range":[16586,16665],"filename":"Sprite.js","lineno":517,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001160","name":"Sprite#clearMove","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Stops current animation from running\n\nTODO: rename this method","name":"clearMove","longname":"Sprite#clearMove","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#clearMove","$kind":"method","$docmaLink":"?api=drawables#Sprite#clearMove"},{"comment":"/**\n     * @returns {Number} the height of current animation frame\n     */","meta":{"range":[13891,13997],"filename":"Sprite.js","lineno":415,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000983","name":"Sprite#getCurrentHeight","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Number"]},"description":"the height of current animation frame"}],"name":"getCurrentHeight","longname":"Sprite#getCurrentHeight","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#getCurrentHeight","$kind":"method","$docmaLink":"?api=drawables#Sprite#getCurrentHeight"},{"comment":"/**\n     * Returns the x offset in the spritesheet of current animation frame\n     *\n     * @returns {number} current frame horizontal offset in the spritesheet\n     */","meta":{"range":[14176,14245],"filename":"Sprite.js","lineno":425,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000993","name":"Sprite#getCurrentOffsetX","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the x offset in the spritesheet of current animation frame","returns":[{"type":{"names":["number"]},"description":"current frame horizontal offset in the spritesheet"}],"name":"getCurrentOffsetX","longname":"Sprite#getCurrentOffsetX","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#getCurrentOffsetX","$kind":"method","$docmaLink":"?api=drawables#Sprite#getCurrentOffsetX"},{"comment":"/**\n     * Returns the y offset in the spritesheet of current animation frame\n     *\n     * @returns {number} current frame vertical offset in the spritesheet\n     */","meta":{"range":[14422,14491],"filename":"Sprite.js","lineno":434,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001003","name":"Sprite#getCurrentOffsetY","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the y offset in the spritesheet of current animation frame","returns":[{"type":{"names":["number"]},"description":"current frame vertical offset in the spritesheet"}],"name":"getCurrentOffsetY","longname":"Sprite#getCurrentOffsetY","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#getCurrentOffsetY","$kind":"method","$docmaLink":"?api=drawables#Sprite#getCurrentOffsetY"},{"comment":"/**\n     * @returns {Number} The width of current animation frame\n     *\n     */","meta":{"range":[13702,13806],"filename":"Sprite.js","lineno":407,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000973","name":"Sprite#getCurrentWidth","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"returns":[{"type":{"names":["Number"]},"description":"The width of current animation frame"}],"name":"getCurrentWidth","longname":"Sprite#getCurrentWidth","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#getCurrentWidth","$kind":"method","$docmaLink":"?api=drawables#Sprite#getCurrentWidth"},{"comment":"/**\n     * Returns the hitBox of current animation frame\n     *\n     * @returns {Object} the hitbox\n     *\n     * @example\n     *\n     * { x: 0, y: 0, x2: 10, y2: 10 }\n     */","meta":{"range":[15403,15602],"filename":"Sprite.js","lineno":471,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001037","name":"Sprite#getHitBox","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns the hitBox of current animation frame","returns":[{"type":{"names":["Object"]},"description":"the hitbox"}],"examples":["{ x: 0, y: 0, x2: 10, y2: 10 }"],"name":"getHitBox","longname":"Sprite#getHitBox","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#getHitBox","$kind":"method","$docmaLink":"?api=drawables#Sprite#getHitBox"},{"comment":"/**\n     * Returns hitbox position\n     *\n     * @returns {Object} the hitbox position using current sprite position\n     */","meta":{"range":[15737,15959],"filename":"Sprite.js","lineno":485,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001067","name":"Sprite#getHitBox2","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns hitbox position","returns":[{"type":{"names":["Object"]},"description":"the hitbox position using current sprite position"}],"name":"getHitBox2","longname":"Sprite#getHitBox2","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#getHitBox2","$kind":"method","$docmaLink":"?api=drawables#Sprite#getHitBox2"},{"comment":"/**\n     * Init default sprite properties\n     */","meta":{"range":[2774,3509],"filename":"Sprite.js","lineno":88,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000060","name":"Sprite#initProperties","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Init default sprite properties","name":"initProperties","longname":"Sprite#initProperties","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#initProperties","$kind":"method","$docmaLink":"?api=drawables#Sprite#initProperties"},{"comment":"/**\n     * Loads animations from settings, flipping sprites if needed\n     * and sets the last animation of the array as current animation\n     *\n     * @param {Object} [anims] The animations map to load.\n     */","meta":{"range":[6779,7565],"filename":"Sprite.js","lineno":213,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000335","name":"Sprite#load","type":"MethodDefinition","paramnames":["anims"]},"vars":{"":null}},"description":"Loads animations from settings, flipping sprites if needed\nand sets the last animation of the array as current animation","params":[{"type":{"names":["Object"]},"optional":true,"description":"The animations map to load.","name":"anims"}],"name":"load","longname":"Sprite#load","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#load","$kind":"method","$docmaLink":"?api=drawables#Sprite#load"},{"comment":"/**\n     * Goes to the next animation frame\n     *\n     * When reaching the last frame, the next frame will depend on animation.loop property:\n     *\n     * - if loop == 2 then animation will play back in reverse mode, up to the first frame\n     * - if loop == 1 then animation will play back from the begining so nextFrame = 0\n     * - if loop == 0/undefined then animation will stop and sprite._onAnimateEnd is called\n     */","meta":{"range":[10680,12467],"filename":"Sprite.js","lineno":321,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000700","name":"Sprite#nextFrame","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Goes to the next animation frame\n\nWhen reaching the last frame, the next frame will depend on animation.loop property:\n\n- if loop == 2 then animation will play back in reverse mode, up to the first frame\n- if loop == 1 then animation will play back from the begining so nextFrame = 0\n- if loop == 0/undefined then animation will stop and sprite._onAnimateEnd is called","name":"nextFrame","longname":"Sprite#nextFrame","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#nextFrame","$kind":"method","$docmaLink":"?api=drawables#Sprite#nextFrame"},{"comment":"/**\n     * Adds a new function that will be called when a new animation is ran\n     *\n     * @param {Function} func The callback function to add.\n     */","meta":{"range":[19621,19710],"filename":"Sprite.js","lineno":613,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001399","name":"Sprite#onAnimationChange","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"Adds a new function that will be called when a new animation is ran","params":[{"type":{"names":["function"]},"description":"The callback function to add.","name":"func"}],"name":"onAnimationChange","longname":"Sprite#onAnimationChange","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#onAnimationChange","$kind":"method","$docmaLink":"?api=drawables#Sprite#onAnimationChange"},{"comment":"/**\n     * Adds a new function that will be called when current animation ends\n     *\n     * @param {Function} func The callback to execute.\n     */","meta":{"range":[19312,19457],"filename":"Sprite.js","lineno":603,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001380","name":"Sprite#onAnimationEnd","type":"MethodDefinition","paramnames":["func"]},"vars":{"":null}},"description":"Adds a new function that will be called when current animation ends","params":[{"type":{"names":["function"]},"description":"The callback to execute.","name":"func"}],"name":"onAnimationEnd","longname":"Sprite#onAnimationEnd","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#onAnimationEnd","$kind":"method","$docmaLink":"?api=drawables#Sprite#onAnimationEnd"},{"comment":"/**\n     * onHit is called when a collision has been detect between the sprite and another graphical object\n     *\n     * @param {Drawable} obj The graphical object that collided.\n     */","meta":{"range":[20515,20674],"filename":"Sprite.js","lineno":644,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001450","name":"Sprite#onHit","type":"MethodDefinition","paramnames":["obj"]},"vars":{"":null}},"description":"onHit is called when a collision has been detect between the sprite and another graphical object","params":[{"type":{"names":["Drawable"]},"description":"The graphical object that collided.","name":"obj"}],"name":"onHit","longname":"Sprite#onHit","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#onHit","$kind":"method","$docmaLink":"?api=drawables#Sprite#onHit"},{"comment":"/**\n     * Restore animation to a previous saved state\n     *\n     * @related {storeCurrentAnim}\n     */","meta":{"range":[12793,12897],"filename":"Sprite.js","lineno":377,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000897","name":"Sprite#restorePreviousAnim","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Restore animation to a previous saved state","tags":[{"originalTitle":"related","title":"related","text":"{storeCurrentAnim}","value":"{storeCurrentAnim}"}],"name":"restorePreviousAnim","longname":"Sprite#restorePreviousAnim","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#restorePreviousAnim","$kind":"method","$docmaLink":"?api=drawables#Sprite#restorePreviousAnim"},{"comment":"/**\n     * Plays the animation from the end up to the first frame\n     */","meta":{"range":[9992,10242],"filename":"Sprite.js","lineno":304,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000652","name":"Sprite#rewind","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Plays the animation from the end up to the first frame","name":"rewind","longname":"Sprite#rewind","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#rewind","$kind":"method","$docmaLink":"?api=drawables#Sprite#rewind"},{"comment":"/**\n     * Changes the sprite's current animation\n     *\n     * @param {String} anim The new animation to play.\n     * @param {Function} [fn=undefined] An optionnal callback to run when the animation will have ended.\n     * @param {number} [frameNum=0] The first frame to play, defaults to zero.\n     * @param {Boolean} [revert=false] Whether to start playing the animation from the last frame.\n     */","meta":{"range":[17078,18515],"filename":"Sprite.js","lineno":530,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001170","name":"Sprite#setAnimation","type":"MethodDefinition","paramnames":["anim","fn","frameNum","revert"]},"vars":{"":null}},"description":"Changes the sprite's current animation","params":[{"type":{"names":["String"]},"description":"The new animation to play.","name":"anim"},{"type":{"names":["function"]},"optional":true,"description":"An optionnal callback to run when the animation will have ended.","name":"fn"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0,"description":"The first frame to play, defaults to zero.","name":"frameNum"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Whether to start playing the animation from the last frame.","name":"revert"}],"name":"setAnimation","longname":"Sprite#setAnimation","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#setAnimation","$kind":"method","$docmaLink":"?api=drawables#Sprite#setAnimation"},{"comment":"/**\n     * Changes the source image for this sprite\n     *\n     * @param {Image} image the new Image to use as spritesheet.\n     * @param {Boolean} [force=false] will replace current image with a new one if force == false.\n     */","meta":{"range":[9387,9908],"filename":"Sprite.js","lineno":281,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000595","name":"Sprite#setImage","type":"MethodDefinition","paramnames":["image","force"]},"vars":{"":null}},"description":"Changes the source image for this sprite","params":[{"type":{"names":["Image"]},"description":"the new Image to use as spritesheet.","name":"image"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"will replace current image with a new one if force == false.","name":"force"}],"name":"setImage","longname":"Sprite#setImage","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#setImage","$kind":"method","$docmaLink":"?api=drawables#Sprite#setImage"},{"comment":"/**\n     * Starts/resumes animation playback\n     *\n     * This method only sets `this.running` to true.\n     */","meta":{"range":[19100,19153],"filename":"Sprite.js","lineno":594,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001370","name":"Sprite#startAnimation","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Starts/resumes animation playback\n\nThis method only sets `this.running` to true.","name":"startAnimation","longname":"Sprite#startAnimation","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#startAnimation","$kind":"method","$docmaLink":"?api=drawables#Sprite#startAnimation"},{"comment":"/**\n     * Stops playing current animation\n     *\n     * @param {Boolean} runPreviousEndMethod Set to false if you don't want to run the end callback functions.\n     */","meta":{"range":[18694,18977],"filename":"Sprite.js","lineno":579,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100001344","name":"Sprite#stopAnimation","type":"MethodDefinition","paramnames":["runPreviousEndMethod"]},"vars":{"":null}},"description":"Stops playing current animation","params":[{"type":{"names":["Boolean"]},"description":"Set to false if you don't want to run the end callback functions.","name":"runPreviousEndMethod"}],"name":"stopAnimation","longname":"Sprite#stopAnimation","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#stopAnimation","$kind":"method","$docmaLink":"?api=drawables#Sprite#stopAnimation"},{"comment":"/**\n     * Save current animation name and frame for later use\n     */","meta":{"range":[12548,12678],"filename":"Sprite.js","lineno":367,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000877","name":"Sprite#storeCurrentAnim","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Save current animation name and frame for later use","name":"storeCurrentAnim","longname":"Sprite#storeCurrentAnim","kind":"function","memberof":"Sprite","scope":"instance","params":[],"$longname":"Sprite#storeCurrentAnim","$kind":"method","$docmaLink":"?api=drawables#Sprite#storeCurrentAnim"},{"comment":"/**\n     * WIP: updateFlipAnimation\n     *\n     * It's possible to define a new animation that is simply the flip of another one\n     * This method copies the frames of the source animation and flips them\n     *\n     * @param {Object} anim The animation to create frames for.\n     * @param {String} flipFrom The name of the animation to use as reference.\n     * @param {Number} flipType The direction of the flip: set to 1 for left/right flip, 2 for top/bottom flip.\n     *\n     */","meta":{"range":[8057,9146],"filename":"Sprite.js","lineno":252,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000428","name":"Sprite#updateFlipAnimation","type":"MethodDefinition","paramnames":["anim","flipFrom","flipType"]},"vars":{"":null}},"description":"WIP: updateFlipAnimation\n\nIt's possible to define a new animation that is simply the flip of another one\nThis method copies the frames of the source animation and flips them","params":[{"type":{"names":["Object"]},"description":"The animation to create frames for.","name":"anim"},{"type":{"names":["String"]},"description":"The name of the animation to use as reference.","name":"flipFrom"},{"type":{"names":["Number"]},"description":"The direction of the flip: set to 1 for left/right flip, 2 for top/bottom flip.","name":"flipType"}],"name":"updateFlipAnimation","longname":"Sprite#updateFlipAnimation","kind":"function","memberof":"Sprite","scope":"instance","$longname":"Sprite#updateFlipAnimation","$kind":"method","$docmaLink":"?api=drawables#Sprite#updateFlipAnimation"}],"$constructor":{"comment":"/**\n     * Creates a new Sprite\n     *\n     * @param {String} type An identifier for this sprite, can be for example `enemy1`,...\n     * @param {Object} options An options hash for the object.\n     * @param {String} options.imageId The id to the spritesheet image to use.\n     * @param {Object} options.animations A map with a key for each animation of the sprite.\n     *\n     * @see {@link #Drawable|Drawable} for additionnal parameters\n     * @example\n     *\n     * let mySprite = new Sprite('gem', {\n     *  imageId: 'objects',\n     *  x: options.x,\n     *  y: options.y,\n     *  pool: options.pool,\n     *  canCollide: true,\n     *  collideGroup: 1,\n     *  animations: {\n     *      mainLoop: {\n     *          frameDuration: 4,\n     *          frames:[{\n     *              offsetX: 136,\n     *              offsetY: 189,\n     *              width: 31,\n     *              height: 31,\n     *              hitBox: {\n     *                  x: 0,\n     *                  y: 0,\n     *                  x2: 31,\n     *                  y2: 31\n     *              },\n     *              plane: 0\n     *          },\n     *               {\n     *              offsetX: 170,\n     *              offsetY: 189,\n     *              width: 31,\n     *              height: 31,\n     *              hitBox: {\n     *                  x: 0,\n     *                  y: 0,\n     *                  x2: 31,\n     *                  y2: 31\n     *              },\n     *              plane: 0\n     *          }],\n     *           loop: 1\n     *       }\n     *    }\n     * });\n     */","meta":{"range":[2355,2714],"filename":"Sprite.js","lineno":73,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100000018","name":"Sprite","type":"MethodDefinition","paramnames":["type","options"]},"vars":{"":null}},"description":"Creates a new Sprite","params":[{"type":{"names":["String"]},"description":"An identifier for this sprite, can be for example `enemy1`,...","name":"type"},{"type":{"names":["Object"]},"description":"An options hash for the object.","name":"options"},{"type":{"names":["String"]},"description":"The id to the spritesheet image to use.","name":"options.imageId"},{"type":{"names":["Object"]},"description":"A map with a key for each animation of the sprite.","name":"options.animations"}],"see":["{@link #Drawable|Drawable} for additionnal parameters"],"examples":["let mySprite = new Sprite('gem', {\n imageId: 'objects',\n x: options.x,\n y: options.y,\n pool: options.pool,\n canCollide: true,\n collideGroup: 1,\n animations: {\n     mainLoop: {\n         frameDuration: 4,\n         frames:[{\n             offsetX: 136,\n             offsetY: 189,\n             width: 31,\n             height: 31,\n             hitBox: {\n                 x: 0,\n                 y: 0,\n                 x2: 31,\n                 y2: 31\n             },\n             plane: 0\n         },\n              {\n             offsetX: 170,\n             offsetY: 189,\n             width: 31,\n             height: 31,\n             hitBox: {\n                 x: 0,\n                 y: 0,\n                 x2: 31,\n                 y2: 31\n             },\n             plane: 0\n         }],\n          loop: 1\n      }\n   }\n});"],"name":"Sprite","longname":"Sprite","kind":"class","scope":"global","undocumented":true,"$longname":"Sprite","$kind":"constructor","$docmaLink":"?api=drawables#Sprite"}},{"comment":"/**\n * This class allows to handle wave of Drawables.\n *\n * In AthenaJS, waves of enemies can be triggered by certain action onto the map.\n *\n * Once every enemies of a wave have been destroyed, an action can be triggered,\n * for eg. to drop rewards onto the map.\n */","meta":{"range":[315,2631],"filename":"Wave.js","lineno":11,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004565","name":"Wave","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"This class allows to handle wave of Drawables.\n\nIn AthenaJS, waves of enemies can be triggered by certain action onto the map.\n\nOnce every enemies of a wave have been destroyed, an action can be triggered,\nfor eg. to drop rewards onto the map.","name":"Wave","longname":"Wave","kind":"class","scope":"global","description":"Creates a new Wave","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The size of the Wave.","name":"options.size"},{"type":{"names":["String"]},"description":"The type of wave, ie. what will happen after the wave have been destroyed.","name":"options.type"},{"type":{"names":["Object"]},"description":"The data needed for the `type` trigger.","name":"options.afterDestroyData"}],"$longname":"Wave","$kind":"class","$docmaLink":"?api=drawables#Wave","$members":[{"comment":"/**\n     * Called when the last element of a wave have been destroyed.\n     *\n     * This destroys the wave itself, triggering an option event\n     *\n     * @param {Drawable} element The last Drawable that was destroyed and triggered the wave destroy.\n     */","meta":{"range":[2144,2629],"filename":"Wave.js","lineno":71,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004683","name":"Wave#destroy","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null}},"description":"Called when the last element of a wave have been destroyed.\n\nThis destroys the wave itself, triggering an option event","params":[{"type":{"names":["Drawable"]},"description":"The last Drawable that was destroyed and triggered the wave destroy.","name":"element"}],"name":"destroy","longname":"Wave#destroy","kind":"function","memberof":"Wave","scope":"instance","$longname":"Wave#destroy","$kind":"method","$docmaLink":"?api=drawables#Wave#destroy"},{"comment":"/**\n     * Generates the sprite's drawable options, because some parameters, like position\n     * may depend on the wave element's positions\n     *\n     * @param {Drawable} element The element to use as a base\n     *\n     * @returns {Object} The options to pass to the drawable constructor\n     */","meta":{"range":[1526,1874],"filename":"Wave.js","lineno":50,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004619","name":"Wave#getSpriteOptions","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null}},"description":"Generates the sprite's drawable options, because some parameters, like position\nmay depend on the wave element's positions","params":[{"type":{"names":["Drawable"]},"description":"The element to use as a base","name":"element"}],"returns":[{"type":{"names":["Object"]},"description":"The options to pass to the drawable constructor"}],"name":"getSpriteOptions","longname":"Wave#getSpriteOptions","kind":"function","memberof":"Wave","scope":"instance","$longname":"Wave#getSpriteOptions","$kind":"method","$docmaLink":"?api=drawables#Wave#getSpriteOptions"},{"comment":"/**\n     * Removes an element from the wave.\n     *\n     * This method gets called once the drawable's `destroy` method is called\n     *\n     * @param {Drawable} element The element that was removed.\n     */","meta":{"range":[1096,1218],"filename":"Wave.js","lineno":34,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004597","name":"Wave#remove","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null}},"description":"Removes an element from the wave.\n\nThis method gets called once the drawable's `destroy` method is called","params":[{"type":{"names":["Drawable"]},"description":"The element that was removed.","name":"element"}],"name":"remove","longname":"Wave#remove","kind":"function","memberof":"Wave","scope":"instance","$longname":"Wave#remove","$kind":"method","$docmaLink":"?api=drawables#Wave#remove"}],"$constructor":{"comment":"/**\n     * Creates a new Wave\n     *\n     * @param {Object} options\n     * @param {Number} options.size The size of the Wave.\n     * @param {String} options.type The type of wave, ie. what will happen after the wave have been destroyed.\n     * @param {Object} options.afterDestroyData The data needed for the `type` trigger.\n     */","meta":{"range":[669,878],"filename":"Wave.js","lineno":20,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable","code":{"id":"astnode100004568","name":"Wave","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Creates a new Wave","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The size of the Wave.","name":"options.size"},{"type":{"names":["String"]},"description":"The type of wave, ie. what will happen after the wave have been destroyed.","name":"options.type"},{"type":{"names":["Object"]},"description":"The data needed for the `type` trigger.","name":"options.afterDestroyData"}],"name":"Wave","longname":"Wave","kind":"class","scope":"global","undocumented":true,"$longname":"Wave","$kind":"constructor","$docmaLink":"?api=drawables#Wave"}}],"symbols":["BitmapText","BitmapText#clearBuffer","BitmapText#createBuffer","BitmapText#drawLine","BitmapText#getCharOffset","BitmapText#getLines","BitmapText#getNextLineLength","BitmapText#renderText","BitmapText#scrollFromBottom","BitmapText#scrollFromTop","BitmapText#setFontParams","BitmapText#setImage","BitmapText#setScene","BitmapText#setText","BitmapText#update","Menu","Menu#addMenuItem","Menu#addMenuItems","Menu#setText","Paint","Paint#animate","Paint#arc","Paint#circle","Paint#fill","Paint#rect","Paint#render","SimpleText","SimpleText#clearBuffer","SimpleText#createBuffer","SimpleText#getCurrentHeight","SimpleText#getCurrentOffsetX","SimpleText#getCurrentOffsetY","SimpleText#getCurrentWidth","SimpleText#getHitBox","SimpleText#getMetrics","SimpleText#onHit","SimpleText#prepareRender","SimpleText#renderText","SimpleText#setColor","SimpleText#setScene","SimpleText#setSize","SimpleText#setText","Sprite","Sprite#addAnimation","Sprite#advanceFrame","Sprite#centerXOverTile","Sprite#clearMove","Sprite#getCurrentHeight","Sprite#getCurrentOffsetX","Sprite#getCurrentOffsetY","Sprite#getCurrentWidth","Sprite#getHitBox","Sprite#getHitBox2","Sprite#initProperties","Sprite#load","Sprite#nextFrame","Sprite#onAnimationChange","Sprite#onAnimationEnd","Sprite#onHit","Sprite#restorePreviousAnim","Sprite#rewind","Sprite#setAnimation","Sprite#setImage","Sprite#startAnimation","Sprite#stopAnimation","Sprite#storeCurrentAnim","Sprite#updateFlipAnimation","Wave","Wave#destroy","Wave#getSpriteOptions","Wave#remove"]},"behaviors":{"documentation":[{"comment":"/**\n * Base class for behaviors.\n *\n * A behavior is a class that describes how a graphical object moves during the time.\n *\n * Every behavior should implement these two methods:\n *\n * - `onUpdate()`\n * \n * - `getMapEvent()`\n *\n */","meta":{"range":[232,1747],"filename":"Behavior.js","lineno":13,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000002","name":"Behavior","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"Base class for behaviors.\n\nA behavior is a class that describes how a graphical object moves during the time.\n\nEvery behavior should implement these two methods:\n\n- `onUpdate()`\n\n- `getMapEvent()`","name":"Behavior","longname":"Behavior","kind":"class","scope":"global","description":"Base class constructor","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"An hash with behavior-specific properties.","name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The object's gravity.","name":"options.gravity"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The object's horizontal velocity.","name":"options.vx"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The object's vertical velocity.","name":"options.vy"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to call when changing vx direction.","name":"options.onVXChange"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to call when changing vy direction.","name":"options.onVYChange"}],"$longname":"Behavior","$kind":"class","$docmaLink":"?api=behaviors#Behavior","$members":[{"comment":"/**\n     * Returns current mapEvent\n     * \n     * @returns {MapEvent} the object's current map event\n     */","meta":{"range":[1676,1745],"filename":"Behavior.js","lineno":51,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000109","name":"Behavior#getMapEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns current mapEvent","returns":[{"type":{"names":["MapEvent"]},"description":"the object's current map event"}],"name":"getMapEvent","longname":"Behavior#getMapEvent","kind":"function","memberof":"Behavior","scope":"instance","params":[],"$longname":"Behavior#getMapEvent","$kind":"method","$docmaLink":"?api=behaviors#Behavior#getMapEvent"},{"comment":"/**\n     * Called at each update tick\n     * \n     * @param {Number} t The current timestamp\n     */","meta":{"range":[1509,1556],"filename":"Behavior.js","lineno":42,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000105","name":"Behavior#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Called at each update tick","params":[{"type":{"names":["Number"]},"description":"The current timestamp","name":"t"}],"name":"onUpdate","longname":"Behavior#onUpdate","kind":"function","memberof":"Behavior","scope":"instance","$longname":"Behavior#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#Behavior#onUpdate"}],"$constructor":{"comment":"/**\n     * Base class constructor\n     * \n     * @param {Drawable} sprite The sprite to attach the behavior to.\n     * @param {Object} options An hash with behavior-specific properties.\n     * @param {Number} [options.gravity=0] The object's gravity.\n     * @param {Number} [options.vx=0] The object's horizontal velocity.\n     * @param {Number} [options.vy=0] The object's vertical velocity.\n     * @param {Function} [options.onVXChange=undefined] An optional callback to call when changing vx direction.\n     * @param {Function} [options.onVYChange=undefined] An optional callback to call when changing vy direction.\n     */","meta":{"range":[884,1398],"filename":"Behavior.js","lineno":25,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000005","name":"Behavior","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"description":"Base class constructor","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"An hash with behavior-specific properties.","name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The object's gravity.","name":"options.gravity"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The object's horizontal velocity.","name":"options.vx"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The object's vertical velocity.","name":"options.vy"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to call when changing vx direction.","name":"options.onVXChange"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to call when changing vy direction.","name":"options.onVYChange"}],"name":"Behavior","longname":"Behavior","kind":"class","scope":"global","undocumented":true,"$longname":"Behavior","$kind":"constructor","$docmaLink":"?api=behaviors#Behavior"}},{"comment":"/**\n * This class keeps track of all behaviors available for the game.\n */","meta":{"range":[309,1003],"filename":"Behaviors.js","lineno":13,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000153","name":"Behaviors","type":"ClassDeclaration","paramnames":[]}},"classdesc":"This class keeps track of all behaviors available for the game.","name":"Behaviors","longname":"Behaviors","kind":"class","scope":"global","description":"Creates the Behaviors class","params":[],"$longname":"Behaviors","$kind":"class","$docmaLink":"?api=behaviors#Behaviors","$members":[{"comment":"/**\n     * Adds a new behavior which will be available for the game\n     * \n     * @param {String} behaviorName The name of the behavior.\n     * @param {Function} BehaviorClass The Behavior Class to add.\n     */","meta":{"range":[621,718],"filename":"Behaviors.js","lineno":25,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000160","name":"Behaviors#addBehavior","type":"MethodDefinition","paramnames":["behaviorName","BehaviorClass"]},"vars":{"":null}},"description":"Adds a new behavior which will be available for the game","params":[{"type":{"names":["String"]},"description":"The name of the behavior.","name":"behaviorName"},{"type":{"names":["function"]},"description":"The Behavior Class to add.","name":"BehaviorClass"}],"name":"addBehavior","longname":"Behaviors#addBehavior","kind":"function","memberof":"Behaviors","scope":"instance","$longname":"Behaviors#addBehavior","$kind":"method","$docmaLink":"?api=behaviors#Behaviors#addBehavior"},{"comment":"/**\n     * Retrieves a behavior using its name\n     * \n     * @param {String} behaviorName The name of the behavior to get.\n     * \n     * @returns {Behavior} The Behavior Class or undefined.\n     */","meta":{"range":[928,1001],"filename":"Behaviors.js","lineno":36,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000172","name":"Behaviors#getBehavior","type":"MethodDefinition","paramnames":["behaviorName"]},"vars":{"":null}},"description":"Retrieves a behavior using its name","params":[{"type":{"names":["String"]},"description":"The name of the behavior to get.","name":"behaviorName"}],"returns":[{"type":{"names":["Behavior"]},"description":"The Behavior Class or undefined."}],"name":"getBehavior","longname":"Behaviors#getBehavior","kind":"function","memberof":"Behaviors","scope":"instance","$longname":"Behaviors#getBehavior","$kind":"method","$docmaLink":"?api=behaviors#Behaviors#getBehavior"}],"$constructor":{"comment":"/**\n     * Creates the Behaviors class\n     */","meta":{"range":[382,399],"filename":"Behaviors.js","lineno":17,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000156","name":"Behaviors","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates the Behaviors class","name":"Behaviors","longname":"Behaviors","kind":"class","scope":"global","params":[],"undocumented":true,"$longname":"Behaviors","$kind":"constructor","$docmaLink":"?api=behaviors#Behaviors"}},{"comment":"/**\n * GroundMove is a simple behavior that causes an object to move along the horizontal\n * axis until a wall or an hole is reached.\n *\n *\n * @see {@link #Behavior|Behavior}\n * @extends Behavior\n */","meta":{"range":[324,2230],"filename":"GroundMove.js","lineno":14,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000240","name":"GroundMove","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"GroundMove is a simple behavior that causes an object to move along the horizontal\naxis until a wall or an hole is reached.","see":["{@link #Behavior|Behavior}"],"augments":["Behavior"],"name":"GroundMove","longname":"GroundMove","kind":"class","scope":"global","description":"Creates a new GroundMove behavior","params":[{"type":{"names":["Sprite"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"General behavior & GroundMove specific options","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"right\"","description":"The initial direction of the move, default = `right`.","name":"options.direction"}],"$longname":"GroundMove","$kind":"class","$docmaLink":"?api=behaviors#GroundMove","$members":[{"comment":"/**\n     * Returns current mapEvent\n     * \n     * @returns {MapEvent} the object's current map event\n     */","meta":{"range":[1676,1745],"filename":"Behavior.js","lineno":51,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000109","name":"Behavior#getMapEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns current mapEvent","returns":[{"type":{"names":["MapEvent"]},"description":"the object's current map event"}],"name":"getMapEvent","longname":"GroundMove#getMapEvent","kind":"function","memberof":"GroundMove","scope":"instance","params":[],"inherits":"Behavior#getMapEvent","inherited":true,"$longname":"GroundMove#getMapEvent","$kind":"method","$docmaLink":"?api=behaviors#GroundMove#getMapEvent"},{"comment":"/**\n     * Simple onMove handler that checks for a wall or hole\n     *\n     */","meta":{"range":[1093,2228],"filename":"GroundMove.js","lineno":40,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000309","name":"GroundMove#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Simple onMove handler that checks for a wall or hole","name":"onUpdate","longname":"GroundMove#onUpdate","kind":"function","memberof":"GroundMove","scope":"instance","params":[],"overrides":"Behavior#onUpdate","$longname":"GroundMove#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#GroundMove#onUpdate"}],"$constructor":{"comment":"/**\n     * Creates a new GroundMove behavior\n     *\n     * @param {Sprite} sprite The sprite to attach the behavior to.\n     * @param {Object} options General behavior & GroundMove specific options\n     * @param {String} [options.direction=\"right\"] The initial direction of the move, default = `right`.\n     */","meta":{"range":[679,1004],"filename":"GroundMove.js","lineno":22,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000244","name":"GroundMove","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"description":"Creates a new GroundMove behavior","params":[{"type":{"names":["Sprite"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"General behavior & GroundMove specific options","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"right\"","description":"The initial direction of the move, default = `right`.","name":"options.direction"}],"name":"GroundMove","longname":"GroundMove","kind":"class","scope":"global","undocumented":true,"$longname":"GroundMove","$kind":"constructor","$docmaLink":"?api=behaviors#GroundMove"}},{"comment":"/**\n * InOut behavior class: a very simple behavior used for the Gods game\n * \n * This behavior makes the object move verticaly from a minY to a maxY\n */","meta":{"range":[229,1449],"filename":"InOut.js","lineno":9,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000549","name":"InOut","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"InOut behavior class: a very simple behavior used for the Gods game\n\nThis behavior makes the object move verticaly from a minY to a maxY","name":"InOut","longname":"InOut","kind":"class","scope":"global","description":"Creates a new InOut behavior","params":[{"type":{"names":["Drawable"]},"description":"The drawable to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"The InOut's options.","name":"options"},{"type":{"names":["Number"]},"optional":true,"description":"Object's minimum Y position","name":"options.minY"},{"type":{"names":["Number"]},"optional":true,"description":"Object's maximum Y position","name":"options.maxY"}],"$longname":"InOut","$kind":"class","$docmaLink":"?api=behaviors#InOut","$members":[{"comment":"/**\n     * Called when the game wants to update the Drawable's position\n     * \n     */","meta":{"range":[891,1447],"filename":"InOut.js","lineno":33,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000600","name":"InOut#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Called when the game wants to update the Drawable's position","name":"onUpdate","longname":"InOut#onUpdate","kind":"function","memberof":"InOut","scope":"instance","params":[],"$longname":"InOut#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#InOut#onUpdate"}],"$constructor":{"comment":"/**\n     * Creates a new InOut behavior\n     * \n     * @param {Drawable} sprite The drawable to attach the behavior to.\n     * @param {Object} options The InOut's options.\n     * @param {Number} [options.minY] Object's minimum Y position\n     * @param {Number} [options.maxY] Object's maximum Y position\n     */","meta":{"range":[580,793],"filename":"InOut.js","lineno":18,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000553","name":"InOut","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"description":"Creates a new InOut behavior","params":[{"type":{"names":["Drawable"]},"description":"The drawable to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"The InOut's options.","name":"options"},{"type":{"names":["Number"]},"optional":true,"description":"Object's minimum Y position","name":"options.minY"},{"type":{"names":["Number"]},"optional":true,"description":"Object's maximum Y position","name":"options.maxY"}],"name":"InOut","longname":"InOut","kind":"class","scope":"global","undocumented":true,"$longname":"InOut","$kind":"constructor","$docmaLink":"?api=behaviors#InOut"}},{"comment":"/**\n * A Path is a special behavior that uses a pre-defined (recorded) path to move\n * an object.\n *\n * @see {@link #Behavior|Behavior}\n * @extends Behavior\n */","meta":{"range":[300,2750],"filename":"Path.js","lineno":14,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000738","name":"Path","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"A Path is a special behavior that uses a pre-defined (recorded) path to move\nan object.","see":["{@link #Behavior|Behavior}"],"augments":["Behavior"],"name":"Path","longname":"Path","kind":"class","scope":"global","description":"Creates a new Path behavior","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"The options of the behavior.","name":"options"},{"type":{"names":["Array"]},"description":"The nodes of the path: a simple array with nodes[0] = vx, nodes[1] = vy, nodes[2] = vx, nodes[3] = vy,...","name":"options.nodes"},{"type":{"names":["Boolean"]},"description":"Set to true so that when the end of the path is reached, movement goes backwards.","name":"options.reverse"}],"$longname":"Path","$kind":"class","$docmaLink":"?api=behaviors#Path","$members":[{"comment":"/**\n     * Returns current mapEvent\n     * \n     * @returns {MapEvent} the object's current map event\n     */","meta":{"range":[1676,1745],"filename":"Behavior.js","lineno":51,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000109","name":"Behavior#getMapEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns current mapEvent","returns":[{"type":{"names":["MapEvent"]},"description":"the object's current map event"}],"name":"getMapEvent","longname":"Path#getMapEvent","kind":"function","memberof":"Path","scope":"instance","params":[],"inherits":"Behavior#getMapEvent","inherited":true,"$longname":"Path#getMapEvent","$kind":"method","$docmaLink":"?api=behaviors#Path#getMapEvent"},{"comment":"/**\n     * Move handler: gets the next vx/vy from `this.nodes`\n     * and makes sure to call onVXChange/onVYChange at each sign change\n     * \n     */","meta":{"range":[1320,2748],"filename":"Path.js","lineno":48,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000823","name":"Path#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Move handler: gets the next vx/vy from `this.nodes`\nand makes sure to call onVXChange/onVYChange at each sign change","name":"onUpdate","longname":"Path#onUpdate","kind":"function","memberof":"Path","scope":"instance","params":[],"overrides":"Behavior#onUpdate","$longname":"Path#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#Path#onUpdate"}],"$constructor":{"comment":"/**\n     * Creates a new Path behavior\n     * \n     * @param {Drawable} sprite The sprite to attach the behavior to.\n     * @param {Object} options The options of the behavior.\n     * @param {Array} options.nodes The nodes of the path: a simple array with nodes[0] = vx, nodes[1] = vy, nodes[2] = vx, nodes[3] = vy,...\n     * @param {Boolean} options.reverse Set to true so that when the end of the path is reached, movement goes backwards.\n     */","meta":{"range":[787,1159],"filename":"Path.js","lineno":23,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000742","name":"Path","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"description":"Creates a new Path behavior","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"The options of the behavior.","name":"options"},{"type":{"names":["Array"]},"description":"The nodes of the path: a simple array with nodes[0] = vx, nodes[1] = vy, nodes[2] = vx, nodes[3] = vy,...","name":"options.nodes"},{"type":{"names":["Boolean"]},"description":"Set to true so that when the end of the path is reached, movement goes backwards.","name":"options.reverse"}],"name":"Path","longname":"Path","kind":"class","scope":"global","undocumented":true,"$longname":"Path","$kind":"constructor","$docmaLink":"?api=behaviors#Path"}},{"comment":"/**\n * PlayerMove is a behavior that is controlled by the player using keyboard/touch events.\n *\n * To have a sprite controlled by the user you can simply attach this behavior.\n *\n * @see {@link #Behavior|Behavior}\n * @extends Behavior\n */","meta":{"range":[400,20187],"filename":"PlayerMove.js","lineno":14,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100001071","name":"PlayerMove","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"PlayerMove is a behavior that is controlled by the player using keyboard/touch events.\n\nTo have a sprite controlled by the user you can simply attach this behavior.","see":["{@link #Behavior|Behavior}"],"augments":["Behavior"],"name":"PlayerMove","longname":"PlayerMove","kind":"class","scope":"global","description":"Creates a new PlayerMove behavior.","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"Parameters specifics to the behavior","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"idle\"","description":"The initial behavior state.","name":"options.startMovement"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"right\"","description":"The initial direction.","name":"options.direction"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"left\"","description":"The initial look direction, can be different than direction.","name":"options.lookDirection"}],"$longname":"PlayerMove","$kind":"class","$docmaLink":"?api=behaviors#PlayerMove","$members":[{"comment":"/**\n     * Returns current mapEvent\n     * \n     * @returns {MapEvent} the object's current map event\n     */","meta":{"range":[1676,1745],"filename":"Behavior.js","lineno":51,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100000109","name":"Behavior#getMapEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Returns current mapEvent","returns":[{"type":{"names":["MapEvent"]},"description":"the object's current map event"}],"name":"getMapEvent","longname":"PlayerMove#getMapEvent","kind":"function","memberof":"PlayerMove","scope":"instance","params":[],"inherits":"Behavior#getMapEvent","inherited":true,"$longname":"PlayerMove#getMapEvent","$kind":"method","$docmaLink":"?api=behaviors#PlayerMove#getMapEvent"},{"comment":"/**\n     * onUpdate handler: uses InputManager to get keyboard status and update the sprite's position/state\n     *\n     * @param {Number} t The current timestamp\n     */","meta":{"range":[1496,5053],"filename":"PlayerMove.js","lineno":49,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100001146","name":"PlayerMove#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"onUpdate handler: uses InputManager to get keyboard status and update the sprite's position/state","params":[{"type":{"names":["Number"]},"description":"The current timestamp","name":"t"}],"name":"onUpdate","longname":"PlayerMove#onUpdate","kind":"function","memberof":"PlayerMove","scope":"instance","overrides":"Behavior#onUpdate","$longname":"PlayerMove#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#PlayerMove#onUpdate"}],"$constructor":{"comment":"/**\n     * Creates a new PlayerMove behavior.\n     *\n     * @param {Drawable} sprite The sprite to attach the behavior to.\n     * @param {Object} options Parameters specifics to the behavior\n     * @param {String} [options.startMovement=\"idle\"] The initial behavior state.\n     * @param {String} [options.direction=\"right\"] The initial direction.\n     * @param {String} [options.lookDirection=\"left\"] The initial look direction, can be different than direction.\n     */","meta":{"range":[914,1315],"filename":"PlayerMove.js","lineno":24,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100001075","name":"PlayerMove","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"description":"Creates a new PlayerMove behavior.","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"Parameters specifics to the behavior","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"idle\"","description":"The initial behavior state.","name":"options.startMovement"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"right\"","description":"The initial direction.","name":"options.direction"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"left\"","description":"The initial look direction, can be different than direction.","name":"options.lookDirection"}],"name":"PlayerMove","longname":"PlayerMove","kind":"class","scope":"global","undocumented":true,"$longname":"PlayerMove","$kind":"constructor","$docmaLink":"?api=behaviors#PlayerMove"}},{"comment":"/**\n * Simple behavior that makes an object bounce on the ground\n *\n * @param {Drawable} sprite The sprite to attach the behavior to.\n * @param {Object} options The options of the behavior.\n * @param {Number} [options.elasticity=0.80] The elasticity: the closer it is to 1, the higher the bounce.\n * @param {Function} [options.onEnd=undefined] An optional callback to execute when the object stops bouncing.\n * @param {Function} [options.onGround=undefined] An optional callback to execute each time the object touches the ground.\n *\n * @example\n *\n *  sprite.setBehavior('simplefall', {\n *    gravity: 0.3,\n *    onEnd: () => {\n *        this.movable = false;\n *    },\n *    onGround: function() {\n *      AM.play('bounce');\n *    }\n * });\n */","meta":{"range":[855,2627],"filename":"SimpleFall.js","lineno":26,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100004409","name":"SimpleFall","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"Simple behavior that makes an object bounce on the ground","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"The options of the behavior.","name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":"0.80","description":"The elasticity: the closer it is to 1, the higher the bounce.","name":"options.elasticity"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to execute when the object stops bouncing.","name":"options.onEnd"},{"type":{"names":["function"]},"optional":true,"description":"An optional callback to execute each time the object touches the ground.","name":"options.onGround"}],"examples":["sprite.setBehavior('simplefall', {\n   gravity: 0.3,\n   onEnd: () => {\n       this.movable = false;\n   },\n   onGround: function() {\n     AM.play('bounce');\n   }\n});"],"name":"SimpleFall","longname":"SimpleFall","kind":"class","scope":"global","$longname":"SimpleFall","$kind":"class","$docmaLink":"?api=behaviors#SimpleFall","$members":[{"comment":"/**\n     * The move handler that gets executed at each move loop.\n     *\n     * Simply calculates the next vertical position using current velocity.\n     * Each time the object reaches the ground, it bounces a little less, using the elasticity property,\n     * until it reaches the ground and stops bouncing.\n     *\n     */","meta":{"range":[1585,2430],"filename":"SimpleFall.js","lineno":46,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100004460","name":"SimpleFall#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"The move handler that gets executed at each move loop.\n\nSimply calculates the next vertical position using current velocity.\nEach time the object reaches the ground, it bounces a little less, using the elasticity property,\nuntil it reaches the ground and stops bouncing.","name":"onUpdate","longname":"SimpleFall#onUpdate","kind":"function","memberof":"SimpleFall","scope":"instance","params":[],"$longname":"SimpleFall#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#SimpleFall#onUpdate"}],"$constructor":{"comment":"","meta":{"range":[895,1251],"filename":"SimpleFall.js","lineno":27,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100004413","name":"SimpleFall","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"undocumented":true,"name":"SimpleFall","longname":"SimpleFall","kind":"class","scope":"global","params":[],"$longname":"SimpleFall","$kind":"constructor","$docmaLink":"?api=behaviors#SimpleFall"}},{"comment":"/**\n * Simple behavior that moves horizontally until a wall is reached.\n *\n * @param {Drawable} sprite The sprite to attach the behavior to.\n * @param {Object} options The options of the behavior\n * @param {String} [options.direction=\"left\"] The initial direction of the move, default is `right`.\n *\n */","meta":{"range":[414,1509],"filename":"WeaponMove.js","lineno":13,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100004631","name":"WeaponMove","type":"ClassDeclaration","paramnames":["sprite","options"]}},"classdesc":"Simple behavior that moves horizontally until a wall is reached.","params":[{"type":{"names":["Drawable"]},"description":"The sprite to attach the behavior to.","name":"sprite"},{"type":{"names":["Object"]},"description":"The options of the behavior","name":"options"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"left\"","description":"The initial direction of the move, default is `right`.","name":"options.direction"}],"name":"WeaponMove","longname":"WeaponMove","kind":"class","scope":"global","$longname":"WeaponMove","$kind":"class","$docmaLink":"?api=behaviors#WeaponMove","$members":[{"comment":"/**\n     * The onMove event handler, simply moves updates the object's x using vx and calls VXChange\n     * when it reaches a wall\n     */","meta":{"range":[908,1507],"filename":"WeaponMove.js","lineno":32,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100004692","name":"WeaponMove#onUpdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"The onMove event handler, simply moves updates the object's x using vx and calls VXChange\nwhen it reaches a wall","name":"onUpdate","longname":"WeaponMove#onUpdate","kind":"function","memberof":"WeaponMove","scope":"instance","params":[],"$longname":"WeaponMove#onUpdate","$kind":"method","$docmaLink":"?api=behaviors#WeaponMove#onUpdate"}],"$constructor":{"comment":"","meta":{"range":[454,759],"filename":"WeaponMove.js","lineno":14,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Drawable/Behavior","code":{"id":"astnode100004635","name":"WeaponMove","type":"MethodDefinition","paramnames":["sprite","options"]},"vars":{"":null}},"undocumented":true,"name":"WeaponMove","longname":"WeaponMove","kind":"class","scope":"global","params":[],"$longname":"WeaponMove","$kind":"constructor","$docmaLink":"?api=behaviors#WeaponMove"}}],"symbols":["Behavior","Behavior#getMapEvent","Behavior#onUpdate","Behaviors","Behaviors#addBehavior","Behaviors#getBehavior","GroundMove","GroundMove#getMapEvent","GroundMove#onUpdate","InOut","InOut#onUpdate","Path","Path#getMapEvent","Path#onUpdate","PlayerMove","PlayerMove#getMapEvent","PlayerMove#onUpdate","SimpleFall","SimpleFall#onUpdate","WeaponMove","WeaponMove#onUpdate"]},"fx":{"documentation":[{"comment":"/**\n * Custom effect that can be used to do any transformation.\n * \n * Supported on: {@link ?api=drawable#Drawable|`Drawable`}, {@link ?api=scene#Scene|`Scene`}\n * \n * @extends Effect\n */","meta":{"range":[220,1450],"filename":"Custom.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000163","name":"Custom","type":"ClassDeclaration","paramnames":["options","display"]}},"classdesc":"Custom effect that can be used to do any transformation.\n\nSupported on: {@link ?api=drawable#Drawable|`Drawable`}, {@link ?api=scene#Scene|`Scene`}","augments":["Effect"],"name":"Custom","longname":"Custom","kind":"class","scope":"global","description":"Creates a new Custom effect","params":[{"type":{"names":["Object"]},"description":"Effect options.","name":"options"},{"type":{"names":["function"]},"description":"The callback that will get called at each update tick: this is were the transformation will happen.","name":"options.callback"},{"type":{"names":["Number"]},"description":"the start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"the end value of the effect.","name":"options.endValue"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"$longname":"Custom","$kind":"class","$docmaLink":"?api=fx#Custom","$members":[{"comment":"/**\n     * Process the custom effect: this method simply calls the user's callback\n     * \n     * @param {RenderingContext} ctx The `source`rendering context.\n     * @param {RenderingContext} fxCtx The `destination` context.\n     * \n     * @returns {Boolean} true when the animation has ended.\n     */","meta":{"range":[1274,1448],"filename":"Custom.js","lineno":36,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000198","name":"Custom#process","type":"MethodDefinition","paramnames":["ctx","fxCtx"]},"vars":{"":null}},"description":"Process the custom effect: this method simply calls the user's callback","params":[{"type":{"names":["RenderingContext"]},"description":"The `source`rendering context.","name":"ctx"},{"type":{"names":["RenderingContext"]},"description":"The `destination` context.","name":"fxCtx"}],"returns":[{"type":{"names":["Boolean"]},"description":"true when the animation has ended."}],"name":"process","longname":"Custom#process","kind":"function","memberof":"Custom","scope":"instance","overrides":"Effect#process","$longname":"Custom#process","$kind":"method","$docmaLink":"?api=fx#Custom#process"},{"comment":"/**\n     * Changes the easing function used for the ffect\n     *\n     * @param {Function} easing The new easing function.\n     */","meta":{"range":[1652,1707],"filename":"Effect.js","lineno":45,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000350","name":"Effect#setEasing","type":"MethodDefinition","paramnames":["easing"]},"vars":{"":null}},"description":"Changes the easing function used for the ffect","params":[{"type":{"names":["function"]},"description":"The new easing function.","name":"easing"}],"name":"setEasing","longname":"Custom#setEasing","kind":"function","memberof":"Custom","scope":"instance","inherits":"Effect#setEasing","inherited":true,"$longname":"Custom#setEasing","$kind":"method","$docmaLink":"?api=fx#Custom#setEasing"},{"comment":"/**\n     * Called when the ffect is started.\n     *\n     * This method can be overriden but the super should always be called\n     */","meta":{"range":[1851,2147],"filename":"Effect.js","lineno":54,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000361","name":"Effect#start","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Called when the ffect is started.\n\nThis method can be overriden but the super should always be called","name":"start","longname":"Custom#start","kind":"function","memberof":"Custom","scope":"instance","params":[],"inherits":"Effect#start","inherited":true,"$longname":"Custom#start","$kind":"method","$docmaLink":"?api=fx#Custom#start"},{"comment":"/**\n     * called when the effect is stopped\n     */","meta":{"range":[2210,2272],"filename":"Effect.js","lineno":71,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000406","name":"Effect#stop","type":"MethodDefinition","paramnames":["object","setEndValue"]},"vars":{"":null}},"description":"called when the effect is stopped","name":"stop","longname":"Custom#stop","kind":"function","memberof":"Custom","scope":"instance","params":[],"inherits":"Effect#stop","inherited":true,"$longname":"Custom#stop","$kind":"method","$docmaLink":"?api=fx#Custom#stop"}],"$constructor":{"comment":"/**\n     * Creates a new Custom effect\n     * @param {Object} options Effect options.\n     * @param {Function} options.callback The callback that will get called at each update tick: this is were the transformation will happen.\n     * @param {Number} options.startValue the start value of the effect.\n     * @param {Number} options.endValue the end value of the effect.\n     * @param {Boolean} options.loop Set to true to make the effect loop.\n     * @param {Display} display Reference to the Display in case a buffer is needed.\n     */","meta":{"range":[795,962],"filename":"Custom.js","lineno":20,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000167","name":"Custom","type":"MethodDefinition","paramnames":["options","display"]},"vars":{"":null}},"description":"Creates a new Custom effect","params":[{"type":{"names":["Object"]},"description":"Effect options.","name":"options"},{"type":{"names":["function"]},"description":"The callback that will get called at each update tick: this is were the transformation will happen.","name":"options.callback"},{"type":{"names":["Number"]},"description":"the start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"the end value of the effect.","name":"options.endValue"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"name":"Custom","longname":"Custom","kind":"class","scope":"global","undocumented":true,"$longname":"Custom","$kind":"constructor","$docmaLink":"?api=fx#Custom"}},{"comment":"/**\n * This object contains some built-in easing functions that are used\n * when applying effects and scrollings in AthenaJS.\n */","meta":{"range":[161,819],"filename":"Easing.js","lineno":7,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Easing","code":{"id":"astnode100000007","name":"Easing","type":"ObjectExpression","value":"{\"undefined\":\"\"}"}},"description":"This object contains some built-in easing functions that are used\nwhen applying effects and scrollings in AthenaJS.","name":"Easing","longname":"Easing","kind":"constant","scope":"global","params":[],"$longname":"Easing","$kind":"constant","$docmaLink":"?api=fx#Easing"},{"comment":"/**\n * The Effect class allows to apply transformations to Scene & Drawable instances.\n *\n * An effect can modifiy a properties and/or alter the rendering of a scene.\n *\n * Effects can use a custom easing function to allow elastic like animations.\n */","meta":{"range":[297,3538],"filename":"Effect.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000239","name":"Effect","type":"ClassDeclaration","paramnames":["options","display"]}},"classdesc":"The Effect class allows to apply transformations to Scene & Drawable instances.\n\nAn effect can modifiy a properties and/or alter the rendering of a scene.\n\nEffects can use a custom easing function to allow elastic like animations.","name":"Effect","longname":"Effect","kind":"class","scope":"global","description":"This the class constructor. Default options are:","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"The end value of the effect.","name":"options.endValue"},{"type":{"names":["Number"]},"description":"The duration of the effect (ms).*","name":"options.duration"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"$longname":"Effect","$kind":"class","$docmaLink":"?api=fx#Effect","$members":[{"comment":"/**\n     * Calculates current animation process\n     *\n     * This method can be overridden but the super should always be calle dfirst\n     */","meta":{"range":[2426,3536],"filename":"Effect.js","lineno":80,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000418","name":"Effect#process","type":"MethodDefinition","paramnames":["ctx","fxCtx","obj"]},"vars":{"":null}},"description":"Calculates current animation process\n\nThis method can be overridden but the super should always be calle dfirst","name":"process","longname":"Effect#process","kind":"function","memberof":"Effect","scope":"instance","params":[],"$longname":"Effect#process","$kind":"method","$docmaLink":"?api=fx#Effect#process"},{"comment":"/**\n     * Changes the easing function used for the ffect\n     *\n     * @param {Function} easing The new easing function.\n     */","meta":{"range":[1652,1707],"filename":"Effect.js","lineno":45,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000350","name":"Effect#setEasing","type":"MethodDefinition","paramnames":["easing"]},"vars":{"":null}},"description":"Changes the easing function used for the ffect","params":[{"type":{"names":["function"]},"description":"The new easing function.","name":"easing"}],"name":"setEasing","longname":"Effect#setEasing","kind":"function","memberof":"Effect","scope":"instance","$longname":"Effect#setEasing","$kind":"method","$docmaLink":"?api=fx#Effect#setEasing"},{"comment":"/**\n     * Called when the ffect is started.\n     *\n     * This method can be overriden but the super should always be called\n     */","meta":{"range":[1851,2147],"filename":"Effect.js","lineno":54,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000361","name":"Effect#start","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Called when the ffect is started.\n\nThis method can be overriden but the super should always be called","name":"start","longname":"Effect#start","kind":"function","memberof":"Effect","scope":"instance","params":[],"$longname":"Effect#start","$kind":"method","$docmaLink":"?api=fx#Effect#start"},{"comment":"/**\n     * called when the effect is stopped\n     */","meta":{"range":[2210,2272],"filename":"Effect.js","lineno":71,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000406","name":"Effect#stop","type":"MethodDefinition","paramnames":["object","setEndValue"]},"vars":{"":null}},"description":"called when the effect is stopped","name":"stop","longname":"Effect#stop","kind":"function","memberof":"Effect","scope":"instance","params":[],"$longname":"Effect#stop","$kind":"method","$docmaLink":"?api=fx#Effect#stop"}],"$constructor":{"comment":"/**\n     * This the class constructor. Default options are:\n     *\n     * @param {Object} options\n     * @param {Number} options.startValue The start value of the effect.\n     * @param {Number} options.endValue The end value of the effect.\n     * @param {Number} options.duration The duration of the effect (ms).*\n     * @param {Boolean} options.loop Set to true to make the effect loop.\n     * @param {Display} display Reference to the Display in case a buffer is needed.\n     */","meta":{"range":[801,1512],"filename":"Effect.js","lineno":21,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000242","name":"Effect","type":"MethodDefinition","paramnames":["options","display"]},"vars":{"":null}},"description":"This the class constructor. Default options are:","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"The end value of the effect.","name":"options.endValue"},{"type":{"names":["Number"]},"description":"The duration of the effect (ms).*","name":"options.duration"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"name":"Effect","longname":"Effect","kind":"class","scope":"global","undocumented":true,"$longname":"Effect","$kind":"constructor","$docmaLink":"?api=fx#Effect"}},{"comment":"/**\n * Fading effect\n * \n * Supported on: `Drawable`, `Scene`\n * \n * @extends Effect\n */","meta":{"range":[121,1524],"filename":"Fade.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000531","name":"Fade","type":"ClassDeclaration","paramnames":["options","display"]}},"classdesc":"Fading effect\n\nSupported on: `Drawable`, `Scene`","augments":["Effect"],"name":"Fade","longname":"Fade","kind":"class","scope":"global","description":"Creates a Fade Effect","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"the start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"the end value of the effect.","name":"options.endValue"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"$longname":"Fade","$kind":"class","$docmaLink":"?api=fx#Fade","$members":[{"comment":"/**\n     * \n     * @param {enderingContext} ctx The `source`rendering context.\n     * @param {RenderingContext} fxCtx The `destination` context.\n     * @param {Drawable} obj The Drawable on which to execute the ffect.\n     */","meta":{"range":[1311,1522],"filename":"Fade.js","lineno":48,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000612","name":"Fade#process","type":"MethodDefinition","paramnames":["ctx","fxCtx","obj"]},"vars":{"":null}},"params":[{"type":{"names":["enderingContext"]},"description":"The `source`rendering context.","name":"ctx"},{"type":{"names":["RenderingContext"]},"description":"The `destination` context.","name":"fxCtx"},{"type":{"names":["Drawable"]},"description":"The Drawable on which to execute the ffect.","name":"obj"}],"name":"process","longname":"Fade#process","kind":"function","memberof":"Fade","scope":"instance","overrides":"Effect#process","$longname":"Fade#process","$kind":"method","$docmaLink":"?api=fx#Fade#process"},{"comment":"/**\n     * Changes the easing function used for the ffect\n     *\n     * @param {Function} easing The new easing function.\n     */","meta":{"range":[1652,1707],"filename":"Effect.js","lineno":45,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000350","name":"Effect#setEasing","type":"MethodDefinition","paramnames":["easing"]},"vars":{"":null}},"description":"Changes the easing function used for the ffect","params":[{"type":{"names":["function"]},"description":"The new easing function.","name":"easing"}],"name":"setEasing","longname":"Fade#setEasing","kind":"function","memberof":"Fade","scope":"instance","inherits":"Effect#setEasing","inherited":true,"$longname":"Fade#setEasing","$kind":"method","$docmaLink":"?api=fx#Fade#setEasing"},{"comment":"/**\n     * Initializes the effect\n     */","meta":{"range":[956,1075],"filename":"Fade.js","lineno":35,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000597","name":"Fade#start","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Initializes the effect","name":"start","longname":"Fade#start","kind":"function","memberof":"Fade","scope":"instance","params":[],"overrides":"Effect#start","$longname":"Fade#start","$kind":"method","$docmaLink":"?api=fx#Fade#start"},{"comment":"/**\n     * called when the effect is stopped\n     */","meta":{"range":[2210,2272],"filename":"Effect.js","lineno":71,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000406","name":"Effect#stop","type":"MethodDefinition","paramnames":["object","setEndValue"]},"vars":{"":null}},"description":"called when the effect is stopped","name":"stop","longname":"Fade#stop","kind":"function","memberof":"Fade","scope":"instance","params":[],"inherits":"Effect#stop","inherited":true,"$longname":"Fade#stop","$kind":"method","$docmaLink":"?api=fx#Fade#stop"}],"$constructor":{"comment":"/**\n     * Creates a Fade Effect\n     * \n     * @param {Object} options\n     * @param {Number} options.startValue the start value of the effect.\n     * @param {Number} options.endValue the end value of the effect.\n     * @param {Boolean} options.loop Set to true to make the effect loop.\n     * @param {Display} display Reference to the Display in case a buffer is needed.\n     */","meta":{"range":[538,904],"filename":"Fade.js","lineno":20,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000535","name":"Fade","type":"MethodDefinition","paramnames":["options","display"]},"vars":{"":null}},"description":"Creates a Fade Effect","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"the start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"the end value of the effect.","name":"options.endValue"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"name":"Fade","longname":"Fade","kind":"class","scope":"global","undocumented":true,"$longname":"Fade","$kind":"constructor","$docmaLink":"?api=fx#Fade"}},{"comment":"/**\n * The FX class is the entry point for accessing Drawing effects like Mosaic\n * and easing functions.\n * \n * Effects can be applied to Drawable and/or Scene instances.\n * \n * @see {@link #Effect|Effect}\n */","meta":{"range":[430,1905],"filename":"FX.js","lineno":18,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX","code":{"id":"astnode100001035","name":"FX","type":"ClassDeclaration","paramnames":[]}},"classdesc":"The FX class is the entry point for accessing Drawing effects like Mosaic\nand easing functions.\n\nEffects can be applied to Drawable and/or Scene instances.","see":["{@link #Effect|Effect}"],"name":"FX","longname":"FX","kind":"class","scope":"global","description":"Creates the FX class, adding the linear easing","params":[],"$longname":"FX","$kind":"class","$docmaLink":"?api=fx#FX","$members":[{"comment":"/**\n     * Add a new easing function for other objects to use\n     * \n     * @param {String} easingName The name of the easing.\n     * @param {Function} easingFn The function to be used for easing. This function may use these parameters: `x , t, b, c, d`\n    */","meta":{"range":[1439,1517],"filename":"FX.js","lineno":52,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX","code":{"id":"astnode100001072","name":"FX#addEasing","type":"MethodDefinition","paramnames":["easingName","easingFn"]},"vars":{"":null}},"description":"Add a new easing function for other objects to use","params":[{"type":{"names":["String"]},"description":"The name of the easing.","name":"easingName"},{"type":{"names":["function"]},"description":"The function to be used for easing. This function may use these parameters: `x , t, b, c, d`","name":"easingFn"}],"name":"addEasing","longname":"FX#addEasing","kind":"function","memberof":"FX","scope":"instance","$longname":"FX#addEasing","$kind":"method","$docmaLink":"?api=fx#FX#addEasing"},{"comment":"/**\n     * Add a new Effect\n     * @param {String} fxName The name of the effect to add.\n     * @param {Effect} FxClass The Effect Class to add.\n     */","meta":{"range":[851,916],"filename":"FX.js","lineno":32,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX","code":{"id":"astnode100001051","name":"FX#addFX","type":"MethodDefinition","paramnames":["fxName","FxClass"]},"vars":{"":null}},"description":"Add a new Effect","params":[{"type":{"names":["String"]},"description":"The name of the effect to add.","name":"fxName"},{"type":{"names":["Effect"]},"description":"The Effect Class to add.","name":"FxClass"}],"name":"addFX","longname":"FX#addFX","kind":"function","memberof":"FX","scope":"instance","$longname":"FX#addFX","$kind":"method","$docmaLink":"?api=fx#FX#addFX"},{"comment":"/**\n     * Retrieves an easing function\n     * \n     * @param {String} easingName The name of the easing function to retrive.\n     * @returns {Function} The easing function, or linear function if it didn't exist.\n     */","meta":{"range":[1748,1903],"filename":"FX.js","lineno":62,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX","code":{"id":"astnode100001084","name":"FX#getEasing","type":"MethodDefinition","paramnames":["easingName"]},"vars":{"":null}},"description":"Retrieves an easing function","params":[{"type":{"names":["String"]},"description":"The name of the easing function to retrive.","name":"easingName"}],"returns":[{"type":{"names":["function"]},"description":"The easing function, or linear function if it didn't exist."}],"name":"getEasing","longname":"FX#getEasing","kind":"function","memberof":"FX","scope":"instance","$longname":"FX#getEasing","$kind":"method","$docmaLink":"?api=fx#FX#getEasing"},{"comment":"/**\n     * Retrieve an effect Class by its name\n     * \n     * @param {String} fxName The name of the Effect to retrive.\n     * @returns {Effect} the effect Class or undefined\n     */","meta":{"range":[1110,1167],"filename":"FX.js","lineno":42,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX","code":{"id":"astnode100001063","name":"FX#getEffect","type":"MethodDefinition","paramnames":["fxName"]},"vars":{"":null}},"description":"Retrieve an effect Class by its name","params":[{"type":{"names":["String"]},"description":"The name of the Effect to retrive.","name":"fxName"}],"returns":[{"type":{"names":["Effect"]},"description":"the effect Class or undefined"}],"name":"getEffect","longname":"FX#getEffect","kind":"function","memberof":"FX","scope":"instance","$longname":"FX#getEffect","$kind":"method","$docmaLink":"?api=fx#FX#getEffect"}],"$constructor":{"comment":"/**\n     * Creates the FX class, adding the linear easing\n     */","meta":{"range":[515,688],"filename":"FX.js","lineno":22,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX","code":{"id":"astnode100001038","name":"FX","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates the FX class, adding the linear easing","name":"FX","longname":"FX","kind":"class","scope":"global","params":[],"undocumented":true,"$longname":"FX","$kind":"constructor","$docmaLink":"?api=fx#FX"}},{"comment":"/**\n * Test :)\n */","meta":{"range":[2253,2275],"filename":"Mosaic.js","lineno":74,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000854","name":"module.exports","type":"Identifier"}},"description":"Test :)","name":"exports","longname":"module.exports","kind":"member","memberof":"module","scope":"static","$longname":"module.exports","$kind":"property","$docmaLink":"?api=fx#module.exports"},{"comment":"/**\n * A Mosaic effect that will apply an {@link https://github.com/warpdesign/jquery-mosaic|SNES-like effects}.\n *\n * Supported on: `Drawable`, `Scene`\n *\n * @extends Effect\n */","meta":{"range":[211,2231],"filename":"Mosaic.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000660","name":"Mosaic","type":"ClassDeclaration","paramnames":["options","display"]}},"classdesc":"A Mosaic effect that will apply an {@link https://github.com/warpdesign/jquery-mosaic|SNES-like effects}.\n\nSupported on: `Drawable`, `Scene`","augments":["Effect"],"name":"Mosaic","longname":"Mosaic","kind":"class","scope":"global","description":"Creates a new Mosaic effect","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"The end value of the effect.","name":"options.endValue"},{"type":{"names":["Number"]},"description":"The duration of the effect (ms).","name":"options.duration"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"$longname":"Mosaic","$kind":"class","$docmaLink":"?api=fx#Mosaic","$members":[{"comment":"/**\n     * simulates the mosaic effect by using Canvas'drawImage API\n     *\n     * @param {CanvasRenderingConbtext} ctx The source drawing context, which happens to be the destination context as well.\n     */","meta":{"range":[1711,2229],"filename":"Mosaic.js","lineno":54,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000758","name":"Mosaic#process","type":"MethodDefinition","paramnames":["ctx"]},"vars":{"":null}},"description":"simulates the mosaic effect by using Canvas'drawImage API","params":[{"type":{"names":["CanvasRenderingConbtext"]},"description":"The source drawing context, which happens to be the destination context as well.","name":"ctx"}],"name":"process","longname":"Mosaic#process","kind":"function","memberof":"Mosaic","scope":"instance","overrides":"Effect#process","$longname":"Mosaic#process","$kind":"method","$docmaLink":"?api=fx#Mosaic#process"},{"comment":"/**\n     * Changes the easing function used for the ffect\n     *\n     * @param {Function} easing The new easing function.\n     */","meta":{"range":[1652,1707],"filename":"Effect.js","lineno":45,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000350","name":"Effect#setEasing","type":"MethodDefinition","paramnames":["easing"]},"vars":{"":null}},"description":"Changes the easing function used for the ffect","params":[{"type":{"names":["function"]},"description":"The new easing function.","name":"easing"}],"name":"setEasing","longname":"Mosaic#setEasing","kind":"function","memberof":"Mosaic","scope":"instance","inherits":"Effect#setEasing","inherited":true,"$longname":"Mosaic#setEasing","$kind":"method","$docmaLink":"?api=fx#Mosaic#setEasing"},{"comment":"/**\n     * Initializes mosaic effect variables\n     */","meta":{"range":[1389,1491],"filename":"Mosaic.js","lineno":42,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000737","name":"Mosaic#start","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Initializes mosaic effect variables","name":"start","longname":"Mosaic#start","kind":"function","memberof":"Mosaic","scope":"instance","params":[],"overrides":"Effect#start","$longname":"Mosaic#start","$kind":"method","$docmaLink":"?api=fx#Mosaic#start"},{"comment":"/**\n     * called when the effect is stopped\n     */","meta":{"range":[2210,2272],"filename":"Effect.js","lineno":71,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000406","name":"Effect#stop","type":"MethodDefinition","paramnames":["object","setEndValue"]},"vars":{"":null}},"description":"called when the effect is stopped","name":"stop","longname":"Mosaic#stop","kind":"function","memberof":"Mosaic","scope":"instance","params":[],"inherits":"Effect#stop","inherited":true,"$longname":"Mosaic#stop","$kind":"method","$docmaLink":"?api=fx#Mosaic#stop"}],"$constructor":{"comment":"/**\n     * Creates a new Mosaic effect\n     *\n     * @param {Object} options\n     * @param {Number} options.startValue The start value of the effect.\n     * @param {Number} options.endValue The end value of the effect.\n     * @param {Number} options.duration The duration of the effect (ms).\n     * @param {Boolean} options.loop Set to true to make the effect loop.\n     * @param {Display} display Reference to the Display in case a buffer is needed.\n     */","meta":{"range":[708,1324],"filename":"Mosaic.js","lineno":21,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000664","name":"Mosaic","type":"MethodDefinition","paramnames":["options","display"]},"vars":{"":null}},"description":"Creates a new Mosaic effect","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"description":"The start value of the effect.","name":"options.startValue"},{"type":{"names":["Number"]},"description":"The end value of the effect.","name":"options.endValue"},{"type":{"names":["Number"]},"description":"The duration of the effect (ms).","name":"options.duration"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"name":"Mosaic","longname":"Mosaic","kind":"class","scope":"global","undocumented":true,"$longname":"Mosaic","$kind":"constructor","$docmaLink":"?api=fx#Mosaic"}},{"comment":"/**\n * Rotating effect\n * \n * Supported on: `Drawables`\n * \n * @extends Effect\n */","meta":{"range":[115,2064],"filename":"Rotate.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000862","name":"Rotate","type":"ClassDeclaration","paramnames":["options","display"]}},"classdesc":"Rotating effect\n\nSupported on: `Drawables`","augments":["Effect"],"name":"Rotate","longname":"Rotate","kind":"class","scope":"global","description":"Creates the Rotate class","params":[{"type":{"names":["Object"]},"description":"* @param {Number} options.startValue the start value of the effect.","name":"options"},{"type":{"names":["Number"]},"description":"the end value of the effect.","name":"options.endValue"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"$longname":"Rotate","$kind":"class","$docmaLink":"?api=fx#Rotate","$members":[{"comment":"/**\n     * Calculates the new angle\n     * \n     * @param {RenderingContext} ctx The rendering context (not used in this effect).\n     * @param {RenderingContext} fxCtx Tje effect rendering context (not used).\n     * @param {Drawable} obj Drawable on which to apply the rotation.\n     * \n     * @returns {Boolean} returns true if the animation has ended.\n     */","meta":{"range":[1857,2062],"filename":"Rotate.js","lineno":64,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000968","name":"Rotate#process","type":"MethodDefinition","paramnames":["ctx","fxCtx","obj"]},"vars":{"":null}},"description":"Calculates the new angle","params":[{"type":{"names":["RenderingContext"]},"description":"The rendering context (not used in this effect).","name":"ctx"},{"type":{"names":["RenderingContext"]},"description":"Tje effect rendering context (not used).","name":"fxCtx"},{"type":{"names":["Drawable"]},"description":"Drawable on which to apply the rotation.","name":"obj"}],"returns":[{"type":{"names":["Boolean"]},"description":"returns true if the animation has ended."}],"name":"process","longname":"Rotate#process","kind":"function","memberof":"Rotate","scope":"instance","overrides":"Effect#process","$longname":"Rotate#process","$kind":"method","$docmaLink":"?api=fx#Rotate#process"},{"comment":"/**\n     * Changes the easing function used for the ffect\n     *\n     * @param {Function} easing The new easing function.\n     */","meta":{"range":[1652,1707],"filename":"Effect.js","lineno":45,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000350","name":"Effect#setEasing","type":"MethodDefinition","paramnames":["easing"]},"vars":{"":null}},"description":"Changes the easing function used for the ffect","params":[{"type":{"names":["function"]},"description":"The new easing function.","name":"easing"}],"name":"setEasing","longname":"Rotate#setEasing","kind":"function","memberof":"Rotate","scope":"instance","inherits":"Effect#setEasing","inherited":true,"$longname":"Rotate#setEasing","$kind":"method","$docmaLink":"?api=fx#Rotate#setEasing"},{"comment":"/**\n     * Initializes the rotate effect\n     */","meta":{"range":[992,1123],"filename":"Rotate.js","lineno":36,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000934","name":"Rotate#start","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Initializes the rotate effect","name":"start","longname":"Rotate#start","kind":"function","memberof":"Rotate","scope":"instance","params":[],"overrides":"Effect#start","$longname":"Rotate#start","$kind":"method","$docmaLink":"?api=fx#Rotate#start"},{"comment":"/**\n     * Stops the effect from running, setting the angle to specified endValue\n     * \n     * @param {Drawable} object The object on which changing the angle.\n     * @param {Number} endValue The angle value that will be set when the effect is stopped.\n     */","meta":{"range":[1396,1484],"filename":"Rotate.js","lineno":49,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000951","name":"Rotate#stop","type":"MethodDefinition","paramnames":["object","endValue"]},"vars":{"":null}},"description":"Stops the effect from running, setting the angle to specified endValue","params":[{"type":{"names":["Drawable"]},"description":"The object on which changing the angle.","name":"object"},{"type":{"names":["Number"]},"description":"The angle value that will be set when the effect is stopped.","name":"endValue"}],"name":"stop","longname":"Rotate#stop","kind":"function","memberof":"Rotate","scope":"instance","overrides":"Effect#stop","$longname":"Rotate#stop","$kind":"method","$docmaLink":"?api=fx#Rotate#stop"}],"$constructor":{"comment":"/**\n     * Creates the Rotate class\n     * \n     * @param {Object} options\n    ** @param {Number} options.startValue the start value of the effect.\n     * @param {Number} options.endValue the end value of the effect.\n     * @param {Boolean} options.loop Set to true to make the effect loop.\n     * @param {Display} display Reference to the Display in case a buffer is needed.\n     */","meta":{"range":[537,933],"filename":"Rotate.js","lineno":20,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/FX/Effect","code":{"id":"astnode100000866","name":"Rotate","type":"MethodDefinition","paramnames":["options","display"]},"vars":{"":null}},"description":"Creates the Rotate class","params":[{"type":{"names":["Object"]},"description":"* @param {Number} options.startValue the start value of the effect.","name":"options"},{"type":{"names":["Number"]},"description":"the end value of the effect.","name":"options.endValue"},{"type":{"names":["Boolean"]},"description":"Set to true to make the effect loop.","name":"options.loop"},{"type":{"names":["Display"]},"description":"Reference to the Display in case a buffer is needed.","name":"display"}],"name":"Rotate","longname":"Rotate","kind":"class","scope":"global","undocumented":true,"$longname":"Rotate","$kind":"constructor","$docmaLink":"?api=fx#Rotate"}}],"symbols":["Custom","Custom#process","Custom#setEasing","Custom#start","Custom#stop","Easing","Effect","Effect#process","Effect#setEasing","Effect#start","Effect#stop","Fade","Fade#process","Fade#setEasing","Fade#start","Fade#stop","FX","FX#addEasing","FX#addFX","FX#getEasing","FX#getEffect","module.exports","Mosaic","Mosaic#process","Mosaic#setEasing","Mosaic#start","Mosaic#stop","Rotate","Rotate#process","Rotate#setEasing","Rotate#start","Rotate#stop"]},"map":{"documentation":[{"comment":"/**\n * The `Map` is used to display tile-based backgrounds. It is usually initialized using a buffer containing\n * tiles and tilebehaviors.\n * \n * It has a viewport so that only a part of the map can be displayed.\n * \n * A map also contains objects that are added onto the map once the viewport reaches a `block`.\n *\n */","meta":{"range":[531,59633],"filename":"Map.js","lineno":19,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000028","name":"Map","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The `Map` is used to display tile-based backgrounds. It is usually initialized using a buffer containing\ntiles and tilebehaviors.\n\nIt has a viewport so that only a part of the map can be displayed.\n\nA map also contains objects that are added onto the map once the viewport reaches a `block`.","name":"Map","longname":"Map","kind":"class","scope":"global","description":"Creates a new Map","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"description":"The url to an image that will be used for the tiles","name":"options.src"},{"type":{"names":["Number"]},"description":"The width of a tile","name":"options.tileWidth"},{"type":{"names":["Number"]},"description":"The height of a tile","name":"options.tileHeight"},{"type":{"names":["Number"]},"description":"The full width of the map","name":"options.width"},{"type":{"names":["Number"]},"description":"The full height of the map","name":"options.height"},{"type":{"names":["Number"]},"description":"The width of the viewport: it is usually the same as the game width. Default = map.width","name":"options.viewportW"},{"type":{"names":["Number"]},"description":"The height of the viewport: it is usually the same as the game height. Default = map.height","name":"options.viewportH"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Initial x viewport (horizontal scrolling position) of the map.","name":"options.viewportX"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Initial y viewport (vertical scrolling position) of the map.","name":"options.viewportY"},{"type":{"names":["Array"]},"optional":true,"description":"An optionnal array with the tiles to use for the map.","name":"options.tiles"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'map'","description":"An optional name for the map.","name":"options.name"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'linear'","description":"The linear function to use when scrolling the map. Defaults to linear.","name":"options.easing"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The start x position of the master object.","name":"options.startX"},{"type":{"names":["Sumber"]},"optional":true,"defaultvalue":0,"description":"The start y position of the master object.","name":"options.startY"},{"type":{"names":["ArrayBuffer"]},"description":"The buffer containing width \\* height bytes container tile numbers followed by width*height bytes for the tile behaviors","name":"options.buffer"}],"$longname":"Map","$kind":"class","$docmaLink":"?api=map#Map","$members":[{"comment":"/**\n     * Add a new graphical object on to the map, it will be:\n     *  - displayed if it is visible (in the viewport)\n     *  - added to collision group\n     *\n     * <blockquote><strong>Note:</strong> the object will be added to the correct collision group\n     * if `obj.collideGroup` is set.</blockquote>\n     * \n     * @param {Drawable} obj A reference to the new object to add.\n     * @param {Number} [layerIndex=0] The layer to add the object into.\n     *\n     *\n     */","meta":{"range":[11514,12653],"filename":"Map.js","lineno":350,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000995","name":"Map#addObject","type":"MethodDefinition","paramnames":["obj","layerIndex"]},"vars":{"":null}},"description":"Add a new graphical object on to the map, it will be:\n - displayed if it is visible (in the viewport)\n - added to collision group\n\n<blockquote><strong>Note:</strong> the object will be added to the correct collision group\nif `obj.collideGroup` is set.</blockquote>","params":[{"type":{"names":["Drawable"]},"description":"A reference to the new object to add.","name":"obj"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The layer to add the object into.","name":"layerIndex"}],"name":"addObject","longname":"Map#addObject","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#addObject","$kind":"method","$docmaLink":"?api=map#Map#addObject"},{"comment":"/**\n     * adds a new tileset for the map\n     *\n     * @param {Array} [tiles=[]] The tile descriptions.\n     *\n     */","meta":{"range":[52307,52554],"filename":"Map.js","lineno":1576,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004643","name":"Map#addTileSet","type":"MethodDefinition","paramnames":["tiles"]},"vars":{"":null}},"description":"adds a new tileset for the map","params":[{"type":{"names":["Array"]},"optional":true,"defaultvalue":"[]","description":"The tile descriptions.","name":"tiles"}],"name":"addTileSet","longname":"Map#addTileSet","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#addTileSet","$kind":"method","$docmaLink":"?api=map#Map#addTileSet"},{"comment":"/**\n\t *\n\t * Check for collisions\n\t *\n\t */","meta":{"range":[18685,18891],"filename":"Map.js","lineno":566,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001593","name":"Map#checkCollisions","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Check for collisions","name":"checkCollisions","longname":"Map#checkCollisions","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#checkCollisions","$kind":"method","$docmaLink":"?api=map#Map#checkCollisions"},{"comment":"/**\n     * Checks if an object is in front of a certain type of tileType,\n     * optionnaly centering the object under the tile\n     *\n     * Used when checking if the player can climb a ladder for example\n     *\n     * spaceX/spaceY specify how to reduce the players hitbox\n     *\n     * @param {Drawable} sprite The sprite to check.\n     * @param {Number} tileType The tileType to check for.\n     * @param {Number} [spaceX=0] The x padding that is accepted: if horizontal position is +/- that spaceX, check will succeed.\n     * @param {Number} [spaceY=0] The y padding that is accepted: if vertical position is +/- that spaceX, check will succeed.\n     * @param {Boolean} [center=false] Set to true if you want to sprite to be centered on the tile.\n     *\n     * @returns {Boolean} True if the tile was found, false otherwise\n     *\n     */","meta":{"range":[32995,33555],"filename":"Map.js","lineno":985,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100002771","name":"Map#checkForTileType","type":"MethodDefinition","paramnames":["sprite","tileType","spaceX","spaceY","center"]},"vars":{"":null}},"description":"Checks if an object is in front of a certain type of tileType,\noptionnaly centering the object under the tile\n\nUsed when checking if the player can climb a ladder for example\n\nspaceX/spaceY specify how to reduce the players hitbox","params":[{"type":{"names":["Drawable"]},"description":"The sprite to check.","name":"sprite"},{"type":{"names":["Number"]},"description":"The tileType to check for.","name":"tileType"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The x padding that is accepted: if horizontal position is +/- that spaceX, check will succeed.","name":"spaceX"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The y padding that is accepted: if vertical position is +/- that spaceX, check will succeed.","name":"spaceY"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true if you want to sprite to be centered on the tile.","name":"center"}],"returns":[{"type":{"names":["Boolean"]},"description":"True if the tile was found, false otherwise"}],"name":"checkForTileType","longname":"Map#checkForTileType","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#checkForTileType","$kind":"method","$docmaLink":"?api=map#Map#checkForTileType"},{"comment":"/**\n\t *\n\t * Check for map triggers and handle any found triggers, like enemies or bonus that can appear\n\t * when the player reaches certain positions\n\t *\n\t */","meta":{"range":[19061,19423],"filename":"Map.js","lineno":581,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001618","name":"Map#checkForTriggers","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Check for map triggers and handle any found triggers, like enemies or bonus that can appear\nwhen the player reaches certain positions","name":"checkForTriggers","longname":"Map#checkForTriggers","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#checkForTriggers","$kind":"method","$docmaLink":"?api=map#Map#checkForTriggers"},{"comment":"/**\n\t *\n\t * Checks collisions between master bullets and enemies: call hitTest method on\n\t * any frend bullet object with the enemies object as parameter\n\t *\n\t */","meta":{"range":[22082,22572],"filename":"Map.js","lineno":676,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001896","name":"Map#checkMasterBulletsToEnemiesCollisions","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Checks collisions between master bullets and enemies: call hitTest method on\nany frend bullet object with the enemies object as parameter","name":"checkMasterBulletsToEnemiesCollisions","longname":"Map#checkMasterBulletsToEnemiesCollisions","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#checkMasterBulletsToEnemiesCollisions","$kind":"method","$docmaLink":"?api=map#Map#checkMasterBulletsToEnemiesCollisions"},{"comment":"/**\n\t *\n\t * Triggers map scrolling depending on the master's position (if needed)\n\t *\n\t */","meta":{"range":[16377,18632],"filename":"Map.js","lineno":518,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001394","name":"Map#checkMasterPosition","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Triggers map scrolling depending on the master's position (if needed)","name":"checkMasterPosition","longname":"Map#checkMasterPosition","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#checkMasterPosition","$kind":"method","$docmaLink":"?api=map#Map#checkMasterPosition"},{"comment":"/**\n    * Checks collisions between master object and enemies, calling hitTest on any enemie\n    * that collides with the master\n    *\n    * @returns {Boolean} Returns true if the masterSprite was hit, false otherwise.\n    *\n    */","meta":{"range":[22815,23198],"filename":"Map.js","lineno":699,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001976","name":"Map#checkMasterToEnemiesCollisions","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Checks collisions between master object and enemies, calling hitTest on any enemie\nthat collides with the master","returns":[{"type":{"names":["Boolean"]},"description":"Returns true if the masterSprite was hit, false otherwise."}],"name":"checkMasterToEnemiesCollisions","longname":"Map#checkMasterToEnemiesCollisions","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#checkMasterToEnemiesCollisions","$kind":"method","$docmaLink":"?api=map#Map#checkMasterToEnemiesCollisions"},{"comment":"/**\n     * Compares a source matrix with map behaviors, looking for hits\n     *\n     * @param {Array} buffer the source buffer: 0 === empty, 1 === full\n     * @param {Number} matrixWidth the width of the matrix, in pixels\n     * @param {Number} x the x index to start checking inside the map\n     * @param {Number} y the y index to start checking inside the map\n     * @param {Number} behavior the behavior to check for\n     *\n     * @returns {Boolean} true if one or more hits were found, false otherwise\n     */","meta":{"range":[25694,26152],"filename":"Map.js","lineno":787,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100002197","name":"Map#checkMatrixForCollision","type":"MethodDefinition","paramnames":["buffer","matrixWidth","x","y","behavior"]},"vars":{"":null}},"description":"Compares a source matrix with map behaviors, looking for hits","params":[{"type":{"names":["Array"]},"description":"the source buffer: 0 === empty, 1 === full","name":"buffer"},{"type":{"names":["Number"]},"description":"the width of the matrix, in pixels","name":"matrixWidth"},{"type":{"names":["Number"]},"description":"the x index to start checking inside the map","name":"x"},{"type":{"names":["Number"]},"description":"the y index to start checking inside the map","name":"y"},{"type":{"names":["Number"]},"description":"the behavior to check for","name":"behavior"}],"returns":[{"type":{"names":["Boolean"]},"description":"true if one or more hits were found, false otherwise"}],"name":"checkMatrixForCollision","longname":"Map#checkMatrixForCollision","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#checkMatrixForCollision","$kind":"method","$docmaLink":"?api=map#Map#checkMatrixForCollision"},{"comment":"/**\n     * Clears the whole map with specified tile number & behavior\n     *\n     * @param {Number} [tileNum=0] Tile number to use for the whole map.\n     * @param {Number} [behavior=Tile.TYPE.AIR] Behavior number to use for the whole map.\n     */","meta":{"range":[52812,53117],"filename":"Map.js","lineno":1593,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004678","name":"Map#clear","type":"MethodDefinition","paramnames":["tileNum","behavior"]},"vars":{"":null}},"description":"Clears the whole map with specified tile number & behavior","params":[{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Tile number to use for the whole map.","name":"tileNum"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":"Tile.TYPE.AIR","description":"Behavior number to use for the whole map.","name":"behavior"}],"name":"clear","longname":"Map#clear","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#clear","$kind":"method","$docmaLink":"?api=map#Map#clear"},{"comment":"/**\n\t * Sets current debug status: when set to true outputs more console logs and may also debug visual stuff\n\t * like map tiles and objects onto the map\n\t *\n\t * @param {Boolean} isDebug Set to true to enable debug.\n\t *\n\t */","meta":{"range":[13697,13833],"filename":"Map.js","lineno":429,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001172","name":"Map#debug","type":"MethodDefinition","paramnames":["isDebug"]},"vars":{"":null}},"description":"Sets current debug status: when set to true outputs more console logs and may also debug visual stuff\nlike map tiles and objects onto the map","params":[{"type":{"names":["Boolean"]},"description":"Set to true to enable debug.","name":"isDebug"}],"name":"debug","longname":"Map#debug","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#debug","$kind":"method","$docmaLink":"?api=map#Map#debug"},{"comment":"/**\n\t * Checks if tile at position x,y is `TYPE.WALL` and returns true if it is a wall, false otherwise\n\t *\n\t * @param {Number} x The x position of the tile to check.\n\t * @param {Number} y The y position of the tile to check.\n\t * @returns {Boolean} Returns true if the tile is a wall, false otherwise.\n\t *\n\t * @related {Tile}\n\t */","meta":{"range":[21672,21908],"filename":"Map.js","lineno":662,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001859","name":"Map#fallTest","type":"MethodDefinition","paramnames":["x","y"]},"vars":{"":null}},"description":"Checks if tile at position x,y is `TYPE.WALL` and returns true if it is a wall, false otherwise","params":[{"type":{"names":["Number"]},"description":"The x position of the tile to check.","name":"x"},{"type":{"names":["Number"]},"description":"The y position of the tile to check.","name":"y"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true if the tile is a wall, false otherwise."}],"tags":[{"originalTitle":"related","title":"related","text":"{Tile}","value":"{Tile}"}],"name":"fallTest","longname":"Map#fallTest","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#fallTest","$kind":"method","$docmaLink":"?api=map#Map#fallTest"},{"comment":"/**\n     * This method returns min(next `Behavior` tile, distance)\n     *\n     * @param {Sprite} sprite The sprite to check distance with.\n     * @param {Number} distance The maximum (x) distance in pixels.\n     * @param {Number} behavior The behavior we want to check for.\n     *\n     * Returns the minimum distance\n     */","meta":{"range":[26487,27477],"filename":"Map.js","lineno":812,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100002277","name":"Map#getMaxDistanceToTile","type":"MethodDefinition","paramnames":["sprite","distance","behavior"]},"vars":{"":null}},"description":"This method returns min(next `Behavior` tile, distance)","params":[{"type":{"names":["Sprite"]},"description":"The sprite to check distance with.","name":"sprite"},{"type":{"names":["Number"]},"description":"The maximum (x) distance in pixels.","name":"distance"},{"type":{"names":["Number"]},"description":"The behavior we want to check for.\n\nReturns the minimum distance","name":"behavior"}],"name":"getMaxDistanceToTile","longname":"Map#getMaxDistanceToTile","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#getMaxDistanceToTile","$kind":"method","$docmaLink":"?api=map#Map#getMaxDistanceToTile"},{"comment":"/**\n\t * Returns the tile at (x, y) pixels\n\t *\n\t * <blockquote><strong>Note:</strong> position is related to the whole map, not the viewport.</blockquote>\n     * \n\t * @param {number} x The horizontal position in pixels.\n\t * @param {number} y The vertical position in pixels.\n\t *\n\t *\n\t * @returns {(Tile|undefined)} The tile that is found at position x, y, undefined if tile `(x, y)` is out of bounds\n\t *\n\t */","meta":{"range":[44278,44513],"filename":"Map.js","lineno":1293,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100003794","name":"Map#getTileAt","type":"MethodDefinition","paramnames":["x","y"]},"vars":{"":null}},"description":"Returns the tile at (x, y) pixels\n\n<blockquote><strong>Note:</strong> position is related to the whole map, not the viewport.</blockquote>","params":[{"type":{"names":["number"]},"description":"The horizontal position in pixels.","name":"x"},{"type":{"names":["number"]},"description":"The vertical position in pixels.","name":"y"}],"returns":[{"type":{"names":["Tile","undefined"]},"description":"The tile that is found at position x, y, undefined if tile `(x, y)` is out of bounds"}],"name":"getTileAt","longname":"Map#getTileAt","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#getTileAt","$kind":"method","$docmaLink":"?api=map#Map#getTileAt"},{"comment":"/**\n     * Get the behavior at specified index\n     *\n     * @param {Number} col The col number.\n     * @param {Number} row The row number.\n     *\n     * @returns {Number} The behavior found at position (col, row)\n     */","meta":{"range":[44745,44846],"filename":"Map.js","lineno":1313,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100003847","name":"Map#getTileBehaviorAtIndex","type":"MethodDefinition","paramnames":["col","row"]},"vars":{"":null}},"description":"Get the behavior at specified index","params":[{"type":{"names":["Number"]},"description":"The col number.","name":"col"},{"type":{"names":["Number"]},"description":"The row number.","name":"row"}],"returns":[{"type":{"names":["Number"]},"description":"The behavior found at position (col, row)"}],"name":"getTileBehaviorAtIndex","longname":"Map#getTileBehaviorAtIndex","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#getTileBehaviorAtIndex","$kind":"method","$docmaLink":"?api=map#Map#getTileBehaviorAtIndex"},{"comment":"/**\n\t * Returns index of the tile at pos (x,y) in map array\n\t *\n\t * @param {number} x Horizontal pixel position.\n\t * @param {number} y Vertical pixel position.\n\t * @returns {Object} Object with i, j tile index\n\t *\n\t */","meta":{"range":[45075,45278],"filename":"Map.js","lineno":1325,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100003865","name":"Map#getTileIndexFromPixel","type":"MethodDefinition","paramnames":["x","y"]},"vars":{"":null}},"description":"Returns index of the tile at pos (x,y) in map array","params":[{"type":{"names":["number"]},"description":"Horizontal pixel position.","name":"x"},{"type":{"names":["number"]},"description":"Vertical pixel position.","name":"y"}],"returns":[{"type":{"names":["Object"]},"description":"Object with i, j tile index"}],"name":"getTileIndexFromPixel","longname":"Map#getTileIndexFromPixel","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#getTileIndexFromPixel","$kind":"method","$docmaLink":"?api=map#Map#getTileIndexFromPixel"},{"comment":"/**\n     * Returns the pixel position of the specified tile\n     *\n     * @param {Number} col Tile column.\n     * @param {Number} row Tile row.\n     * @returns {Object} an object with x & y properties set with tile pixel position\n     */","meta":{"range":[45526,45661],"filename":"Map.js","lineno":1345,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100003902","name":"Map#getTilePixelPos","type":"MethodDefinition","paramnames":["col","row"]},"vars":{"":null}},"description":"Returns the pixel position of the specified tile","params":[{"type":{"names":["Number"]},"description":"Tile column.","name":"col"},{"type":{"names":["Number"]},"description":"Tile row.","name":"row"}],"returns":[{"type":{"names":["Object"]},"description":"an object with x & y properties set with tile pixel position"}],"name":"getTilePixelPos","longname":"Map#getTilePixelPos","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#getTilePixelPos","$kind":"method","$docmaLink":"?api=map#Map#getTilePixelPos"},{"comment":"/**\n     * Tests if a rectangle collapses with certain types of tiles\n     * Used when checking colligions between a sprite and walls for example\n     *\n     * @param {number} x\n     * @param {number} y\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} types\n     * @returns {(Boolean|Object)} True if colision detected\n     *\n     */","meta":{"range":[33926,34762],"filename":"Map.js","lineno":1013,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100002853","name":"Map#hitObjectTest","type":"MethodDefinition","paramnames":["x","y","x2","y2","types"]},"vars":{"":null}},"description":"Tests if a rectangle collapses with certain types of tiles\nUsed when checking colligions between a sprite and walls for example","params":[{"type":{"names":["number"]},"name":"x"},{"type":{"names":["number"]},"name":"y"},{"type":{"names":["number"]},"name":"x2"},{"type":{"names":["number"]},"name":"y2"},{"type":{"names":["number"]},"name":"types"}],"returns":[{"type":{"names":["Boolean","Object"]},"description":"True if colision detected"}],"name":"hitObjectTest","longname":"Map#hitObjectTest","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#hitObjectTest","$kind":"method","$docmaLink":"?api=map#Map#hitObjectTest"},{"comment":"/**\n\t * Move movable objects into the map\n\t *\n     * @param {Number} timestamp current time\n\t */","meta":{"range":[13940,14340],"filename":"Map.js","lineno":440,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001189","name":"Map#moveObjects","type":"MethodDefinition","paramnames":["timestamp"]},"vars":{"":null}},"description":"Move movable objects into the map","params":[{"type":{"names":["Number"]},"description":"current time","name":"timestamp"}],"name":"moveObjects","longname":"Map#moveObjects","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#moveObjects","$kind":"method","$docmaLink":"?api=map#Map#moveObjects"},{"comment":"/**\n\t * Move platform objects onto the map: they must be moved before normal objects are moved\n\t * so that movable objects move related to the platforms\n\t *\n     * @param {Number} timestamp Current time.\n\t */","meta":{"range":[14559,14735],"filename":"Map.js","lineno":458,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001221","name":"Map#movePlatforms","type":"MethodDefinition","paramnames":["timestamp"]},"vars":{"":null}},"description":"Move platform objects onto the map: they must be moved before normal objects are moved\nso that movable objects move related to the platforms","params":[{"type":{"names":["Number"]},"description":"Current time.","name":"timestamp"}],"name":"movePlatforms","longname":"Map#movePlatforms","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#movePlatforms","$kind":"method","$docmaLink":"?api=map#Map#movePlatforms"},{"comment":"/**\n\t * Sets a new destination for the viewport: this method doesn't not set it immediately\n\t * but sets a new target instead: if not already moving, new move will happen at each\n\t * render inside the map.update) method.\n     *\n     * This method uses current map.duration and map.easing to perform the move.\n\t *\n\t * <bockquote><strong>Note:</strong> moveTo will do nothing in case the map is already scrolling.</blockquote>\n     * \n\t * @param {number} x The horizontal position to move the viewport at.\n\t * @param {number} y The vertical position to move the viewport at.\n\t *\n\t */","meta":{"range":[20016,20902],"filename":"Map.js","lineno":604,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001694","name":"Map#moveTo","type":"MethodDefinition","paramnames":["x","y"]},"vars":{"":null}},"description":"Sets a new destination for the viewport: this method doesn't not set it immediately\nbut sets a new target instead: if not already moving, new move will happen at each\nrender inside the map.update) method.\n\nThis method uses current map.duration and map.easing to perform the move.\n\n<bockquote><strong>Note:</strong> moveTo will do nothing in case the map is already scrolling.</blockquote>","params":[{"type":{"names":["number"]},"description":"The horizontal position to move the viewport at.","name":"x"},{"type":{"names":["number"]},"description":"The vertical position to move the viewport at.","name":"y"}],"name":"moveTo","longname":"Map#moveTo","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#moveTo","$kind":"method","$docmaLink":"?api=map#Map#moveTo"},{"comment":"/**\n\t * Send specified event to the NotificationManager\n\t *\n\t * @param {String} eventType The type of event to send.\n\t * @param {Object} data The data to send with the notification.\n\t *\n\t */","meta":{"range":[47550,47617],"filename":"Map.js","lineno":1411,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004123","name":"Map#notify","type":"MethodDefinition","paramnames":["eventType","data"]},"vars":{"":null}},"description":"Send specified event to the NotificationManager","params":[{"type":{"names":["String"]},"description":"The type of event to send.","name":"eventType"},{"type":{"names":["Object"]},"description":"The data to send with the notification.","name":"data"}],"name":"notify","longname":"Map#notify","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#notify","$kind":"method","$docmaLink":"?api=map#Map#notify"},{"comment":"/**\n\t * removeObject from the map\n\t *\n\t * <blockquote><strong>Note:</strong> the object if automatically removed from collision lists.</blockquote>\n     * \n\t * @param {Drawable} drawable The object to remove from the map.\n     *\n\t */","meta":{"range":[47862,48316],"filename":"Map.js","lineno":1424,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004136","name":"Map#removeObject","type":"MethodDefinition","paramnames":["drawable"]},"vars":{"":null}},"description":"removeObject from the map\n\n<blockquote><strong>Note:</strong> the object if automatically removed from collision lists.</blockquote>","params":[{"type":{"names":["Drawable"]},"description":"The object to remove from the map.","name":"drawable"}],"name":"removeObject","longname":"Map#removeObject","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#removeObject","$kind":"method","$docmaLink":"?api=map#Map#removeObject"},{"comment":"/**\n\t *\n\t * Resets the map:\n\t * \t- removes objects from the map\n\t *  - reset windows\n\t *  - reset triggers\n\t *  - reset mapEvents\n\t *  - reset viewport + tileOffset\n\t *  - sets isDirty to true so that map is redrawn\n\t *\n\t * TODO: tileOffset shouldn't be 0 but depends on the master's position\n\t *\n\t */","meta":{"range":[8057,9493],"filename":"Map.js","lineno":234,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000606","name":"Map#reset","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Resets the map:\n\t- removes objects from the map\n - reset windows\n - reset triggers\n - reset mapEvents\n - reset viewport + tileOffset\n - sets isDirty to true so that map is redrawn\n\nTODO: tileOffset shouldn't be 0 but depends on the master's position","name":"reset","longname":"Map#reset","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#reset","$kind":"method","$docmaLink":"?api=map#Map#reset"},{"comment":"/**\n\t * Resets the master's position to the map.startX/startY position & resets its animation state:\n\t * usually called when player loses a life and needs to be positionned at a checkpoint\n\t *\n\t */","meta":{"range":[7332,7744],"filename":"Map.js","lineno":208,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000525","name":"Map#respawn","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Resets the master's position to the map.startX/startY position & resets its animation state:\nusually called when player loses a life and needs to be positionned at a checkpoint","name":"respawn","longname":"Map#respawn","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#respawn","$kind":"method","$docmaLink":"?api=map#Map#respawn"},{"comment":"/**\n\t * Sets the map tiles and tiletypes from binary buffer:\n\t *  - first (numCols * numRows) bytes are visual tile numbers\n\t *  - last (numCols * numRows) bytes are the tile types (wall, ladder,...)\n\t *\n\t * @param {any} buffer\n\t *\n\t */","meta":{"range":[9961,10178],"filename":"Map.js","lineno":299,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000854","name":"Map#setBuffer","type":"MethodDefinition","paramnames":["buffer"]},"vars":{"":null}},"description":"Sets the map tiles and tiletypes from binary buffer:\n - first (numCols * numRows) bytes are visual tile numbers\n - last (numCols * numRows) bytes are the tile types (wall, ladder,...)","params":[{"type":{"names":["any"]},"name":"buffer"}],"name":"setBuffer","longname":"Map#setBuffer","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setBuffer","$kind":"method","$docmaLink":"?api=map#Map#setBuffer"},{"comment":"/**\n     * Changes the easing function used when scrolling the viewport\n     *\n     * @param {String} easing='linear' The new easing function to use.\n     */","meta":{"range":[7044,7124],"filename":"Map.js","lineno":199,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000508","name":"Map#setEasing","type":"MethodDefinition","paramnames":["easing"]},"vars":{"":null}},"description":"Changes the easing function used when scrolling the viewport","params":[{"type":{"names":["String"]},"defaultvalue":"'linear'","description":"The new easing function to use.","name":"easing"}],"name":"setEasing","longname":"Map#setEasing","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setEasing","$kind":"method","$docmaLink":"?api=map#Map#setEasing"},{"comment":"/**\n\t * Sets the master object, it will be used for:\n\t *  - scrolling the viewport when needed, centering it around the master sprite\n\t *  - collision detection\n\t *\n\t * @param {Drawable} obj The object to set as master.\n\t *\n\t */","meta":{"range":[10812,11024],"filename":"Map.js","lineno":327,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000968","name":"Map#setMasterObject","type":"MethodDefinition","paramnames":["obj"]},"vars":{"":null}},"description":"Sets the master object, it will be used for:\n - scrolling the viewport when needed, centering it around the master sprite\n - collision detection","params":[{"type":{"names":["Drawable"]},"description":"The object to set as master.","name":"obj"}],"name":"setMasterObject","longname":"Map#setMasterObject","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setMasterObject","$kind":"method","$docmaLink":"?api=map#Map#setMasterObject"},{"comment":"/**\n    * Calculates and sets the object's next x position using its current x, vx and\n    * avoids tileTypes tiles (ie: walls, moving platforms)\n    *\n    * @param {Drawable} sprite The sprite to get next position of.\n    * @param {Number} tileTypes The tileType.\n    * @returns {Boolean} Returns true if the object hit the spcified tile, false otherwise\n    *\n    */","meta":{"range":[27856,29908],"filename":"Map.js","lineno":849,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100002456","name":"Map#setNextX","type":"MethodDefinition","paramnames":["sprite","tileTypes"]},"vars":{"":null}},"description":"Calculates and sets the object's next x position using its current x, vx and\navoids tileTypes tiles (ie: walls, moving platforms)","params":[{"type":{"names":["Drawable"]},"description":"The sprite to get next position of.","name":"sprite"},{"type":{"names":["Number"]},"description":"The tileType.","name":"tileTypes"}],"returns":[{"type":{"names":["Boolean"]},"description":"Returns true if the object hit the spcified tile, false otherwise"}],"name":"setNextX","longname":"Map#setNextX","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setNextX","$kind":"method","$docmaLink":"?api=map#Map#setNextX"},{"comment":"/**\n    * WIP: Calculates and sets the object's next y position using its current y, vy and\n    * avoids tileTypes tiles (ie: walls, moving platforms)\n    *\n    * @param {Drawable} sprite\n    * @param {any} tileTypes\n    * @returns {Boolean} true if the object hit a tile, false otherwise\n    *\n    */","meta":{"range":[30220,30904],"filename":"Map.js","lineno":907,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100002708","name":"Map#setNextYTop","type":"MethodDefinition","paramnames":["sprite","tileTypes"]},"vars":{"":null}},"description":"WIP: Calculates and sets the object's next y position using its current y, vy and\navoids tileTypes tiles (ie: walls, moving platforms)","params":[{"type":{"names":["Drawable"]},"name":"sprite"},{"type":{"names":["any"]},"name":"tileTypes"}],"returns":[{"type":{"names":["Boolean"]},"description":"true if the object hit a tile, false otherwise"}],"name":"setNextYTop","longname":"Map#setNextYTop","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setNextYTop","$kind":"method","$docmaLink":"?api=map#Map#setNextYTop"},{"comment":"/**\n     * saves a refrence to the scene the map is attached to\n     *\n     * @param {Scene} scene Reference to the scene the map is being attached to.\n     */","meta":{"range":[9663,9714],"filename":"Map.js","lineno":287,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000843","name":"Map#setScene","type":"MethodDefinition","paramnames":["scene"]},"vars":{"":null}},"description":"saves a refrence to the scene the map is attached to","params":[{"type":{"names":["Scene"]},"description":"Reference to the scene the map is being attached to.","name":"scene"}],"name":"setScene","longname":"Map#setScene","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setScene","$kind":"method","$docmaLink":"?api=map#Map#setScene"},{"comment":"/**\n\t *\n\t * Changes the start position using the master's current position: usually called when reaching a checkpoint\n\t *\n\t */","meta":{"range":[6760,6876],"filename":"Map.js","lineno":189,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000484","name":"Map#setStartXYFromMaster","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Changes the start position using the master's current position: usually called when reaching a checkpoint","name":"setStartXYFromMaster","longname":"Map#setStartXYFromMaster","kind":"function","memberof":"Map","scope":"instance","params":[],"$longname":"Map#setStartXYFromMaster","$kind":"method","$docmaLink":"?api=map#Map#setStartXYFromMaster"},{"comment":"/**\n\t * Sets the map tile size (in pixels)\n\t *\n\t * @param {number} width of a map tile.\n\t * @param {number} height of a map tile.\n\t *\n\t */","meta":{"range":[12803,12904],"filename":"Map.js","lineno":396,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001122","name":"Map#setTilesSize","type":"MethodDefinition","paramnames":["width","height"]},"vars":{"":null}},"description":"Sets the map tile size (in pixels)","params":[{"type":{"names":["number"]},"description":"of a map tile.","name":"width"},{"type":{"names":["number"]},"description":"of a map tile.","name":"height"}],"name":"setTilesSize","longname":"Map#setTilesSize","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setTilesSize","$kind":"method","$docmaLink":"?api=map#Map#setTilesSize"},{"comment":"/**\n\t * changes current viewport size and position\n\t *\n\t * <blockquote><strong>note:</strong> there is currently no boundaries checks.</blockquote>\n     * \n\t * @param {number} x Horizontal position of the viewport.\n\t * @param {number} y Vertical position of the viewport.\n\t * @param {number} width Width of the viewport.\n\t * @param {number} height Height of the viewport.\n\t *\n\t *\n\t */","meta":{"range":[13300,13461],"filename":"Map.js","lineno":414,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001140","name":"Map#setViewPort","type":"MethodDefinition","paramnames":["x","y","width","height"]},"vars":{"":null}},"description":"changes current viewport size and position\n\n<blockquote><strong>note:</strong> there is currently no boundaries checks.</blockquote>","params":[{"type":{"names":["number"]},"description":"Horizontal position of the viewport.","name":"x"},{"type":{"names":["number"]},"description":"Vertical position of the viewport.","name":"y"},{"type":{"names":["number"]},"description":"Width of the viewport.","name":"width"},{"type":{"names":["number"]},"description":"Height of the viewport.","name":"height"}],"name":"setViewPort","longname":"Map#setViewPort","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#setViewPort","$kind":"method","$docmaLink":"?api=map#Map#setViewPort"},{"comment":"/**\n     * shifts map from top to bottom\n     *\n     * @param {Number} startLine Where to start the copy.\n     * @param {Number} height How many lines to shift.\n     * @param {Number} tile Tile to use for new lines.\n     */","meta":{"range":[54109,54512],"filename":"Map.js","lineno":1632,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004810","name":"Map#shift","type":"MethodDefinition","paramnames":["startLine","height","tile"]},"vars":{"":null}},"description":"shifts map from top to bottom","params":[{"type":{"names":["Number"]},"description":"Where to start the copy.","name":"startLine"},{"type":{"names":["Number"]},"description":"How many lines to shift.","name":"height"},{"type":{"names":["Number"]},"description":"Tile to use for new lines.","name":"tile"}],"name":"shift","longname":"Map#shift","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#shift","$kind":"method","$docmaLink":"?api=map#Map#shift"},{"comment":"/**\n\t * DEBUG: draw outline of each tile with a different color, depending\n\t * on the type of tile\n\t *\n\t * @param {CanvasContext} ctx The canvas context to render outline on.\n\t *\n\t */","meta":{"range":[48510,50254],"filename":"Map.js","lineno":1447,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004214","name":"Map#showTileBehaviors","type":"MethodDefinition","paramnames":["ctx","showHidden","mapOffsetX","mapOffsetY"]},"vars":{"":null}},"description":"DEBUG: draw outline of each tile with a different color, depending\non the type of tile","params":[{"type":{"names":["CanvasContext"]},"description":"The canvas context to render outline on.","name":"ctx"}],"name":"showTileBehaviors","longname":"Map#showTileBehaviors","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#showTileBehaviors","$kind":"method","$docmaLink":"?api=map#Map#showTileBehaviors"},{"comment":"/**\n\t * Handle moving map & its objects:\n\t *  - updates the viewport window if map.moving is set\n\t *  - checks for triggers (that could spawn new objects onto the map)\n\t *  - move platforms and objects\n\t *\n     * @param {Number} timestamp current time\n\t */","meta":{"range":[15003,16275],"filename":"Map.js","lineno":475,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100001247","name":"Map#update","type":"MethodDefinition","paramnames":["timestamp"]},"vars":{"":null}},"description":"Handle moving map & its objects:\n - updates the viewport window if map.moving is set\n - checks for triggers (that could spawn new objects onto the map)\n - move platforms and objects","params":[{"type":{"names":["Number"]},"description":"current time","name":"timestamp"}],"name":"update","longname":"Map#update","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#update","$kind":"method","$docmaLink":"?api=map#Map#update"},{"comment":"/**\n     * updates individual tile & tile behavior\n     *\n     * @param {Number} col The column of the tile to update.\n     * @param {Number} row The row of the tile to update.\n     * @param {Number} [tileNum=-1] The new tile number to use, the previous one will be kept if tileNum === -1.\n     * @param {Number} [behavior=-1] The new tile behavior, the previous value will be kept if behavior === -1.\n     *\n     */","meta":{"range":[53544,53875],"filename":"Map.js","lineno":1611,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100004746","name":"Map#updateTile","type":"MethodDefinition","paramnames":["col","row","tileNum","behavior"]},"vars":{"":null}},"description":"updates individual tile & tile behavior","params":[{"type":{"names":["Number"]},"description":"The column of the tile to update.","name":"col"},{"type":{"names":["Number"]},"description":"The row of the tile to update.","name":"row"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":-1,"description":"The new tile number to use, the previous one will be kept if tileNum === -1.","name":"tileNum"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":-1,"description":"The new tile behavior, the previous value will be kept if behavior === -1.","name":"behavior"}],"name":"updateTile","longname":"Map#updateTile","kind":"function","memberof":"Map","scope":"instance","$longname":"Map#updateTile","$kind":"method","$docmaLink":"?api=map#Map#updateTile"}],"$constructor":{"comment":"/**\n     * Creates a new Map\n     *\n     * @param {Object} options\n     * @param {String} options.src The url to an image that will be used for the tiles\n     * @param {Number} options.tileWidth The width of a tile\n     * @param {Number} options.tileHeight The height of a tile\n     * @param {Number} options.width The full width of the map\n     * @param {Number} options.height The full height of the map\n     * @param {Number} options.viewportW The width of the viewport: it is usually the same as the game width. Default = map.width\n     * @param {Number} options.viewportH The height of the viewport: it is usually the same as the game height. Default = map.height\n     * @param {Number} [options.viewportX=0] Initial x viewport (horizontal scrolling position) of the map.\n     * @param {Number} [options.viewportY=0] Initial y viewport (vertical scrolling position) of the map.\n     * @param {Array} [options.tiles] An optionnal array with the tiles to use for the map.\n     * @param {String} [options.name='map'] An optional name for the map.\n     * @param {String} [options.easing='linear'] The linear function to use when scrolling the map. Defaults to linear.\n     * @param {Number} [options.startX=0] The start x position of the master object.\n     * @param {Sumber} [options.startY=0] The start y position of the master object.\n     * @param {ArrayBuffer} options.buffer The buffer containing width \\* height bytes container tile numbers followed by width*height bytes for the tile behaviors\n     * @example\n     * // Creates a new 800x600 map, with a 320x200 viewport and 32x32 tiles\n     * var map = new Map({\n     *    src: 'mapTiles.jpg',\n     *    tileWidth: 32,\n     *    tileHeight: 32,\n     *    width: 800,\n     *    height: 600,\n     *    viewportW: 320,\n     *    viewportH: 200,\n     *    buffer: new ArrayBuffer(800*600*2),\n     * });\n     */","meta":{"range":[2418,6623],"filename":"Map.js","lineno":52,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100000031","name":"Map","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Creates a new Map","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["String"]},"description":"The url to an image that will be used for the tiles","name":"options.src"},{"type":{"names":["Number"]},"description":"The width of a tile","name":"options.tileWidth"},{"type":{"names":["Number"]},"description":"The height of a tile","name":"options.tileHeight"},{"type":{"names":["Number"]},"description":"The full width of the map","name":"options.width"},{"type":{"names":["Number"]},"description":"The full height of the map","name":"options.height"},{"type":{"names":["Number"]},"description":"The width of the viewport: it is usually the same as the game width. Default = map.width","name":"options.viewportW"},{"type":{"names":["Number"]},"description":"The height of the viewport: it is usually the same as the game height. Default = map.height","name":"options.viewportH"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Initial x viewport (horizontal scrolling position) of the map.","name":"options.viewportX"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"Initial y viewport (vertical scrolling position) of the map.","name":"options.viewportY"},{"type":{"names":["Array"]},"optional":true,"description":"An optionnal array with the tiles to use for the map.","name":"options.tiles"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'map'","description":"An optional name for the map.","name":"options.name"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'linear'","description":"The linear function to use when scrolling the map. Defaults to linear.","name":"options.easing"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The start x position of the master object.","name":"options.startX"},{"type":{"names":["Sumber"]},"optional":true,"defaultvalue":0,"description":"The start y position of the master object.","name":"options.startY"},{"type":{"names":["ArrayBuffer"]},"description":"The buffer containing width \\* height bytes container tile numbers followed by width*height bytes for the tile behaviors","name":"options.buffer"}],"examples":["// Creates a new 800x600 map, with a 320x200 viewport and 32x32 tiles\nvar map = new Map({\n   src: 'mapTiles.jpg',\n   tileWidth: 32,\n   tileHeight: 32,\n   width: 800,\n   height: 600,\n   viewportW: 320,\n   viewportH: 200,\n   buffer: new ArrayBuffer(800*600*2),\n});"],"name":"Map","longname":"Map","kind":"class","scope":"global","undocumented":true,"$longname":"Map","$kind":"constructor","$docmaLink":"?api=map#Map"}},{"comment":"/**\n * MapEvent handles events that are triggered on the map.\n * Such events can be: checkpoint was reached, new wave needs to\n * be generated, etc...\n *\n * For that, the MapEvent class stores a list of items, events, switches\n * that are on the map.\n *\n * This is a default MapEvent class: games should extend MapEvent\n * to handle whatever events they need.\n *\n */","meta":{"range":[451,6737],"filename":"MapEvent.js","lineno":16,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005333","name":"MapEvent","type":"ClassDeclaration","paramnames":["map"]}},"classdesc":"MapEvent handles events that are triggered on the map.\nSuch events can be: checkpoint was reached, new wave needs to\nbe generated, etc...\n\nFor that, the MapEvent class stores a list of items, events, switches\nthat are on the map.\n\nThis is a default MapEvent class: games should extend MapEvent\nto handle whatever events they need.","name":"MapEvent","longname":"MapEvent","kind":"class","scope":"global","description":"Creates a new MapEvent","params":[{"type":{"names":["Map"]},"name":"map"}],"$longname":"MapEvent","$kind":"class","$docmaLink":"?api=map#MapEvent","$members":[{"comment":"/**\n     * Adds a new [`Drawable`]{#item} onto the map\n     *\n     * @param {String} id of the item to add\n     * @param {Drawable} item to add\n     */","meta":{"range":[1008,1064],"filename":"MapEvent.js","lineno":43,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005382","name":"MapEvent#addItem","type":"MethodDefinition","paramnames":["id","item"]},"vars":{"":null}},"description":"Adds a new [`Drawable`]{#item} onto the map","params":[{"type":{"names":["String"]},"description":"of the item to add","name":"id"},{"type":{"names":["Drawable"]},"description":"to add","name":"item"}],"name":"addItem","longname":"MapEvent#addItem","kind":"function","memberof":"MapEvent","scope":"instance","$longname":"MapEvent#addItem","$kind":"method","$docmaLink":"?api=map#MapEvent#addItem"},{"comment":"/**\n     * checks of conditions of specified trigger are valid\n     *\n     * @param {Object} trigger The trigger to check.\n     *\n     * @returns {Boolean} true if the trigger is valid\n     */","meta":{"range":[2062,3023],"filename":"MapEvent.js","lineno":85,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005461","name":"MapEvent#checkConditions","type":"MethodDefinition","paramnames":["trigger"]},"vars":{"":null}},"description":"checks of conditions of specified trigger are valid","params":[{"type":{"names":["Object"]},"description":"The trigger to check.","name":"trigger"}],"returns":[{"type":{"names":["Boolean"]},"description":"true if the trigger is valid"}],"name":"checkConditions","longname":"MapEvent#checkConditions","kind":"function","memberof":"MapEvent","scope":"instance","$longname":"MapEvent#checkConditions","$kind":"method","$docmaLink":"?api=map#MapEvent#checkConditions"},{"comment":"/**\n     * Returns an item\n     *\n     * @param {String} id of the item to retrieve\n     *\n     * @returns {Drawable|undefined} The item or undefined if it wasn't handled by the map\n     */","meta":{"range":[1264,1314],"filename":"MapEvent.js","lineno":54,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005396","name":"MapEvent#getItem","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Returns an item","params":[{"type":{"names":["String"]},"description":"of the item to retrieve","name":"id"}],"returns":[{"type":{"names":["Drawable","undefined"]},"description":"The item or undefined if it wasn't handled by the map"}],"name":"getItem","longname":"MapEvent#getItem","kind":"function","memberof":"MapEvent","scope":"instance","$longname":"MapEvent#getItem","$kind":"method","$docmaLink":"?api=map#MapEvent#getItem"},{"comment":"/**\n     * Retrieves a switch from the map using its id\n     *\n     * @param {String} id The switch to retrieve.\n     *\n     * @returns {any} returns the switch or false if it could not be found\n     */","meta":{"range":[1795,1859],"filename":"MapEvent.js","lineno":74,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005448","name":"MapEvent#getSwitch","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"Retrieves a switch from the map using its id","params":[{"type":{"names":["String"]},"description":"The switch to retrieve.","name":"id"}],"returns":[{"type":{"names":["any"]},"description":"returns the switch or false if it could not be found"}],"name":"getSwitch","longname":"MapEvent#getSwitch","kind":"function","memberof":"MapEvent","scope":"instance","$longname":"MapEvent#getSwitch","$kind":"method","$docmaLink":"?api=map#MapEvent#getSwitch"},{"comment":"/**\n     * Add a new wave of objects to the map\n\t * Used for example when the player triggers apparition of several enemies or bonuses\n     *\n     * @param {Object} options The options to pass to the wav object\n     * @returns {Boolean}\n     *\n\t * @related {Wave}\n     */","meta":{"range":[5979,6396],"filename":"MapEvent.js","lineno":213,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005737","name":"MapEvent#handleWave","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Add a new wave of objects to the map\nUsed for example when the player triggers apparition of several enemies or bonuses","params":[{"type":{"names":["Object"]},"description":"The options to pass to the wav object","name":"options"}],"returns":[{"type":{"names":["Boolean"]}}],"tags":[{"originalTitle":"related","title":"related","text":"{Wave}","value":"{Wave}"}],"name":"handleWave","longname":"MapEvent#handleWave","kind":"function","memberof":"MapEvent","scope":"instance","$longname":"MapEvent#handleWave","$kind":"method","$docmaLink":"?api=map#MapEvent#handleWave"},{"comment":"/**\n     * Resets the MapEvent switches, events and items\n     */","meta":{"range":[752,846],"filename":"MapEvent.js","lineno":31,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005360","name":"MapEvent#reset","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Resets the MapEvent switches, events and items","name":"reset","longname":"MapEvent#reset","kind":"function","memberof":"MapEvent","scope":"instance","params":[],"$longname":"MapEvent#reset","$kind":"method","$docmaLink":"?api=map#MapEvent#reset"},{"comment":"/**\n     * Schedule adding a new object to the map\n     *\n     * @param {String} spriteId The id of the new sprite to add.\n     * @param {Object} spriteOptions The options that will be passed to the object constructor.\n     * @param {Number} [delay=0] The delay in milliseconds to wait before adding the object.\n     * @returns {Drawable} the new drawable\n     *\n     */","meta":{"range":[5132,5696],"filename":"MapEvent.js","lineno":186,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005693","name":"MapEvent#scheduleSprite","type":"MethodDefinition","paramnames":["spriteId","spriteOptions","delay"]},"vars":{"":null}},"description":"Schedule adding a new object to the map","params":[{"type":{"names":["String"]},"description":"The id of the new sprite to add.","name":"spriteId"},{"type":{"names":["Object"]},"description":"The options that will be passed to the object constructor.","name":"spriteOptions"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The delay in milliseconds to wait before adding the object.","name":"delay"}],"returns":[{"type":{"names":["Drawable"]},"description":"the new drawable"}],"name":"scheduleSprite","longname":"MapEvent#scheduleSprite","kind":"function","memberof":"MapEvent","scope":"instance","$longname":"MapEvent#scheduleSprite","$kind":"method","$docmaLink":"?api=map#MapEvent#scheduleSprite"}],"$constructor":{"comment":"/**\n     * Creates a new MapEvent\n     *\n     * @param {Map} map\n     */","meta":{"range":[549,676],"filename":"MapEvent.js","lineno":22,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005336","name":"MapEvent","type":"MethodDefinition","paramnames":["map"]},"vars":{"":null}},"description":"Creates a new MapEvent","params":[{"type":{"names":["Map"]},"name":"map"}],"name":"MapEvent","longname":"MapEvent","kind":"class","scope":"global","undocumented":true,"$longname":"MapEvent","$kind":"constructor","$docmaLink":"?api=map#MapEvent"}},{"comment":"/**\n * Class that describes a tile\n * \n * @param {Object} options\n * @param {Number} [options.offsetX=0] The horizontal offset of the tile in the tilesheet.\n * @param {Number} [options.offsetY=0] The vertical offset of the tile in the tilesheet.\n * @param {Number} [options.width=16] The tile width in pixels.\n * @param {Number} [options.height=16] The tile height in pixels.\n */","meta":{"range":[380,1196],"filename":"Tile.js","lineno":10,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005836","name":"Tile","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"Class that describes a tile","params":[{"type":{"names":["Object"]},"name":"options"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The horizontal offset of the tile in the tilesheet.","name":"options.offsetX"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"The vertical offset of the tile in the tilesheet.","name":"options.offsetY"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":16,"description":"The tile width in pixels.","name":"options.width"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":16,"description":"The tile height in pixels.","name":"options.height"}],"name":"Tile","longname":"Tile","kind":"class","scope":"global","description":"Creates a new Tile","$longname":"Tile","$kind":"class","$docmaLink":"?api=map#Tile","$members":[{"comment":"/**\n     * Static tile behaviors\n     */","meta":{"range":[1078,1194],"filename":"Tile.js","lineno":30,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005914","name":"Tile.TYPE","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Static tile behaviors","name":"TYPE","longname":"Tile.TYPE","kind":"member","memberof":"Tile","scope":"static","params":[],"$longname":"Tile.TYPE","$kind":"property","$docmaLink":"?api=map#Tile.TYPE"}],"$constructor":{"comment":"/**\n     * Creates a new Tile\n     */","meta":{"range":[439,1027],"filename":"Tile.js","lineno":14,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Map","code":{"id":"astnode100005839","name":"Tile","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Creates a new Tile","name":"Tile","longname":"Tile","kind":"class","scope":"global","params":[],"undocumented":true,"$longname":"Tile","$kind":"constructor","$docmaLink":"?api=map#Tile"}}],"symbols":["Map","Map#addObject","Map#addTileSet","Map#checkCollisions","Map#checkForTileType","Map#checkForTriggers","Map#checkMasterBulletsToEnemiesCollisions","Map#checkMasterPosition","Map#checkMasterToEnemiesCollisions","Map#checkMatrixForCollision","Map#clear","Map#debug","Map#fallTest","Map#getMaxDistanceToTile","Map#getTileAt","Map#getTileBehaviorAtIndex","Map#getTileIndexFromPixel","Map#getTilePixelPos","Map#hitObjectTest","Map#moveObjects","Map#movePlatforms","Map#moveTo","Map#notify","Map#removeObject","Map#reset","Map#respawn","Map#setBuffer","Map#setEasing","Map#setMasterObject","Map#setNextX","Map#setNextYTop","Map#setScene","Map#setStartXYFromMaster","Map#setTilesSize","Map#setViewPort","Map#shift","Map#showTileBehaviors","Map#update","Map#updateTile","MapEvent","MapEvent#addItem","MapEvent#checkConditions","MapEvent#getItem","MapEvent#getSwitch","MapEvent#handleWave","MapEvent#reset","MapEvent#scheduleSprite","Tile","Tile.TYPE"]},"input":{"documentation":[{"comment":"/**\n * Handles keyboard input (joystick input doesn't work correctly yet).\n *\n * Key presses are stored in a simple hash this.keyPressed with keyCode as key, and attached handlers are stored in\n * another hash this.keyCb.\n *\n * The InputManager can also be used to record keystrokes which can then be played back to produce game demos for example.\n *\n * @example\n *\n * // example state of InputManager.keyPressed where `up` key is down and `down` key has just been released:\n * { 32: true, 40: false }\n *\n */","meta":{"range":[618,19823],"filename":"InputManager.js","lineno":19,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000003","name":"InputManager","type":"ObjectExpression","value":"{\"KEYS\":\"\",\"PAD_BUTTONS\":\"\",\"axes\":\"\",\"newGamepadPollDelay\":1000,\"gamepadSupport\":false,\"recording\":false,\"playingEvents\":false,\"playingPos\":0,\"recordedEvents\":\"\",\"pad\":null,\"latches\":\"\",\"keyPressed\":\"\",\"padPressed\":\"\",\"keyCb\":\"\",\"enabled\":true,\"inputMode\":\"keyboard\",\"dPadJoystick\":null,\"jPollInterval\":0,\"init\":\"\",\"_generateKeyCodes\":\"\",\"_installInputModeSwitchHandler\":\"\",\"startRecordingEvents\":\"\",\"stopRecordingEvents\":\"\",\"playRecordedEvents\":\"\",\"nextRecordedEvents\":\"\",\"recordEvents\":\"\",\"setInputMode\":\"\",\"_resetKeys\":\"\",\"_pollNewGamepad\":\"\",\"_pollGamepad\":\"\",\"_getModifiers\":\"\",\"_initVirtualJoystick\":\"\",\"_clearJoystickPoll\":\"\",\"_pollJoystick\":\"\",\"_installKBEventHandlers\":\"\",\"getAllKeysStatus\":\"\",\"getKeyStatus\":\"\",\"isKeyDown\":\"\",\"installKeyCallback\":\"\",\"removeKeyCallback\":\"\",\"clearEvents\":\"\"}"}},"description":"Handles keyboard input (joystick input doesn't work correctly yet).\n\nKey presses are stored in a simple hash this.keyPressed with keyCode as key, and attached handlers are stored in\nanother hash this.keyCb.\n\nThe InputManager can also be used to record keystrokes which can then be played back to produce game demos for example.","examples":["// example state of InputManager.keyPressed where `up` key is down and `down` key has just been released:\n{ 32: true, 40: false }"],"name":"InputManager","longname":"InputManager","kind":"constant","scope":"global","params":[],"$longname":"InputManager","$kind":"constant","$docmaLink":"?api=input#InputManager","$members":[{"comment":"/**\n     * Returns an object with the state of all keys\n     */","meta":{"range":[18017,18265],"filename":"InputManager.js","lineno":537,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100001591","name":"getAllKeysStatus","type":"FunctionExpression"},"vars":{"keys":"InputManager.getAllKeysStatus~keys","result":"InputManager.getAllKeysStatus~result","i":"InputManager.getAllKeysStatus~i","result[undefined]":"InputManager.getAllKeysStatus~result.undefined]"}},"description":"Returns an object with the state of all keys","name":"getAllKeysStatus","longname":"InputManager.getAllKeysStatus","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.getAllKeysStatus","$kind":"method","$docmaLink":"?api=input#InputManager.getAllKeysStatus"},{"comment":"/**\n     * Initializes the InputManager with a reference to the game.\n     *\n     * This method prepares the InputManager by reseting keyboard states/handlers and\n     * set current inputMode\n     *\n     * @param {Object} options List of input options, unused for now\n     *\n     */","meta":{"range":[2314,2591],"filename":"InputManager.js","lineno":83,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000090","name":"init","type":"FunctionExpression"}},"description":"Initializes the InputManager with a reference to the game.\n\nThis method prepares the InputManager by reseting keyboard states/handlers and\nset current inputMode","params":[{"type":{"names":["Object"]},"description":"List of input options, unused for now","name":"options"}],"name":"init","longname":"InputManager.init","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.init","$kind":"method","$docmaLink":"?api=input#InputManager.init"},{"comment":"/**\n     * Install callback that gets called when a key is pressed/released\n     *\n     * @param {String} key space-separated list of keys to listen for\n     * @param {String} event to listen for: can be `up` or `down`\n     * @param {Function} callback the function to call\n     */","meta":{"range":[19129,19509],"filename":"InputManager.js","lineno":579,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100001715","name":"installKeyCallback","type":"FunctionExpression"},"vars":{"":null}},"description":"Install callback that gets called when a key is pressed/released","params":[{"type":{"names":["String"]},"description":"space-separated list of keys to listen for","name":"key"},{"type":{"names":["String"]},"description":"to listen for: can be `up` or `down`","name":"event"},{"type":{"names":["function"]},"description":"the function to call","name":"callback"}],"name":"installKeyCallback","longname":"InputManager.installKeyCallback","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.installKeyCallback","$kind":"method","$docmaLink":"?api=input#InputManager.installKeyCallback"},{"comment":"/**\n     * A list of common keyCodes\n     */","meta":{"range":[688,863],"filename":"InputManager.js","lineno":23,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000006","name":"KEYS","type":"ObjectExpression","value":"{\"undefined\":17}"}},"description":"A list of common keyCodes","name":"KEYS","longname":"InputManager.KEYS","kind":"member","memberof":"InputManager","scope":"static","$longname":"InputManager.KEYS","$kind":"property","$docmaLink":"?api=input#InputManager.KEYS"},{"comment":"/**\n     * Sets next key states using recorded events\n     *\n     * TODO: add an optional callback to be called at the end of the playback\n     * so that demo can be looped.\n     */","meta":{"range":[5086,6071],"filename":"InputManager.js","lineno":161,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000241","name":"nextRecordedEvents","type":"FunctionExpression"},"vars":{"this.playingEvents":"InputManager.nextRecordedEvents#playingEvents","this.keyPressed":"InputManager.nextRecordedEvents#keyPressed"}},"description":"Sets next key states using recorded events\n\nTODO: add an optional callback to be called at the end of the playback\nso that demo can be looped.","name":"nextRecordedEvents","longname":"InputManager.nextRecordedEvents","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.nextRecordedEvents","$kind":"method","$docmaLink":"?api=input#InputManager.nextRecordedEvents"},{"comment":"/**\n     * List of common pad buttons\n     */","meta":{"range":[919,1448],"filename":"InputManager.js","lineno":36,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000024","name":"PAD_BUTTONS","type":"ObjectExpression","value":"{\"undefined\":15,\"FACE_0\":1,\"FACE_3\":2,\"FACE_4\":3,\"LEFT_SHOULDER\":4,\"RIGHT_SHOULDER\":5,\"LEFT_SHOULDER_BOTTOM\":6,\"RIGHT_SHOULDER_BOTTOM\":7,\"SELECT\":8,\"START\":9,\"LEFT_ANALOGUE_STICK\":10,\"RIGHT_ANALOGUE_STICK\":11}"}},"description":"List of common pad buttons","name":"PAD_BUTTONS","longname":"InputManager.PAD_BUTTONS","kind":"member","memberof":"InputManager","scope":"static","$longname":"InputManager.PAD_BUTTONS","$kind":"property","$docmaLink":"?api=input#InputManager.PAD_BUTTONS"},{"comment":"/**\n     * After events have been reccorded they can be played back using this method.\n     */","meta":{"range":[4645,4894],"filename":"InputManager.js","lineno":148,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000214","name":"playRecordedEvents","type":"FunctionExpression"},"vars":{"this.playingEvents":"InputManager.playRecordedEvents#playingEvents","this.playPos":"InputManager.playRecordedEvents#playPos"}},"description":"After events have been reccorded they can be played back using this method.","name":"playRecordedEvents","longname":"InputManager.playRecordedEvents","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.playRecordedEvents","$kind":"method","$docmaLink":"?api=input#InputManager.playRecordedEvents"},{"comment":"/**\n     * Changes input mode\n     *\n     * @param {String} mode Changes current input mode, can be `virtual_joystick`, `keyboard`, `gamepad`\n     */","meta":{"range":[6713,7574],"filename":"InputManager.js","lineno":208,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000324","name":"setInputMode","type":"FunctionExpression"},"vars":{"this.jPollInterval":"InputManager.setInputMode#jPollInterval","this.inputMode":"InputManager.setInputMode#inputMode"}},"description":"Changes input mode","params":[{"type":{"names":["String"]},"description":"Changes current input mode, can be `virtual_joystick`, `keyboard`, `gamepad`","name":"mode"}],"name":"setInputMode","longname":"InputManager.setInputMode","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.setInputMode","$kind":"method","$docmaLink":"?api=input#InputManager.setInputMode"},{"comment":"/**\n     * Starts recording input events. They are stored into `InputManager.recordedEvents`\n     */","meta":{"range":[4060,4297],"filename":"InputManager.js","lineno":131,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000164","name":"startRecordingEvents","type":"FunctionExpression"},"vars":{"this.recordedEvents.length":"InputManager.startRecordingEvents#recordedEvents.length","this.recording":"InputManager.startRecordingEvents#recording"}},"description":"Starts recording input events. They are stored into `InputManager.recordedEvents`","name":"startRecordingEvents","longname":"InputManager.startRecordingEvents","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.startRecordingEvents","$kind":"method","$docmaLink":"?api=input#InputManager.startRecordingEvents"},{"comment":"/**\n     * Stops recording events.\n     */","meta":{"range":[4350,4540],"filename":"InputManager.js","lineno":141,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Input","code":{"id":"astnode100000193","name":"stopRecordingEvents","type":"FunctionExpression"},"vars":{"this.recording":"InputManager.stopRecordingEvents#recording"}},"description":"Stops recording events.","name":"stopRecordingEvents","longname":"InputManager.stopRecordingEvents","kind":"function","memberof":"InputManager","scope":"static","$longname":"InputManager.stopRecordingEvents","$kind":"method","$docmaLink":"?api=input#InputManager.stopRecordingEvents"}]}],"symbols":["InputManager","InputManager.getAllKeysStatus","InputManager.init","InputManager.installKeyCallback","InputManager.KEYS","InputManager.nextRecordedEvents","InputManager.PAD_BUTTONS","InputManager.playRecordedEvents","InputManager.setInputMode","InputManager.startRecordingEvents","InputManager.stopRecordingEvents"]},"audio":{"documentation":[{"comment":"/**\n * `AudioManager` handles playback of audio files loaded using the `ResourceManager`\n *\n * @property {Object} audioCache An hash that stores in-use sounds.\n * The key is the id of the sound.\n * @property {Boolean} enabled This is set to false when sound playback is disabled.\n */","meta":{"range":[290,2662],"filename":"AudioManager.js","lineno":8,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/Audio","code":{"id":"astnode100000003","name":"AudioManager","type":"ObjectExpression","value":"{\"audioCache\":\"\",\"enabled\":true,\"addSound\":\"\",\"toggleSound\":\"\",\"play\":\"\",\"stop\":\"\"}"}},"description":"`AudioManager` handles playback of audio files loaded using the `ResourceManager`","properties":[{"type":{"names":["Object"]},"description":"An hash that stores in-use sounds.\nThe key is the id of the sound.","name":"audioCache"},{"type":{"names":["Boolean"]},"description":"This is set to false when sound playback is disabled.","name":"enabled"}],"name":"AudioManager","longname":"AudioManager","kind":"constant","scope":"global","params":[],"$longname":"AudioManager","$kind":"constant","$docmaLink":"?api=audio#AudioManager","$members":[{"comment":"/**\n     * Adds a new sound element to the audio cache.\n     * *Note* if a sound with the same id has already been added, it will be replaced\n     * by the new one.\n     *\n     * @param {String} id\n     * @param {HTMLAudioElement} element\n     */","meta":{"range":[601,680],"filename":"AudioManager.js","lineno":19,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Audio","code":{"id":"astnode100000010","name":"addSound","type":"FunctionExpression"},"vars":{"this.audioCache[undefined]":"AudioManager.addSound#audioCache[undefined]"}},"description":"Adds a new sound element to the audio cache.\n*Note* if a sound with the same id has already been added, it will be replaced\nby the new one.","params":[{"type":{"names":["String"]},"name":"id"},{"type":{"names":["HTMLAudioElement"]},"name":"element"}],"name":"addSound","longname":"AudioManager.addSound","kind":"function","memberof":"AudioManager","scope":"static","$longname":"AudioManager.addSound","$kind":"method","$docmaLink":"?api=audio#AudioManager.addSound"},{"comment":"/**\n     * Plays the specified sound with `id`.\n     *\n     * @param {String} id The id of the sound to play.\n     * @param {Boolean} [loop=false] Set to true to have the sound playback loop.\n     * @param {Number} [volume=1] a Number between 0 and 1.\n     * @param {Number} [panning=0] a Number between 10 (left) and -10 (right).\n     * @returns {Wad} the created sound instance\n     */","meta":{"range":[1284,1970],"filename":"AudioManager.js","lineno":39,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Audio","code":{"id":"astnode100000033","name":"play","type":"FunctionExpression"},"vars":{"instance":"AudioManager.play~instance","sound":"AudioManager.play~sound","sound.loop":"AudioManager.play~sound.loop"}},"description":"Plays the specified sound with `id`.","params":[{"type":{"names":["String"]},"description":"The id of the sound to play.","name":"id"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"Set to true to have the sound playback loop.","name":"loop"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":1,"description":"a Number between 0 and 1.","name":"volume"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"a Number between 10 (left) and -10 (right).","name":"panning"}],"returns":[{"type":{"names":["Wad"]},"description":"the created sound instance"}],"name":"play","longname":"AudioManager.play","kind":"function","memberof":"AudioManager","scope":"static","$longname":"AudioManager.play","$kind":"method","$docmaLink":"?api=audio#AudioManager.play"},{"comment":"/**\n     * Stops playing the sound id\n     *\n     * @param {String} id The id of the sound to stop playing.\n     * @param {any} instanceId The instanceId to use, in case several sounds with the same Id are being played.\n     *\n     * @returns {undefined}\n     */","meta":{"range":[2243,2660],"filename":"AudioManager.js","lineno":76,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Audio","code":{"id":"astnode100000126","name":"stop","type":"FunctionExpression"},"vars":{"sound":"AudioManager.stop~sound"}},"description":"Stops playing the sound id","params":[{"type":{"names":["String"]},"description":"The id of the sound to stop playing.","name":"id"},{"type":{"names":["any"]},"description":"The instanceId to use, in case several sounds with the same Id are being played.","name":"instanceId"}],"returns":[{"type":{"names":["undefined"]}}],"name":"stop","longname":"AudioManager.stop","kind":"function","memberof":"AudioManager","scope":"static","$longname":"AudioManager.stop","$kind":"method","$docmaLink":"?api=audio#AudioManager.stop"},{"comment":"/**\n     * Toggles global sound playback\n     *\n     * @param {Boolean} bool whether to enabled or disable sound playback.\n     */","meta":{"range":[821,886],"filename":"AudioManager.js","lineno":27,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Audio","code":{"id":"astnode100000023","name":"toggleSound","type":"FunctionExpression"},"vars":{"this.enabled":"AudioManager.toggleSound#enabled"}},"description":"Toggles global sound playback","params":[{"type":{"names":["Boolean"]},"description":"whether to enabled or disable sound playback.","name":"bool"}],"name":"toggleSound","longname":"AudioManager.toggleSound","kind":"function","memberof":"AudioManager","scope":"static","$longname":"AudioManager.toggleSound","$kind":"method","$docmaLink":"?api=audio#AudioManager.toggleSound"}]}],"symbols":["AudioManager","AudioManager.addSound","AudioManager.play","AudioManager.stop","AudioManager.toggleSound"]},"resource":{"documentation":[{"comment":"/**\n * Handles resource loading at runtime\n *\n * Resources are loaded and retrieved using this manager.\n *\n * The ResourceManager can load at runtime the following types of resources:\n *  - Images\n *  - Sounds\n *  - Maps (JSON-based)\n *\n */","meta":{"range":[874,21501],"filename":"ResourceManager.js","lineno":28,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000058","name":"ResourceManager","type":"ObjectExpression","value":"{\"isLocal\":\"\",\"scriptMaxTime\":3000,\"groupMaxTime\":5000,\"resources\":\"\",\"dynamicScripts\":\"\",\"iOS\":\"\",\"skipResources\":\"\",\"async\":true,\"loading\":false,\"getResourceById\":\"\",\"newResourceFromPool\":\"\",\"_createGroup\":\"\",\"_groupExists\":\"\",\"addResources\":\"\",\"loadNextResource\":\"\",\"loadResources\":\"\",\"getCanvasFromImage\":\"\",\"loadImage\":\"\",\"createObjectPool\":\"\",\"registerScript\":\"\",\"loadScript\":\"\",\"loadAudio\":\"\",\"loadWadAudio\":\"\",\"loadJSON\":\"\",\"loadMapData\":\"\",\"_resLoaded\":\"\",\"_loadResource\":\"\"}"}},"description":"Handles resource loading at runtime\n\nResources are loaded and retrieved using this manager.\n\nThe ResourceManager can load at runtime the following types of resources:\n - Images\n - Sounds\n - Maps (JSON-based)","name":"ResourceManager","longname":"ResourceManager","kind":"constant","scope":"global","params":[],"$longname":"ResourceManager","$kind":"constant","$docmaLink":"?api=resource#ResourceManager","$members":[{"comment":"/**\n     * Add new resource(s) into the specified group\n     *\n     * @param {Object|Array} resource a single or a group of resources to load\n     * @param {String} [group='any'] the name of the group to add the resources into\n     *\n     * @returns {Deferred} a new Deferred that will be resolved once the\n     * resources have been loaded.\n     *\n     * *Note* This method only adds the resources to the group\n     * but do not load them.\n     *\n     * @example\n     *\n     * ResourceManager.addResources({\n     *  id: 'sprites',\n     *  type: 'image',\n     *  src: './sprites/gem.png'\n     * }, \"sprites\");\n     *\n     * // resource type can be image|map|audio\n     */","meta":{"range":[5547,6862],"filename":"ResourceManager.js","lineno":167,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000295","name":"addResources","type":"FunctionExpression"},"vars":{"group":"ResourceManager.addResources~group","i":"ResourceManager.addResources~i","resGroup":"ResourceManager.addResources~resGroup","resGroup.res[undefined]":"ResourceManager.addResources~resGroup.res[undefined]"}},"description":"Add new resource(s) into the specified group","params":[{"type":{"names":["Object","Array"]},"description":"a single or a group of resources to load","name":"resource"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'any'","description":"the name of the group to add the resources into","name":"group"}],"returns":[{"type":{"names":["Deferred"]},"description":"a new Deferred that will be resolved once the\nresources have been loaded.\n\n*Note* This method only adds the resources to the group\nbut do not load them."}],"examples":["ResourceManager.addResources({\n id: 'sprites',\n type: 'image',\n src: './sprites/gem.png'\n}, \"sprites\");\n\n// resource type can be image|map|audio"],"name":"addResources","longname":"ResourceManager.addResources","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.addResources","$kind":"method","$docmaLink":"?api=resource#ResourceManager.addResources"},{"comment":"/**\n     * Creates a pool for a specified object\n     *\n     * This method pre-allocates objects for later use.\n     *\n     * @param {Function} Obj a new object to create\n     * @param {Number} size the size of the pool\n     *\n     */","meta":{"range":[12483,12561],"filename":"ResourceManager.js","lineno":356,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000936","name":"createObjectPool","type":"FunctionExpression"}},"description":"Creates a pool for a specified object\n\nThis method pre-allocates objects for later use.","params":[{"type":{"names":["function"]},"description":"a new object to create","name":"Obj"},{"type":{"names":["Number"]},"description":"the size of the pool","name":"size"}],"name":"createObjectPool","longname":"ResourceManager.createObjectPool","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.createObjectPool","$kind":"method","$docmaLink":"?api=resource#ResourceManager.createObjectPool"},{"comment":"/**\n     * Retrieve a resource using its id with optionnal group\n     *\n     * @param {String} id The id of the resource to get\n     * @param {String} [group=\"any\"] the group to get the resource from\n     * @param {Boolean} [fullObject=false] returns the resource object if true. Otherwise return the resource only.\n     */","meta":{"range":[2014,2766],"filename":"ResourceManager.js","lineno":62,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000113","name":"getResourceById","type":"FunctionExpression"},"vars":{"rsGroup":"ResourceManager.getResourceById~rsGroup","rs":"ResourceManager.getResourceById~rs"}},"description":"Retrieve a resource using its id with optionnal group","params":[{"type":{"names":["String"]},"description":"The id of the resource to get","name":"id"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"\"any\"","description":"the group to get the resource from","name":"group"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"description":"returns the resource object if true. Otherwise return the resource only.","name":"fullObject"}],"name":"getResourceById","longname":"ResourceManager.getResourceById","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.getResourceById","$kind":"method","$docmaLink":"?api=resource#ResourceManager.getResourceById"},{"comment":"/**\n     * Loads a new Audio file using standard HTML5 Audio\n     *\n     * @param {Object} res a descriptor for the sound to load\n     * @param {String} gpName the name of the group to load the audio file from\n     *\n     * @returns {Deferred} a new promise that will be resolved once the file has been loaded\n     */","meta":{"range":[15670,16648],"filename":"ResourceManager.js","lineno":447,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100001022","name":"loadAudio","type":"FunctionExpression"},"vars":{"that":"ResourceManager.loadAudio~that","audio":"ResourceManager.loadAudio~audio","def":"ResourceManager.loadAudio~def","onLoad":"ResourceManager.loadAudio~onLoad","audio.preload":"ResourceManager.loadAudio~audio.preload","":null,"audio.src":"ResourceManager.loadAudio~audio.src"}},"description":"Loads a new Audio file using standard HTML5 Audio","params":[{"type":{"names":["Object"]},"description":"a descriptor for the sound to load","name":"res"},{"type":{"names":["String"]},"description":"the name of the group to load the audio file from","name":"gpName"}],"returns":[{"type":{"names":["Deferred"]},"description":"a new promise that will be resolved once the file has been loaded"}],"name":"loadAudio","longname":"ResourceManager.loadAudio","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.loadAudio","$kind":"method","$docmaLink":"?api=resource#ResourceManager.loadAudio"},{"comment":"/**\n     * starts loading an image\n     *\n     * @param {Object} res an Object describing the resource to load\n     * @param {String} [gpName=undefined] the name of the group that the resource came from, set to undefined to load a single resource\n     *\n     * @returns {Deferred} a new promise that will be resolved when the file has been loaded.\n     */","meta":{"range":[11257,12238],"filename":"ResourceManager.js","lineno":319,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000852","name":"loadImage","type":"FunctionExpression"},"vars":{"img":"ResourceManager.loadImage~img","that":"ResourceManager.loadImage~that","def":"ResourceManager.loadImage~def","img.onload":"ResourceManager.loadImage~img.onload","":null,"img.src":"ResourceManager.loadImage~img.src"}},"description":"starts loading an image","params":[{"type":{"names":["Object"]},"description":"an Object describing the resource to load","name":"res"},{"type":{"names":["String"]},"optional":true,"description":"the name of the group that the resource came from, set to undefined to load a single resource","name":"gpName"}],"returns":[{"type":{"names":["Deferred"]},"description":"a new promise that will be resolved when the file has been loaded."}],"name":"loadImage","longname":"ResourceManager.loadImage","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.loadImage","$kind":"method","$docmaLink":"?api=resource#ResourceManager.loadImage"},{"comment":"/**\n     * Loads a JSON file\n     *\n     * @param {Object} res The JSON file descriptor\n     * @param {String} gpName The name of the group to load the file from\n     * @param {Function} callback An optionnal callback to execute once the file has been loaded\n     *\n     * @returns {Deferred} a promise that will be resolved once the file has been loaded.\n     */","meta":{"range":[17793,18588],"filename":"ResourceManager.js","lineno":511,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100001183","name":"loadJSON","type":"FunctionExpression"},"vars":{"def":"ResourceManager.loadJSON~def","":null}},"description":"Loads a JSON file","params":[{"type":{"names":["Object"]},"description":"The JSON file descriptor","name":"res"},{"type":{"names":["String"]},"description":"The name of the group to load the file from","name":"gpName"},{"type":{"names":["function"]},"description":"An optionnal callback to execute once the file has been loaded","name":"callback"}],"returns":[{"type":{"names":["Deferred"]},"description":"a promise that will be resolved once the file has been loaded."}],"name":"loadJSON","longname":"ResourceManager.loadJSON","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.loadJSON","$kind":"method","$docmaLink":"?api=resource#ResourceManager.loadJSON"},{"comment":"/**\n     * Attempts to load the next resource in the specified group\n     *\n     * @param {String} groupName the name of the group to use.\n     */","meta":{"range":[7019,7363],"filename":"ResourceManager.js","lineno":203,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000474","name":"loadNextResource","type":"FunctionExpression"},"vars":{"group":"ResourceManager.loadNextResource~group","i":"ResourceManager.loadNextResource~i"}},"description":"Attempts to load the next resource in the specified group","params":[{"type":{"names":["String"]},"description":"the name of the group to use.","name":"groupName"}],"name":"loadNextResource","longname":"ResourceManager.loadNextResource","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.loadNextResource","$kind":"method","$docmaLink":"?api=resource#ResourceManager.loadNextResource"},{"comment":"/**\n     * Loads all resources found in the specified group, optionnaly\n     * calling a callback after each file has been loaded.\n     *\n     * @param {String} group The name of the group to load.\n     * @param {Function} [progressCb=undefined] an optionnal progress callback.\n     * @param {Function} [errorCb=undefined] an optionnal error callback.\n     *\n     */","meta":{"range":[7809,10400],"filename":"ResourceManager.js","lineno":224,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000533","name":"loadResources","type":"FunctionExpression"},"vars":{"group":"ResourceManager.loadResources~group","this.loading":"ResourceManager.loadResources#loading","resGroup":"ResourceManager.loadResources~resGroup","nextRes":"ResourceManager.loadResources~nextRes","i":"ResourceManager.loadResources~i","size":"ResourceManager.loadResources~size","resGroup.progressCb":"ResourceManager.loadResources~resGroup.progressCb","resGroup.errorCb":"ResourceManager.loadResources~resGroup.errorCb","resGroup.gpTimeout":"ResourceManager.loadResources~resGroup.gpTimeout","":null}},"description":"Loads all resources found in the specified group, optionnaly\ncalling a callback after each file has been loaded.","params":[{"type":{"names":["String"]},"description":"The name of the group to load.","name":"group"},{"type":{"names":["function"]},"optional":true,"description":"an optionnal progress callback.","name":"progressCb"},{"type":{"names":["function"]},"optional":true,"description":"an optionnal error callback.","name":"errorCb"}],"name":"loadResources","longname":"ResourceManager.loadResources","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.loadResources","$kind":"method","$docmaLink":"?api=resource#ResourceManager.loadResources"},{"comment":"/**\n     * Loads a new Audio file using the WAD library\n     *\n     * @param {Object} res a descriptor for the sound to load\n     * @param {String} gpName the name of the group to load the audio file from\n     *\n     * @returns {Deferred} a new promise that will be resolved once the file has been loaded\n     */","meta":{"range":[16972,17418],"filename":"ResourceManager.js","lineno":486,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100001124","name":"loadWadAudio","type":"FunctionExpression"},"vars":{"def":"ResourceManager.loadWadAudio~def","sound":"ResourceManager.loadWadAudio~sound","":null}},"description":"Loads a new Audio file using the WAD library","params":[{"type":{"names":["Object"]},"description":"a descriptor for the sound to load","name":"res"},{"type":{"names":["String"]},"description":"the name of the group to load the audio file from","name":"gpName"}],"returns":[{"type":{"names":["Deferred"]},"description":"a new promise that will be resolved once the file has been loaded"}],"name":"loadWadAudio","longname":"ResourceManager.loadWadAudio","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.loadWadAudio","$kind":"method","$docmaLink":"?api=resource#ResourceManager.loadWadAudio"},{"comment":"/**\n     * Allocates a new resource from the pool\n     *\n     * This method creates a new instance of the JavaScript object, retrieving it from\n     * the pool if the object supports it. If it does not it simply uses new to generate a new instance\n     *\n     * @param {String} id The id of the resource for which to create a new instance.\n     *\n     * @returns {Object} a new instance of the specified object.\n     */","meta":{"range":[3196,3716],"filename":"ResourceManager.js","lineno":95,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000177","name":"newResourceFromPool","type":"FunctionExpression"},"vars":{"resource":"ResourceManager.newResourceFromPool~resource"}},"description":"Allocates a new resource from the pool\n\nThis method creates a new instance of the JavaScript object, retrieving it from\nthe pool if the object supports it. If it does not it simply uses new to generate a new instance","params":[{"type":{"names":["String"]},"description":"The id of the resource for which to create a new instance.","name":"id"}],"returns":[{"type":{"names":["Object"]},"description":"a new instance of the specified object."}],"name":"newResourceFromPool","longname":"ResourceManager.newResourceFromPool","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.newResourceFromPool","$kind":"method","$docmaLink":"?api=resource#ResourceManager.newResourceFromPool"},{"comment":"/**\n     * Register a script as resource: this allows to retrieve it using the resourceManager\n     * at runtime.\n     *\n     * `notes`\n     * During athenajs development, systemjs loader was used instead of Webpack\n     * systemjs allows to load any script during *runtime*\n     *\n     * This allowed to load script (sprite) resources at runtime, on-demand.\n     *\n     * Unfortunately, this is not possible at all with ES6/Webpack which needs to\n     * know during build-process which scripts will be needed at runtime to build\n     * dependency graphs.\n     *\n     */","meta":{"range":[13142,13508],"filename":"ResourceManager.js","lineno":374,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Resource","code":{"id":"astnode100000948","name":"registerScript","type":"FunctionExpression"},"vars":{"existing":"ResourceManager.registerScript~existing","this.dynamicScripts[undefined]":"ResourceManager.registerScript#dynamicScripts[undefined]"}},"description":"Register a script as resource: this allows to retrieve it using the resourceManager\nat runtime.\n\n`notes`\nDuring athenajs development, systemjs loader was used instead of Webpack\nsystemjs allows to load any script during *runtime*\n\nThis allowed to load script (sprite) resources at runtime, on-demand.\n\nUnfortunately, this is not possible at all with ES6/Webpack which needs to\nknow during build-process which scripts will be needed at runtime to build\ndependency graphs.","name":"registerScript","longname":"ResourceManager.registerScript","kind":"function","memberof":"ResourceManager","scope":"static","$longname":"ResourceManager.registerScript","$kind":"method","$docmaLink":"?api=resource#ResourceManager.registerScript"}]}],"symbols":["ResourceManager","ResourceManager.addResources","ResourceManager.createObjectPool","ResourceManager.getResourceById","ResourceManager.loadAudio","ResourceManager.loadImage","ResourceManager.loadJSON","ResourceManager.loadNextResource","ResourceManager.loadResources","ResourceManager.loadWadAudio","ResourceManager.newResourceFromPool","ResourceManager.registerScript"]},"notification":{"documentation":[{"comment":"/**\n * The notification manager allows different AthenaJS components to send/receive\n * events.\n */","meta":{"range":[132,1430],"filename":"NotificationManager.js","lineno":7,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/Notification","code":{"id":"astnode100000007","name":"NotificationManager","type":"ObjectExpression","value":"{\"notify\":\"\",\"listen\":\"\"}"}},"description":"The notification manager allows different AthenaJS components to send/receive\nevents.","name":"NotificationManager","longname":"NotificationManager","kind":"constant","scope":"global","params":[],"$longname":"NotificationManager","$kind":"constant","$docmaLink":"?api=notification#NotificationManager","$members":[{"comment":"/**\n     * Listen to a particular event\n     *\n     * @param {String} eventType The event to listen to.\n     * @param {Function} method The callback function to call when notified.\n     */","meta":{"range":[1019,1428],"filename":"NotificationManager.js","lineno":32,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Notification","code":{"id":"astnode100000057","name":"listen","type":"FunctionExpression"},"vars":{"eventList":"NotificationManager.listen~eventList","":null}},"description":"Listen to a particular event","params":[{"type":{"names":["String"]},"description":"The event to listen to.","name":"eventType"},{"type":{"names":["function"]},"description":"The callback function to call when notified.","name":"method"}],"name":"listen","longname":"NotificationManager.listen","kind":"function","memberof":"NotificationManager","scope":"static","$longname":"NotificationManager.listen","$kind":"method","$docmaLink":"?api=notification#NotificationManager.listen"},{"comment":"/**\n     * Notifies all listeners\n     *\n     * @param {String} eventType The event to send.\n     * @param {any} data The data to send with the event.\n     *\n     * Every listener that has subscribed to this event will be notified.\n     */","meta":{"range":[404,820],"filename":"NotificationManager.js","lineno":16,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Notification","code":{"id":"astnode100000010","name":"notify","type":"FunctionExpression"},"vars":{"params":"NotificationManager.notify~params","":null}},"description":"Notifies all listeners","params":[{"type":{"names":["String"]},"description":"The event to send.","name":"eventType"},{"type":{"names":["any"]},"description":"The data to send with the event.\n\nEvery listener that has subscribed to this event will be notified.","name":"data"}],"name":"notify","longname":"NotificationManager.notify","kind":"function","memberof":"NotificationManager","scope":"static","$longname":"NotificationManager.notify","$kind":"method","$docmaLink":"?api=notification#NotificationManager.notify"}]}],"symbols":["NotificationManager","NotificationManager.listen","NotificationManager.notify"]},"utils":{"documentation":[{"comment":"/**\n * Object that allows sending & receving binary data using HTTP\n */","meta":{"range":[114,1190],"filename":"Binary.js","lineno":6,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000007","name":"Binary","type":"ObjectExpression","value":"{\"sendArrayBufferView\":\"\",\"getArrayBuffer\":\"\"}"}},"description":"Object that allows sending & receving binary data using HTTP","name":"Binary","longname":"Binary","kind":"constant","scope":"global","params":[],"$longname":"Binary","$kind":"constant","$docmaLink":"?api=utils#Binary","$members":[{"comment":"/**\n     * Retrieves binary data from the server\n     *\n     * @param {String} url Url to get binary data from.\n     * @returns {Promise} promise that is fullfilled with ArrayBuffer or false if get failed\n     */","meta":{"range":[671,1188],"filename":"Binary.js","lineno":27,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000034","name":"getArrayBuffer","type":"FunctionExpression"},"vars":{"":null}},"description":"Retrieves binary data from the server","params":[{"type":{"names":["String"]},"description":"Url to get binary data from.","name":"url"}],"returns":[{"type":{"names":["Promise"]},"description":"promise that is fullfilled with ArrayBuffer or false if get failed"}],"name":"getArrayBuffer","longname":"Binary.getArrayBuffer","kind":"function","memberof":"Binary","scope":"static","$longname":"Binary.getArrayBuffer","$kind":"method","$docmaLink":"?api=utils#Binary.getArrayBuffer"},{"comment":"/**\n     * Sends binary as POST\n     *\n     * @param {ArrayBufferView} view Binary data to send.\n     * @param {String} url Url to post binary data to.\n     */","meta":{"range":[293,447],"filename":"Binary.js","lineno":13,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000010","name":"sendArrayBufferView","type":"FunctionExpression"},"vars":{"req":"Binary.sendArrayBufferView~req"}},"description":"Sends binary as POST","params":[{"type":{"names":["ArrayBufferView"]},"description":"Binary data to send.","name":"view"},{"type":{"names":["String"]},"description":"Url to post binary data to.","name":"url"}],"name":"sendArrayBufferView","longname":"Binary.sendArrayBufferView","kind":"function","memberof":"Binary","scope":"static","$longname":"Binary.sendArrayBufferView","$kind":"method","$docmaLink":"?api=utils#Binary.sendArrayBufferView"}]},{"comment":"/**\n * Simple wrapper for ES6 native Promise\n * \n * @example\n * \n * import {Deferred} from 'athenajs';\n * \n * let def = new Deferred(),\n * promise = def.promise;\n * \n * setTimeout(() => {\n *   def.resolve('done');\n * }, 5000);\n * \n * promise.then((res) => {\n *  console.log('message recived', res);\n * });\n * \n */","meta":{"range":[350,808],"filename":"Deferred.js","lineno":22,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000103","name":"Deferred","type":"ClassDeclaration","paramnames":[]}},"classdesc":"Simple wrapper for ES6 native Promise","examples":["import {Deferred} from 'athenajs';\n\nlet def = new Deferred(),\npromise = def.promise;\n\nsetTimeout(() => {\n  def.resolve('done');\n}, 5000);\n\npromise.then((res) => {\n console.log('message recived', res);\n});"],"name":"Deferred","longname":"Deferred","kind":"class","scope":"global","description":"Creates a new Deferred.","params":[],"$longname":"Deferred","$kind":"class","$docmaLink":"?api=utils#Deferred","$members":[{"comment":"/**\n     * Creates and immediately resolves a new deferred.\n     *\n     * @param {any} val the value to resolve the promise with\n     * \n     * \n     */","meta":{"range":[742,806],"filename":"Deferred.js","lineno":40,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000133","name":"Deferred.resolve","type":"MethodDefinition","paramnames":["val"]},"vars":{"":null}},"description":"Creates and immediately resolves a new deferred.","params":[{"type":{"names":["any"]},"description":"the value to resolve the promise with","name":"val"}],"name":"resolve","longname":"Deferred.resolve","kind":"function","memberof":"Deferred","scope":"static","$longname":"Deferred.resolve","$kind":"method","$docmaLink":"?api=utils#Deferred.resolve"}],"$constructor":{"comment":"/**\n     * Creates a new Deferred.\n     */","meta":{"range":[418,579],"filename":"Deferred.js","lineno":26,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000106","name":"Deferred","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates a new Deferred.","name":"Deferred","longname":"Deferred","kind":"class","scope":"global","params":[],"undocumented":true,"$longname":"Deferred","$kind":"constructor","$docmaLink":"?api=utils#Deferred"}},{"comment":"/**\n * Dom is a very simple jQuery-like object that allows to manipulate\n * a collection of DOM elements.\n *\n * As in jQuery, you may manipulate individual Dom elements using [] operator\n *\n * @param {(HTMLElement|String)} [selector=null] The optional selector to use to create the new Dom collection\n * \n * @class\n * @constructor\n * \n * @example\n * \n * import {Dom} from 'athenajs';\n * \n * // removes the `foo` class to every `.foo` element\n * Dom('.foo').removeClass('foo');\n */","meta":{"range":[583,1099],"filename":"Dom.js","lineno":21,"columnno":0,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000148","name":"Dom","type":"FunctionDeclaration","paramnames":["selector"]}},"description":"Dom is a very simple jQuery-like object that allows to manipulate\na collection of DOM elements.\n\nAs in jQuery, you may manipulate individual Dom elements using [] operator","params":[{"type":{"names":["HTMLElement","String"]},"optional":true,"defaultvalue":null,"description":"The optional selector to use to create the new Dom collection","name":"selector"}],"kind":"class","classdesc":null,"examples":["import {Dom} from 'athenajs';\n\n// removes the `foo` class to every `.foo` element\nDom('.foo').removeClass('foo');"],"name":"Dom","longname":"Dom","scope":"global","$longname":"Dom","$kind":"constructor","$docmaLink":"?api=utils#Dom"},{"comment":"/**\n     * Add one or more CSS classes to a DOM collection\n     *\n     * @param {String} name space-separated list of classes to add\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[4129,4315],"filename":"Dom.js","lineno":150,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000445","name":"addClass","type":"FunctionExpression"},"vars":{"classes":"Dom#addClass~classes","":null}},"description":"Add one or more CSS classes to a DOM collection","params":[{"type":{"names":["String"]},"description":"space-separated list of classes to add","name":"name"}],"returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"addClass","longname":"Dom#addClass","kind":"function","scope":"instance","$longname":"Dom#addClass","$kind":"method","$docmaLink":"?api=utils#Dom#addClass"},{"comment":"/**\n     * Append current collection to the element with a specific selector\n     *\n     * @param {String|HTMLElement} selector Target element where to append selected elements.\n     * It can either be a CSS selector or a DOM HTMLElement.\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[2958,3246],"filename":"Dom.js","lineno":105,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000355","name":"appendTo","type":"FunctionExpression"},"vars":{"target":"Dom#appendTo~target","":null}},"description":"Append current collection to the element with a specific selector","params":[{"type":{"names":["String","HTMLElement"]},"description":"Target element where to append selected elements.\nIt can either be a CSS selector or a DOM HTMLElement.","name":"selector"}],"returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"appendTo","longname":"Dom#appendTo","kind":"function","scope":"instance","$longname":"Dom#appendTo","$kind":"method","$docmaLink":"?api=utils#Dom#appendTo"},{"comment":"/**\n     * Change multiple attributes at once\n     *\n     * @param {String|Object} att attribute name to modify or list of attributes+values to change\n     * @param {String} val value of the attribute to set\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[3531,3919],"filename":"Dom.js","lineno":126,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000393","name":"attr","type":"FunctionExpression"},"vars":{"":null}},"description":"Change multiple attributes at once","params":[{"type":{"names":["String","Object"]},"description":"attribute name to modify or list of attributes+values to change","name":"att"},{"type":{"names":["String"]},"description":"value of the attribute to set","name":"val"}],"returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"attr","longname":"Dom#attr","kind":"function","scope":"instance","$longname":"Dom#attr","$kind":"method","$docmaLink":"?api=utils#Dom#attr"},{"comment":"/**\n     * jQuery-like CSS method to easily set multiple styles on a dom collection\n     *\n     * @param {String|Object} prop or list of properties with their new value\n     * @param {String} val value of the property\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[1454,2060],"filename":"Dom.js","lineno":51,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000227","name":"css","type":"FunctionExpression"},"vars":{"":null}},"description":"jQuery-like CSS method to easily set multiple styles on a dom collection","params":[{"type":{"names":["String","Object"]},"description":"or list of properties with their new value","name":"prop"},{"type":{"names":["String"]},"description":"value of the property","name":"val"}],"returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"css","longname":"Dom#css","kind":"function","scope":"instance","$longname":"Dom#css","$kind":"method","$docmaLink":"?api=utils#Dom#css"},{"comment":"/**\n     * Returns a new collection with elements matching the selector found inside current collection\n     *\n     * @param {String} selector the selector to match\n     * @returns {Dom} a new Dom collection with found elements\n     * \n     * @memberof Dom#\n     */","meta":{"range":[2337,2642],"filename":"Dom.js","lineno":83,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000307","name":"find","type":"FunctionExpression"},"vars":{"newDom":"Dom#find~newDom","":null}},"description":"Returns a new collection with elements matching the selector found inside current collection","params":[{"type":{"names":["String"]},"description":"the selector to match","name":"selector"}],"returns":[{"type":{"names":["Dom"]},"description":"a new Dom collection with found elements"}],"memberof":"Dom","name":"find","longname":"Dom#find","kind":"function","scope":"instance","$longname":"Dom#find","$kind":"method","$docmaLink":"?api=utils#Dom#find"},{"comment":"/**\n     * Hides specified set of elements\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[5357,5488],"filename":"Dom.js","lineno":210,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000544","name":"hide","type":"FunctionExpression"},"vars":{"":null}},"description":"Hides specified set of elements","returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"hide","longname":"Dom#hide","kind":"function","scope":"instance","$longname":"Dom#hide","$kind":"method","$docmaLink":"?api=utils#Dom#hide"},{"comment":"/**\n     * Changes innerHTML of a collection\n     *\n     * @param {String} html to set as innerHTML\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[4879,4985],"filename":"Dom.js","lineno":184,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000505","name":"html","type":"FunctionExpression"},"vars":{"":null}},"description":"Changes innerHTML of a collection","params":[{"type":{"names":["String"]},"description":"to set as innerHTML","name":"html"}],"returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"html","longname":"Dom#html","kind":"function","scope":"instance","$longname":"Dom#html","$kind":"method","$docmaLink":"?api=utils#Dom#html"},{"comment":"/**\n     * Remove one or more CSS classes to a DOM collection\n     *\n     * @param {String} name Space-separated list of classes to remove.\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[4532,4702],"filename":"Dom.js","lineno":168,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000476","name":"removeClass","type":"FunctionExpression"},"vars":{"classes":"Dom#removeClass~classes","":null}},"description":"Remove one or more CSS classes to a DOM collection","params":[{"type":{"names":["String"]},"description":"Space-separated list of classes to remove.","name":"name"}],"returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"removeClass","longname":"Dom#removeClass","kind":"function","scope":"instance","$longname":"Dom#removeClass","$kind":"method","$docmaLink":"?api=utils#Dom#removeClass"},{"comment":"/**\n     * Shows specified set of elements\n     * @returns {Dom} `this`\n     *\n     * @memberof Dom#\n     */","meta":{"range":[5105,5237],"filename":"Dom.js","lineno":196,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000523","name":"show","type":"FunctionExpression"},"vars":{"":null}},"description":"Shows specified set of elements","returns":[{"type":{"names":["Dom"]},"description":"`this`"}],"memberof":"Dom","name":"show","longname":"Dom#show","kind":"function","scope":"instance","$longname":"Dom#show","$kind":"method","$docmaLink":"?api=utils#Dom#show"},{"comment":"/**\n * Pool support for AthenaJS\n *\n * With a Pool objects are defined ahead of time, and any free instance\n * from the pool is used when you want to use a new object.\n */","meta":{"range":[178,2422],"filename":"Pool.js","lineno":7,"columnno":6,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000570","name":"Pool","type":"ObjectExpression","value":"{\"create\":\"\"}"}},"description":"Pool support for AthenaJS\n\nWith a Pool objects are defined ahead of time, and any free instance\nfrom the pool is used when you want to use a new object.","name":"Pool","longname":"Pool","kind":"constant","scope":"global","params":[],"$longname":"Pool","$kind":"constant","$docmaLink":"?api=utils#Pool","$members":[{"comment":"/**\n     * Creates a new pool\n     *\n     * @param {Function} obj the constructor of the object to add a pool for\n     * @param {Number} size the size of the pool\n     */","meta":{"range":[366,2420],"filename":"Pool.js","lineno":14,"columnno":4,"path":"/home/travis/build/AthenaJS/athenajs/js/Util","code":{"id":"astnode100000573","name":"create","type":"FunctionExpression"},"vars":{"obj._pool":"obj._pool","obj._poolMarker":"obj._poolMarker","obj._poolSize":"obj._poolSize","pool":"Pool.create~pool","obj.createFromPool":"obj.createFromPool","":null,"obj.expandPool":"obj.expandPool","obj.prototype.freeFromPool":"obj#freeFromPool"}},"description":"Creates a new pool","params":[{"type":{"names":["function"]},"description":"the constructor of the object to add a pool for","name":"obj"},{"type":{"names":["Number"]},"description":"the size of the pool","name":"size"}],"name":"create","longname":"Pool.create","kind":"function","memberof":"Pool","scope":"static","$longname":"Pool.create","$kind":"method","$docmaLink":"?api=utils#Pool.create"}]}],"symbols":["Binary","Binary.getArrayBuffer","Binary.sendArrayBufferView","Deferred","Deferred.resolve","Dom","Dom#addClass","Dom#appendTo","Dom#attr","Dom#css","Dom#find","Dom#hide","Dom#html","Dom#removeClass","Dom#show","Pool","Pool.create"]}},"app":{"title":"AthenaJS Documentation","meta":null,"entrance":"content:home","routing":{"method":"query","caseSensitive":true},"server":"github","base":"/athenajs-documentation/","favicon":""},"template":{"name":"docma-template-athenajs","description":"AthenaJS Docma template - based on default Zebra template https://github.com/onury/docma","version":"1.0.0","supportedDocmaVersion":"^3.2.2","author":"Nicolas RAMZ","license":"MIT","mainHTML":"index.html","options":{"title":{"label":"AthenaJS","href":"#"},"logo":{"dark":"img/athena-logo.png","light":"img/athena-logo.png"},"sidebar":{"enabled":true,"itemsFolded":true,"animations":false,"toolbar":false,"outline":"tree","badges":true,"search":true,"collapsed":false,"itemsOverflow":"crop"},"symbols":{"meta":true,"params":"table","autoLink":true,"enums":"list","props":"list"},"navbar":{"menu":[{"iconClass":"fas fa-search","label":"","onClick":"showSearch(); return false;"},{"iconClass":"fas fa-home","label":"Home","href":"./"},{"iconClass":"fas fa-code","label":"Getting Started","href":"?content=start"},{"iconClass":"fas fa-list","label":"API","items":[{"label":"Game","href":"?api=game"},{"label":"Scene","href":"?api=scene"},{"separator":true},{"label":"Drawable","href":"?api=drawable"},{"label":"Drawables","href":"?api=drawables"},{"label":"Behaviors","href":"?api=behaviors"},{"label":"Effects","href":"?api=fx"},{"separator":true},{"label":"Map","href":"?api=map"},{"separator":true},{"label":"AudioManager","href":"?api=audio"},{"label":"InputManager","href":"?api=input"},{"label":"NotificationManager","href":"?api=notification"},{"label":"ResourceManager","href":"?api=resource"},{"separator":true},{"label":"Utils","href":"?api=utils"}],"chevron":true},{"iconClass":"fas fa-gamepad","label":"Made with AthenaJS","href":"?content=made_with_athenajs"},{"iconClass":"fab fa-github","label":"GitHub","href":"https://github.com/AthenaJS/athenajs"}],"enabled":true,"fixed":true,"dark":false,"animations":true},"contentView":{"bookmarks":false,"faVersion":"5.5.0","faLibs":"all"}}},"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","defaultApiName":"_def_","logsEnabled":false}));

!function(){"use strict";var i="path"===docma.app.routing.method;function n(a){return(a.params[1]||"").replace(/\/$/,"")}function a(a,e){var o=n(a)||docma._.defaultApiName,t=docma.createRoute(o,DocmaWeb.Route.Type.API);if(!t||!t.exists())return e();t.apply()}docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),i&&(page("(/)?api/(.+)",a),page("(/)?api(/)?",a),page("(/)?(.*)",function(a,e){var o=n(a),t=docma.createRoute(o,DocmaWeb.Route.Type.CONTENT);if(!t||!t.exists())return e();t.apply()})),page("(/)?",function(c,r){(function(){if(i){var a=sessionStorage.getItem("redirectPath")||null;if(a)return sessionStorage.removeItem("redirectPath"),docma.info("Redirecting to:",a),page.redirect(a),!0}return!1})()||setTimeout(function(){var a,e,o,t=(e=c.querystring,o=e||window.location.search,/^[?&]/.test(o)&&(o=o.slice(1)),o||null);if(i){if(t)return r();a=docma._.appEntranceRI}else docma.log("Query-string:",t),a=t?docma.createRouteFromQuery(t):docma._.appEntranceRI;if(!a||!a.exists())return r();function n(){docma._trigger(DocmaWeb.Event.Navigate,[a])}a.isCurrent()?n():a.apply(function(a){200===a&&n()})},100)}),page("*",function(a){docma.warn("Unknown Route:",a.path),docma.log("context:",a),docma.createRoute(null).apply()}),docma.info("Docma SPA Configuration:"),docma.info("App Title:          ",docma.app.title),docma.info("Routing Method:     ",docma.app.routing.method),docma.info("App Server:         ",docma.app.server),docma.info("Base Path:          ",docma.app.base),docma.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){docma._.initialLoad=!0,docma._.appEntranceRI=docma.createRouteFromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),docma.info("Docma SPA loaded!")}}();